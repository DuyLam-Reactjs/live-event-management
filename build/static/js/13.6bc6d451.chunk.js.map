{"version":3,"sources":["config/ConfigUrl.js","views/users/changePassWord/ChangePassWord.js"],"names":["module","exports","user","LOGIN","CHANGE_PASSWORD","REGISTER","content","inStreamAds","ChangePassWord","dispatch","useDispatch","history","useHistory","useEffect","getUser","useState","old_password","new_password","changePassWord","setChangePassword","onAppLyPassword","a","UserApi","changePassword","then","res","push","ConfigUrl","handleKeyPress","event","key","className","md","lg","xl","name","type","placeholder","autoComplete","onKeyPress","onChange","e","value","target","color","block","onClick","to"],"mappings":"gGAiBEA,EAAOC,QAAU,CACfC,KAdW,CACXC,MAAO,QACPC,gBAAiB,kBACjBC,SAAU,YAWJC,QAPS,GAOAC,YAJI,K,8KC4FRC,UApFQ,WACrB,IAAMC,EAAWC,cACXC,EAAUC,cAEhBC,qBAAU,WAENJ,EAASK,iBAIX,IAEF,MAA4CC,mBAAS,CACnDC,aAAc,GACdC,aAAc,KAFhB,mBAAOC,EAAP,KAAuBC,EAAvB,KAcMC,EAAe,uCAAG,sBAAAC,EAAA,sEAChBC,IAAQC,eAAR,OAAuBL,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAgBF,aAAvC,OAAqDE,QAArD,IAAqDA,OAArD,EAAqDA,EAAgBD,cAAcO,MAAK,SAAAC,GACxFA,GACFd,EAAQe,KAAKC,IAAUzB,KAAKC,MAAQ,aAHlB,2CAAH,qDAOfyB,EAAiB,SAACC,GACJ,UAAdA,EAAMC,KACRV,KAGJ,OACE,qBAAKW,UAAU,qDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOH,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,kEACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,wBAGhB,cAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,eAAeC,aAAa,mBACxDC,WAAYX,EACZY,SAvCA,SAACC,GAC3B,IAAMC,EAAQD,EAAEE,OAAOD,MACvBvB,EAAkB,2BAAID,GAAL,IAAqBF,aAAc0B,WAuCpC,eAAC,IAAD,CAAaX,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOI,KAAK,wBAGhB,cAAC,IAAD,CAAQC,KAAK,WAAWC,YAAY,eAAeC,aAAa,mBACxDE,SA5CA,SAACC,GAC3B,IAAMC,EAAQD,EAAEE,OAAOD,MACvBvB,EAAkB,2BAAID,GAAL,IAAqBD,aAAcyB,MA2C1BH,WAAYX,OAEtB,cAAC,IAAD,CAASgB,MAAM,UAAUC,OAAK,EAACd,UAAU,OAChCe,QAAS1B,EADlB,8BAEA,cAAC,IAAD,CAAO2B,GAAG,sCAAV,SACE,mBAAGhB,UAAU,0BAAb","file":"static/js/13.6bc6d451.chunk.js","sourcesContent":["\n\n\n\n  const user = {\n    LOGIN: 'login',\n    CHANGE_PASSWORD: 'change-password',\n    REGISTER: 'register',\n\n  }\n\n  const content =  {\n\n  }\n  const inStreamAds =  {\n\n  }\n  module.exports = {\n    user, content, inStreamAds\n  }\n","import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText, CLink,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport UserApi from \"../../../apis/userApi\";\nimport {useDispatch} from \"react-redux\";\nimport {getUser} from \"../../../actions/user\";\nimport {useHistory} from \"react-router\";\nimport ConfigUrl from \"../../../config/ConfigUrl\";\n\nconst ChangePassWord = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(()=>{\n    function getList () {\n      dispatch(getUser())\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const [changePassWord, setChangePassword] = useState({\n    old_password: '',\n    new_password: ''\n  })\n\n  const onChangeOldPassword = (e) => {\n    const value = e.target.value\n    setChangePassword({...changePassWord, old_password: value})\n  }\n  const onChangeNewPassword = (e) => {\n    const value = e.target.value\n    setChangePassword({...changePassWord, new_password: value})\n  }\n\n  const onAppLyPassword = async () => {\n    await UserApi.changePassword(changePassWord?.old_password, changePassWord?.new_password).then(res=>{\n      if (res){\n        history.push(ConfigUrl.user.LOGIN + '?rel=/')\n      }\n    })\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onAppLyPassword()\n    }\n  }\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Đổi Mật Khẩu</h1>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Old Password\" autoComplete=\"current-password\"\n                              onKeyPress={handleKeyPress}\n                              onChange={onChangeOldPassword} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"New Password\" autoComplete=\"current-password\"\n                              onChange={onChangeNewPassword}\n                              onKeyPress={handleKeyPress}/>\n                    </CInputGroup>\n                    <CButton color=\"success\" block className=\"px-4\"\n                             onClick={onAppLyPassword}>Xác nhận</CButton>\n                    <CLink to=\"/instream-ads/content-provider-list\">\n                      <p className=\"mt-3 mb-0 register-back\">Quay lại Instream Ads Tool</p>\n                    </CLink>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ChangePassWord\n"],"sourceRoot":""}