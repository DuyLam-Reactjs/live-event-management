{"version":3,"sources":["views/instream-ads/TitleAds/TitleAds.js","views/base/tables/TablesContentProviderList.js","views/instream-ads/ContentProviderList/ContentProviderList.js"],"names":["TitleAds","props","title","isCreateProvider","editContentProvider","className","style","color","getBadge","status","fields","rowPerPageList","id","name","value","TablesContentProviderList","history","useHistory","useState","currentPage","setCurrentPage","rowPerPage","setRowPerPage","maxPage","setMaxPage","total","setTotal","currentPageList","setCurrentPageList","valueKeyword","setKeyword","useEffect","contentApi","getListContentProvider","then","res","data","items","metadata","success","max","parsedPageLimit","onClickSearch","trim","type","placeholder","autoComplete","onChange","e","target","toLowerCase","onKeyPress","event","key","onClick","content","freeSet","cilSearch","size","margin","to","push","itemsPerPage","scopedSlots","item","verticalAlign","labelOn","labelOff","checked","readOnly","total_content","handleContent","marginBottom","parsedTimeCreate","created_at","block","onEditContentItem","src","ConfigImage","edit","alt","width","map","index","onChangePage","nextButton","previousButton","activePage","pages","onActivePageChange","ContentProviderList"],"mappings":"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","file":"static/js/11.194d84e1.chunk.js","sourcesContent":["import React from \"react\";\nimport {CCol, CRow} from \"@coreui/react\";\n\nconst TitleAds = (props) => {\n  const {title, isCreateProvider, editContentProvider} = props\n  return (\n    <CRow className=\"pt-2 pb-4\">\n      <CCol className=\"col-lg-7\">\n        {isCreateProvider &&\n          <h3 className=\"m-0\">\n            <span style={{color:'#9B9B9B'}}> Content Provider List </span><strong> / Thêm Content Provider</strong>\n          </h3>\n        }\n        {editContentProvider &&\n          <h3 className=\"m-0\">\n            <span style={{color:'#9B9B9B'}}> Content Provider List </span><strong> / Sửa Content Provider</strong>\n          </h3>\n        }\n        <h2>{title}</h2>\n      </CCol>\n\n    </CRow>\n  )\n}\n\nexport default TitleAds\n","import React, {useEffect, useState} from 'react'\nimport {\n  CBadge, CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg, CInput, CInputGroup,\n  CLink, CPagination,\n  CRow, CSwitch\n} from '@coreui/react'\n\nimport CIcon from \"@coreui/icons-react\";\nimport {useHistory} from 'react-router-dom';\nimport {parsedTimeCreate, parsedPageLimit, handleLocalStorage} from \"../../../helpers/common\";\nimport {freeSet} from \"@coreui/icons\";\nimport contentApi from \"../../../apis/contentApi\";\nimport TitleAds from \"../../instream-ads/TitleAds/TitleAds\";\nimport ConfigImage from \"../../../config/ConfigImage\";\nimport LocalStorage from \"../../../config/LocalStorage\";\n\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'white'\n\n    default: return 'white'\n  }\n}\nconst fields = ['Tên Content Provider','Trạng Thái', 'Số Nội Dung', 'Ngày Tạo', 'Quản lý']\n\n\nconst TablesContentProviderList = () => {\n  const history = useHistory()\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [maxPage, setMaxPage] = useState(1);\n  const [total, setTotal] = useState()\n  const [currentPageList, setCurrentPageList] = useState()\n  const [valueKeyword, setKeyword] = useState('')\n\n  useEffect(()=>{\n    if (!valueKeyword)\n    contentApi?.getListContentProvider(rowPerPage, currentPage -1).then(res=>{\n      const data = res?.data\n      const {items, metadata} = data || {}\n      if (res?.success){\n        setCurrentPageList(items)\n        setTotal(metadata?.total)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[rowPerPage, currentPage])\n\n  useEffect(() => {\n    if (currentPageList) {\n      let max = parsedPageLimit(total, rowPerPage)\n      setMaxPage(max)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, rowPerPage])\n\n  const handleChange = e => {\n    let value = e.target.value.toLowerCase()\n    setKeyword(value)\n  }\n\n  const onClickSearch = () => {\n      contentApi.getListContentProvider(rowPerPage, currentPage-1, valueKeyword.trim()).then(res=>{\n        if (res.success){\n          const data = res?.data\n          setCurrentPageList(data?.items)\n          setTotal(data?.metadata?.total)\n          setCurrentPage(1)\n        }\n      })\n  }\n\n  const onChangePage = (item) => {\n    setRowPerPage(item?.value)\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onClickSearch();\n    }\n  }\n\n\n  const onAddContentProvider = () =>{\n    history.push('/instream-ads/content-provider-list/create-content-provider')\n  }\n  const onEditContentItem = (item) => {\n    history.push('/instream-ads/content-provider-list/edit-content-provider?id=' + item?.id)\n  }\n  const handleContent = (item) => {\n    history.push('/instream-ads/content-list?id=' + item?.id)\n  }\n\n  return (\n    <>\n      <TitleAds title={\"Content Provider List\"}/>\n      <CRow className={'row mx-0'}>\n        <CCol  className=\"col-sm-6 form-inline p-0 c-datatable-filter\">\n          <CInputGroup className=\"mb-3\">\n            <CInput\n                    className=\"input-search\"\n                    type=\"text\" placeholder=\"Tìm Content Provider\" autoComplete=\"search\"\n                    onChange={handleChange}\n                    value={valueKeyword}\n                    onKeyPress={handleKeyPress}\n            />\n            <button className=\"btn btn-square btn-default color-black btn-search\"\n                    onClick={onClickSearch}>\n              <CIcon content={freeSet.cilSearch} size={'lg'}style={{margin: 0}} />\n            </button>\n          </CInputGroup>\n        </CCol>\n        <CCol  className=\"col-sm-6 p-0 \">\n          <div className=\"form-inline justify-content-sm-end c-datatable-items-per-page\">\n\n            <CLink to=\"/instream-ads/content-provider-list/create-content-provider\">\n              <button className=\"btn btn-success mb-3\"  onClick={onAddContentProvider}>\n                Thêm Content Provider\n              </button>\n            </CLink>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow className={'justify-content-between'}>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                items={ currentPageList}\n                fields={fields}\n                itemsPerPage={10}\n                scopedSlots = {{\n                  'Tên Content Provider':\n                    (item)=>(\n                      <td className=\"text-name-provider\" title={item?.name}>\n                        <strong>{item?.name}</strong>\n                      </td>\n                    ),\n                  'Trạng Thái':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                            <CSwitch className={'mx-1'} color={'success'} labelOn={'ON'} labelOff={'OFF'}\n                                     checked={item?.status === 1 ? true : false } readOnly/>\n                      </td>\n                    ),\n                  'Số Nội Dung':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                        {item?.total_content > 0 &&\n                          <div>\n                            <CLink className=\"clink\" onClick={()=>handleContent(item)}>\n                              {item?.total_content}\n                            </CLink>\n                          </div>\n                        }\n                      </td>\n                    ),\n                  'Ngày Tạo':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                        <p style={{marginBottom: \"0px\"}}>{parsedTimeCreate(item?.created_at)}</p>\n                      </td>\n                    ),\n                  'Quản lý':\n                    (item)=>(\n                      <td>\n                        <CBadge color={getBadge(item.status)}>\n                          <CButton block color=\"info\" onClick={()=>onEditContentItem(item)}>\n                            <CImg src={ConfigImage.edit} alt=\"edit\"/> <span className=\"ml-1\">Chỉnh sửa</span>\n                          </CButton>\n                        </CBadge>\n                      </td>\n                    ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <div className=\"m-1 d-flex justify-content-between align-items-center\">\n        <CDropdown className=\"btn-group\" style={{ width: '100px',  }}>\n          <CDropdownToggle color=\"default\" className='shadow-none mb-2 row-page color-white'>\n            <span className=\"mr-2\" style={{ color: '#222'}}>{rowPerPage + ' dòng'}</span>\n          </CDropdownToggle>\n          <CDropdownMenu>\n            {rowPerPageList && (rowPerPageList || []).map((item, index) => {\n              return (\n                <CDropdownItem key={index} onClick={()=>onChangePage(item)}>{item?.name}</CDropdownItem>\n              )\n            })\n            }\n          </CDropdownMenu>\n        </CDropdown>\n        <CPagination\n          nextButton={'Sau'}\n          previousButton={'Trước'}\n          activePage={currentPage}\n          pages={maxPage}\n          onActivePageChange={setCurrentPage}\n        />\n      </div>\n    </>\n  )\n}\nconst rowPerPageList = [\n  { id: 1, name: '5 dòng', value: 5 },\n  { id: 2, name: '10 dòng', value: 10 },\n  { id: 3, name: '20 dòng', value: 20 },\n]\nexport default TablesContentProviderList\n","import React from 'react'\nimport TablesContentProviderList from \"../../base/tables/TablesContentProviderList\";\n\nconst ContentProviderList = () => {\n  return (\n      <TablesContentProviderList/>\n    )\n}\nexport default ContentProviderList\n"],"sourceRoot":""}