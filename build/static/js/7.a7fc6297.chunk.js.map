{"version":3,"sources":["helpers/common.js","config/LocalStorage.js","config/ConfigConstant.js","models/login.js","apis/userApi.js","config/ConfigCookie.js","config/ConfigEnv.js","config/ConfigApi.js","customRequest.js","apis/axiosClient.js","config/ConfigUrl.js","actions/user.js","views/users/changePassWord/ChangePassWord.js"],"names":["setUrlParams","url","params","newUrl","URL","Object","keys","forEach","key","searchParams","set","validateEmail","email","test","String","toLowerCase","handleLocalStorage","action","value","window","localStorage","LocalStorage","GET","getItem","SET","setItem","REMOVE","removeItem","CLEAR","clear","e","error","parsedTimeCreate","time","utcDate","Date","offset","getTimezoneOffset","getTime","toLocaleString","parsedIdContentProvider","item","arrId","it","push","id","sendToast","message","toast","info","parsedNumberUrl","vastUrl","numberVastUrl","url_1","url_2","url_3","parsedIdAdsGroups","contentProviderItem","newArrAds","provider","adsGroups","agr","el","status","parsedPageLimit","total","rowPerPage","max","Math","floor","saveAccessToken","accessToken","timeNow","setFullYear","getFullYear","option","expires","path","ConfigCookie","getTokenKey","type","METHOD","SAVE","handleCookie","KEY","ANONYMOUS_TOKEN","RE_LOGIN","removeAccessToken","router","notRefresh","a","remove","ACCESS_TOKEN","ACCESS_TOKEN_TEST","ACCESS_TOKEN_DEV","location","reload","classUseStyles","theme","root","transform","color","fontSize","textOverflow","whiteSpace","maxWidth","overflow","inputRoot","paddingLeft","borderColor","CONTENT_PROVIDER","FIRST_LOGIN","TRIAL_APP","USER_GUEST","LOGIN","DEVICE_ID","ID_CONTENT_PROVIDER","module","exports","API_METHOD","POST","PUT","DELETE","PATCH","Login","props","this","token","profile","user_data","UserApi","password","ConfigApi","user","login","method","ConfigConstant","AxiosClient","executeWithCache","then","res","data","oldPassword","newPassword","changePassword","old_password","new_password","page","limit","listUser","idUser","read","write","is_admin","role","userProfile","LOAD","domainAPI","ConfigEnv","isTesting","includes","isDev","Cookie","save","load","removeOption","oldOption","domain","DEFAULT_PORT","process","PORT","BUILD_ID","ENV","DOMAIN_API","STATIC_DOMAIN","content","contentProvider","getContentList","getContentType","getContentCategories","inStreamAds","listInStreamAds","getListAllInStreamAds","axios","interceptors","request","use","cfg","timeout","cookie","headers","Promise","reject","http","config","newParams","configAxios","Authorization","axiosUrl","href","get","responseData","createResponseData","catch","response","post","delete","put","success","statusText","httpCode","_data","problem","Array","isArray","items","CHANGE_PASSWORD","REGISTER","getUser","dispatch","result","ACTION_TYPE","PROFILE","payload","ChangePassWord","useDispatch","history","useHistory","useEffect","useState","changePassWord","setChangePassword","onAppLyPassword","ConfigUrl","handleKeyPress","event","className","md","lg","xl","name","placeholder","autoComplete","onKeyPress","onChange","target","block","onClick","to"],"mappings":"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","file":"static/js/7.a7fc6297.chunk.js","sourcesContent":["import LocalStorage from \"../config/LocalStorage\";\nimport ConfigCookie from \"../config/ConfigCookie\";\nimport {toast} from \"react-toastify\";\n\n\n\n\nconst setUrlParams = (url, params) => {\n  let newUrl = new URL(url);\n  (params && Object.keys(params)) && Object.keys(params).forEach(key => {\n    if (params[key]) {\n      newUrl.searchParams.set(key, params[key])\n    }\n  })\n  return newUrl\n}\nconst validateEmail = (email) => {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n}\n\nconst json_to_query_string = (json) => {\n  return Object.keys(json)\n    .map(function (key) {\n      return encodeURIComponent(key) + '=' + encodeURIComponent(json[key])\n    })\n    .join('&')\n}\n\nconst handleLocalStorage  = (action, key, value) => {\n\n  if (typeof window === 'undefined' || !window.localStorage) return ''\n  try {\n    if (action === LocalStorage.GET) {\n      return (window.localStorage.getItem(key))\n    } else if (action === LocalStorage.SET) {\n      return window.localStorage.setItem(key, value)\n    } else if (action === LocalStorage.REMOVE) {\n      return window.localStorage.removeItem(key)\n    }\n    if (action === LocalStorage.CLEAR) {\n      return window.localStorage.clear()\n    }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nfunction parsedTimeCreate  (time) {\n  let utcDate = new Date(time);\n  let offset = new Date().getTimezoneOffset() * 60000;\n  let localDate = new Date(utcDate.getTime() + offset);\n  return localDate.toLocaleString(\"en-GB\")\n}\nfunction parsedIdContentProvider (item) {\n  let arrId = []\n  item?.forEach((it)=>{\n    arrId.push(it?.id)\n  })\n  return arrId\n}\nfunction sendToast ({ message }) {\n\n  return (toast.info(message))\n}\nfunction parsedNumberUrl (vastUrl) {\n  const {url_1, url_2, url_3} = vastUrl || {}\n\n  let numberVastUrl = ''\n  if (url_1) numberVastUrl = 1\n  if (url_2) numberVastUrl += 1\n  if (url_3) numberVastUrl += 1\n\n  return numberVastUrl\n}\nfunction parsedIdAdsGroups (contentProviderItem) {\n  let newArrAds = []\n  contentProviderItem?.forEach((provider)=>{\n    provider?.adsGroups?.forEach((agr)=>{\n      const el = {}\n      el.id = agr?.id\n      el.status = agr?.status\n      newArrAds.push(el)\n    })\n  })\n  return newArrAds\n}\n\n\n// function parsedTypeContentList (type) {\n//   switch (type) {\n//     case 1 : return 'Single Movie'\n//     case 2 : return 'Show/Drama'\n//     case 3 : return 'Season'\n//     case 4 : return 'Episode'\n//     case 5 : return 'LiveTv'\n//     case 6 : return 'Trailer'\n//     case 7 : return 'Epg'\n//     case 8 : return 'Live Stream'\n//     case 9 : return 'Single Movie'\n//   }\n//   return type\n// }\n\n\n// function parsedStatusContentList (status) {\n//   switch (status) {\n//     case -1 : return 'Delete'\n//     case 1 : return 'Chờ xử lý'\n//     case 2 : return 'Chờ QC'\n//     case 3 : return 'Xuất bản'\n//     case 4 : return 'Tạm ngưng x.bản'\n//     case 5 : return 'Tái xuất bản'\n//     case 6 : return 'Đóng'\n//     case 7 : return 'Schedule Publish'\n//     case 8 : return 'Chờ soạn thảo'\n//     case 9 : return 'Review'\n//\n//   }\n//   return status\n// }\n\nexport function parsedPageLimit  (total, rowPerPage) {\n  let max = Math.floor(total / rowPerPage)\n  if (total % rowPerPage !== 0) {\n    max++;\n  }\n  if (max === 0) {\n    max = 1;\n  }\n  return max\n}\n\nfunction parseContentList (items) {\n  if (!items || items.length === 0) return []\n  return items\n}\n\nfunction saveAccessToken (accessToken) {\n  //time expire token\n  const timeNow = new Date()\n  timeNow.setFullYear(timeNow.getFullYear() + 1)\n  //save access token\n  const option = {\n    expires: timeNow,\n    // domain: 'http://localhost:3000',\n    path: '/'\n  }\n\n  try {\n    const key = ConfigCookie.getTokenKey()\n    const type = ConfigCookie.METHOD.SAVE\n    const value = accessToken\n    ConfigCookie.handleCookie({ type, key, value, option })\n    ConfigCookie.handleCookie({\n      type: ConfigCookie.METHOD.REMOVE,\n      key: ConfigCookie.KEY.ANONYMOUS_TOKEN,\n      option\n    })\n    handleLocalStorage(LocalStorage.SET, LocalStorage.RE_LOGIN, true)\n    handleLocalStorage(LocalStorage.SET, 'Token', accessToken)\n  } catch (e) {\n    throw e\n  }\n}\nasync function removeAccessToken (router, notRefresh) {\n  try {\n    await ConfigCookie.remove(ConfigCookie.KEY.ACCESS_TOKEN)\n    await ConfigCookie.remove(ConfigCookie.KEY.ACCESS_TOKEN_TEST)\n    await ConfigCookie.remove(ConfigCookie.KEY.ACCESS_TOKEN_DEV)\n    await ConfigCookie.remove(ConfigCookie.KEY.ANONYMOUS_TOKEN)\n  } catch (e) {\n    throw e\n  }\n\n  if (typeof window === 'undefined') return\n\n  if (!notRefresh) {\n    window.location.reload()\n  }\n}\n\nconst classUseStyles = (theme) => ({\n  root: {\n    \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n      transform: \"transparent\"\n    },\n    \"& .MuiFormLabel-root\": {\n      color: '#222222',\n      fontSize: \"12.5px\"\n    }\n    ,\"& .MuiSvgIcon--root\": {\n      color: '#636f83',\n    }\n    ,\"& .MuiInputLabel-root\": {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      maxWidth: '50%',\n      overflow: 'hidden',\n    }\n  },\n  inputRoot: {\n    color: \"#222222\",\n    fontSize: \"12.5px\",\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n      paddingLeft: 5.25\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    },\n    \"&:hover .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    },\n    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    }\n  }\n})\n\n\n\nexport {\n  sendToast,\n  setUrlParams,\n  validateEmail,\n  saveAccessToken,\n  handleLocalStorage,\n  json_to_query_string,\n  parsedTimeCreate,\n  parseContentList,\n  parsedIdContentProvider,\n  parsedIdAdsGroups,\n  parsedNumberUrl,\n  classUseStyles,\n  removeAccessToken\n}\n\n","\nexport default {\n    // action\n    GET: \"GET\",\n    SET: \"SET\",\n    REMOVE: \"REMOVE\",\n    CLEAR: \"CLEAR\",\n\n    // keys\n    CONTENT_PROVIDER:'CONTENT_PROVIDER',\n    FIRST_LOGIN: \"FIRST_LOGIN\",\n    TRIAL_APP: \"TRIAL_APP\",\n    USER_GUEST: \"USER_GUEST\",\n    RE_LOGIN: \"RE_LOGIN\",\n    LOGIN: \"LOGIN\",\n    DEVICE_ID: \"DEVICE_ID\",\n    ID_CONTENT_PROVIDER: 'ID_CONTENT_PROVIDER',\n\n}\n","\n\n\n  const  API_METHOD = {\n    GET: 'GET',\n    POST: 'POST',\n    PUT: 'PUT',\n    DELETE: 'DELETE',\n    PATCH: 'PATCH'\n  }\n  const ANONYMOUS_TOKEN =  'token_anonymous'\n\nmodule.exports = {\n  API_METHOD,\n    ANONYMOUS_TOKEN\n}\n\n","class Login {\n  constructor (props) {\n    this.accessToken = props?.token\n    this.profile = props?.user_data\n    this.message = props?.message\n  }\n}\n\nexport default Login\n\n","\nimport Login from \"../models/login\";\nimport ConfigApi from \"../config/ConfigApi\";\nimport AxiosClient from \"./axiosClient\";\nimport ConfigConstant from \"../config/ConfigConstant\";\n\n\nclass UserApi {\n  static async login (email, password) {\n    const url = ConfigApi.user.login\n    const method = ConfigConstant.API_METHOD.POST\n    const params = {\n      email: email,\n      password: password,\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = new Login(res?.data)\n      return { ...res, data }\n    })\n  }\n  static async changePassword (oldPassword, newPassword) {\n    const url = ConfigApi.user.changePassword\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      old_password: oldPassword,\n      new_password: newPassword,\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async listUser (page, limit) {\n    const url = ConfigApi.user.listUser + '?page=' + page + '&limit=' + limit\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async deleteUser (idUser) {\n    const url = ConfigApi.user.listUser + '/' + idUser\n    const method = ConfigConstant.API_METHOD.DELETE\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async updateInfoUser (id, email, {read, write, is_admin}) {\n    const url = ConfigApi.user.listUser + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      email: email,\n      role: {\n        read: read,\n        write: write,\n        is_admin: is_admin\n      }\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async createUser (user) {\n    const url = ConfigApi.user.listUser\n    const method = ConfigConstant.API_METHOD.POST\n    const params = user\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async userProfile () {\n    const url = ConfigApi.user.userProfile\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n}\n\nexport default UserApi\n","import Cookie from 'react-cookies'\nimport * as ConfigEnv from './ConfigEnv'\n\nconst KEY = {\n  ACCESS_TOKEN : 'access_token',\n  ACCESS_TOKEN_TEST : 'access_token_test',\n  ACCESS_TOKEN_DEV : 'access_token_dev',\n  ANONYMOUS_TOKEN : 'anonymous_token',\n}\n\nconst METHOD = {\n  SAVE: 'SAVE',\n  LOAD: 'LOAD',\n  REMOVE: 'REMOVE',\n}\n\n\nfunction getTokenKey () {\n  let key = KEY.ACCESS_TOKEN\n  const domainAPI = ConfigEnv.DOMAIN_API\n  const isTesting = (domainAPI || '').includes('testing-api')\n  const isDev = (domainAPI || '').includes('dev-api')\n  if (isTesting) key = KEY.ACCESS_TOKEN_TEST\n  else if (isDev) key = KEY.ACCESS_TOKEN_DEV\n  return key\n}\n\nfunction handleCookie ({type, key, value, option}) {\n  //time expire token\n  switch (type) {\n    case METHOD.SAVE: {\n      return Cookie.save(key, value, option)\n    }\n    case METHOD.LOAD: {\n      return Cookie.load(key)\n    }\n    case METHOD.REMOVE: {\n      Cookie.remove(key, option)\n      return\n    }\n  }\n\n}\nfunction remove(key, removeOption){\n  const timeNow = new Date()\n  timeNow.setFullYear(timeNow.getFullYear() + 1)\n  const option = { expires: timeNow, path: '/' }\n  const oldOption = { expires: timeNow, domain: '.vieon.vn', path: '/' }\n\n  if(removeOption) {\n    Cookie.remove(key, removeOption)\n  } else {\n    Cookie.remove(key, option)\n    Cookie.remove(key, oldOption)\n  }\n\n}\n\nexport default {\n  KEY, METHOD,\n  getTokenKey,\n  handleCookie,\n  remove,\n}\n","// const DOMAIN_API = process.env.REACT_APP_API\nconst DOMAIN_API =  'https://dev-api.vieon.vn' + '/'\n\nconst STATIC_DOMAIN = process.env.REACT_APP_STATIC_DOMAIN\nconst DEFAULT_PORT = process.env.PORT\nconst BUILD_ID = typeof process.env.BUILD_ID !== 'undefined' ? process.env.BUILD_ID : new Date().getTime() + ''\n\nmodule.exports = {\n  ENV: process.env.NODE_ENV,\n  DOMAIN_API,\n  BUILD_ID, \n  STATIC_DOMAIN,\n  DEFAULT_PORT,\n}\n","import { DOMAIN_API } from \"./ConfigEnv\"\n\n\nconst ConfigApi = {\n  user: {\n    login: DOMAIN_API + 'live-event/v1.0/customers/login',\n    changePassword: DOMAIN_API + 'admin-ads/user/change-password',\n    listUser: DOMAIN_API + 'admin-ads/users',\n    userProfile: DOMAIN_API + 'admin-ads/user',\n  },\n  content:{\n    contentProvider: DOMAIN_API + 'admin-ads/content-providers',\n    getContentList:  DOMAIN_API + 'admin-ads/contents',\n    getContentType:  DOMAIN_API + 'admin-ads/list-all/content-types',\n    getContentCategories:  DOMAIN_API + 'admin-ads/list-all/content-categories',\n  },\n  inStreamAds: {\n    inStreamAds: DOMAIN_API + 'admin-ads/instream-ads',\n    listInStreamAds: DOMAIN_API + 'admin-ads/content-providers',\n    getListAllInStreamAds: DOMAIN_API + 'admin-ads/list-all/content-providers',\n\n  }\n}\n\nexport default  ConfigApi\n","import axios from \"axios/index\";\nimport cookie from 'react-cookies';\nimport ConfigCookie from './config/ConfigCookie'\n\n\naxios.interceptors.request.use(cfg => {\n    cfg.timeout = 10000;\n    if(!cfg.params){\n        cfg.params = {}\n    }\n    const accessToken = cookie.load(ConfigCookie.getTokenKey());\n    if (accessToken) {\n        cfg.headers['Authorization'] = accessToken || '';\n        return cfg;\n    }\n    return cfg\n\n}, error => {\n    return Promise.reject(error);\n});\nexport default axios\n","\n\nimport ConfigConstant from '../config/ConfigConstant'\nimport { setUrlParams} from '../helpers/common'\nimport Http from '../customRequest'\nlet http = Http\n\n\nexport default class AxiosClient {\n\n  static executeWithCache ({ url, method, params, config, accessToken }) {\n    const newParams = {\n      ...params,\n    }\n    let configAxios = { ...(config || {}) }\n\n    let token = accessToken || ''\n\n    if (token) {\n      configAxios.headers = { ...(configAxios.headers || {}), Authorization: token || '' }\n    }\n    const { API_METHOD } = ConfigConstant\n    switch (method) {\n      case API_METHOD.GET: {\n        let newUrl = setUrlParams(url, params)\n        const axiosUrl = newUrl?.href\n        return http.get(axiosUrl, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.POST: {\n        // let data = json_to_query_string(newParams || {})\n        let data = newParams || {}\n        // if (config?.headers) data = newParams || {}\n        return http.post(url, data, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.DELETE: {\n        return http.delete(url, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.PUT: {\n        let data = newParams || {}\n        return http.put(url, data,configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      default:\n    }\n  }\n\n}\nclass responseData {\n\n  constructor () {\n    this.success = false\n    this.statusText = ''\n    this.message = ''\n    this.data = null\n    this.httpCode = 0\n  }\n\n  static createResponseData (_data) {\n    let data = new responseData()\n    if (_data) {\n      data.httpCode = _data.status\n      data.success = _data.status === 200\n      data.statusText = _data.statusText || ''\n      if (_data.problem && _data.problem === 'TIMEOUT_ERROR') {\n        data.message = 'Request timeout'\n      }\n      data.message = _data.message || ''\n      if (Array.isArray(_data.data)) {\n        data.data = { items: _data.data }\n      } else {\n        data.data = _data.data || null\n      }\n    }\n    return data\n  }\n}\n","\n\n\n\n  const user = {\n    LOGIN: 'login',\n    CHANGE_PASSWORD: 'change-password',\n    REGISTER: 'register',\n\n  }\n\n  const content =  {\n\n  }\n  const inStreamAds =  {\n\n  }\n  module.exports = {\n    user, content, inStreamAds\n  }\n","import UserApi from \"../apis/userApi\";\nimport {ACTION_TYPE} from \"./actionType\";\n\n\nexport const getLogin = (email, password) =>{\n  return dispatch => {\n    return UserApi.login(email, password).then(res => {\n      const result = {\n        type: ACTION_TYPE.LOGIN,\n        payload: res\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\nexport const getUser = () =>{\n  return dispatch => {\n    return UserApi.userProfile().then(res => {\n      const result = {\n        type: ACTION_TYPE.PROFILE,\n        payload: res\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\nexport const getListUser = () =>{\n  return dispatch => {\n    return UserApi.listUser().then(res => {\n      const result = {\n        type: ACTION_TYPE.LIST_USER,\n        payload: res\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n  return dispatch => {\n    return UserApi.deleteUser(id).then(res => {\n      const result = {\n        type: ACTION_TYPE.DELETE_USER,\n        payload: id\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\n\nexport const updateInfoUser = (id, email, {read, write, is_admin}) => {\n  return dispatch => {\n    return UserApi.updateInfoUser(id, email, {read, write, is_admin}).then(res => {\n      const result = {\n        type: ACTION_TYPE.UPDATE_INFO_USER,\n        payload: res\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\n\nexport const updatePassword =  (oldPassword, newPassword) =>{\n  return dispatch => {\n    return UserApi.changePassword(oldPassword, newPassword).then(res => {\n      const result = {\n        type: ACTION_TYPE.CHANGE_PASSWORD,\n        payload: res\n      }\n      dispatch(result)\n      return res\n    })\n  }\n}\n\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText, CLink,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport UserApi from \"../../../apis/userApi\";\nimport {useDispatch} from \"react-redux\";\nimport {getUser} from \"../../../actions/user\";\nimport {useHistory} from \"react-router\";\nimport ConfigUrl from \"../../../config/ConfigUrl\";\n\nconst ChangePassWord = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(()=>{\n    function getList () {\n      dispatch(getUser())\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const [changePassWord, setChangePassword] = useState({\n    old_password: '',\n    new_password: ''\n  })\n\n  const onChangeOldPassword = (e) => {\n    const value = e.target.value\n    setChangePassword({...changePassWord, old_password: value})\n  }\n  const onChangeNewPassword = (e) => {\n    const value = e.target.value\n    setChangePassword({...changePassWord, new_password: value})\n  }\n\n  const onAppLyPassword = async () => {\n    await UserApi.changePassword(changePassWord?.old_password, changePassWord?.new_password).then(res=>{\n      if (res){\n        history.push(ConfigUrl.user.LOGIN + '?rel=/')\n      }\n    })\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onAppLyPassword()\n    }\n  }\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Đổi Mật Khẩu</h1>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Old Password\" autoComplete=\"current-password\"\n                              onKeyPress={handleKeyPress}\n                              onChange={onChangeOldPassword} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"New Password\" autoComplete=\"current-password\"\n                              onChange={onChangeNewPassword}\n                              onKeyPress={handleKeyPress}/>\n                    </CInputGroup>\n                    <CButton color=\"success\" block className=\"px-4\"\n                             onClick={onAppLyPassword}>Xác nhận</CButton>\n                    <CLink to=\"/instream-ads/content-provider-list\">\n                      <p className=\"mt-3 mb-0 register-back\">Quay lại Instream Ads Tool</p>\n                    </CLink>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default ChangePassWord\n"],"sourceRoot":""}