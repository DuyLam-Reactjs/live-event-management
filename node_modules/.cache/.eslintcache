[{"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/index.js":"1","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/polyfill.js":"2","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/serviceWorker.js":"3","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/App.js":"4","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/store.js":"5","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/index.js":"6","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/index.js":"7","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/sygnet.js":"8","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/logo-negative.js":"9","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/logo.js":"10","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigUrl.js":"11","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/helpers/common.js":"12","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/popup.js":"13","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/inStreamAds.js":"14","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/content.js":"15","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/app.js":"16","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/actionType.js":"17","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/axiosClient.js":"18","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigApi.js":"19","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigConstant.js":"20","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheLayout.js":"21","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/LocalStorage.js":"22","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigCookie.js":"23","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/login.js":"24","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/initialState.js":"25","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigEnv.js":"26","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/customRequest.js":"27","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/app.js":"28","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/index.js":"29","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheSidebar.js":"30","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/constants/constants.js":"31","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigImage.js":"32","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/_nav.js":"33","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheHeaderDropdown.js":"34","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheHeader.js":"35","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheContent.js":"36","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/popup.js":"37","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/contentApi.js":"38","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/content.js":"39","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/routes.js":"40","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/contentList.js":"41","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/content.js":"42","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/ContentProviderItem.js":"43","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/inStreamAds.js":"44","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/TablesContentList.js":"45","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/AdsGroupsList.js":"46","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/CustomTableContentList.js":"47","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/Popup.js":"48","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/LiveEventList/LiveEventList.js":"49","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/TablesLiveEventList.js":"50","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDuplicateAds.js":"51","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateNewAds.js":"52","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddContentList.js":"53","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContentList.js":"54","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDeleteAds.js":"55","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateNewInStreamAds.js":"56","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContent.js":"57","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/autoCompleteMaterialUI/AutoCompleteMaterial.js":"58","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupContent.js":"59","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddVast.js":"60","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDeleteLiveItem.js":"61","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/liveEventApi.js":"62","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditLiveEvent.js":"63","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/login/Login.js":"64","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/changePassWord/ChangePassWord.js":"65","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupLogout.js":"66","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/createCustomer/CreateCustomer.js":"67","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/CustomerList.js":"68","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupUpdateCustomer.js":"69","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/customerApi.js":"70","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupDeleteCustomer.js":"71","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigText.js":"72","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateLiveEntity.js":"73","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupCreateCustomer.js":"74","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/CreateLiveEntity/CreateLiveEntity.js":"75","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/TitleLive/TitleLive.js":"76","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/CreateLiveEntity/CreateLiveEntityInfo/CreateLiveEntityInfo.js":"77","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/customer.js":"78","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/customer.js":"79","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigData.js":"80","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupUpdateStatusCustomer.js":"81","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddRelay.js":"82"},{"size":735,"mtime":1619071042698,"results":"83","hashOfConfig":"84"},{"size":1895,"mtime":1619071042700,"results":"85","hashOfConfig":"84"},{"size":4686,"mtime":1619071042702,"results":"86","hashOfConfig":"84"},{"size":1348,"mtime":1627979249467,"results":"87","hashOfConfig":"84"},{"size":299,"mtime":1619071042703,"results":"88","hashOfConfig":"84"},{"size":3813,"mtime":1619071042694,"results":"89","hashOfConfig":"84"},{"size":322,"mtime":1627981741258,"results":"90","hashOfConfig":"84"},{"size":978,"mtime":1619071042695,"results":"91","hashOfConfig":"84"},{"size":6933,"mtime":1619071042695,"results":"92","hashOfConfig":"84"},{"size":6920,"mtime":1619071042695,"results":"93","hashOfConfig":"84"},{"size":225,"mtime":1623926488566,"results":"94","hashOfConfig":"84"},{"size":6026,"mtime":1628046470576,"results":"95","hashOfConfig":"84"},{"size":509,"mtime":1623926488579,"results":"96","hashOfConfig":"84"},{"size":590,"mtime":1619071042700,"results":"97","hashOfConfig":"84"},{"size":621,"mtime":1619071042700,"results":"98","hashOfConfig":"84"},{"size":371,"mtime":1619071042700,"results":"99","hashOfConfig":"84"},{"size":1102,"mtime":1627544989488,"results":"100","hashOfConfig":"84"},{"size":2811,"mtime":1627367858957,"results":"101","hashOfConfig":"84"},{"size":1022,"mtime":1628153489876,"results":"102","hashOfConfig":"84"},{"size":224,"mtime":1620370714407,"results":"103","hashOfConfig":"84"},{"size":2348,"mtime":1627981741248,"results":"104","hashOfConfig":"84"},{"size":375,"mtime":1623926488567,"results":"105","hashOfConfig":"84"},{"size":1363,"mtime":1627979249468,"results":"106","hashOfConfig":"84"},{"size":225,"mtime":1627357342719,"results":"107","hashOfConfig":"84"},{"size":149,"mtime":1623926488578,"results":"108","hashOfConfig":"84"},{"size":421,"mtime":1627304169311,"results":"109","hashOfConfig":"84"},{"size":558,"mtime":1627979249472,"results":"110","hashOfConfig":"84"},{"size":248,"mtime":1619071042693,"results":"111","hashOfConfig":"84"},{"size":286,"mtime":1623926488573,"results":"112","hashOfConfig":"84"},{"size":1449,"mtime":1627979249471,"results":"113","hashOfConfig":"84"},{"size":767,"mtime":1628232635893,"results":"114","hashOfConfig":"84"},{"size":472,"mtime":1627979249468,"results":"115","hashOfConfig":"84"},{"size":872,"mtime":1627979249471,"results":"116","hashOfConfig":"84"},{"size":2203,"mtime":1628217523158,"results":"117","hashOfConfig":"84"},{"size":434,"mtime":1627979249470,"results":"118","hashOfConfig":"84"},{"size":1036,"mtime":1623926488568,"results":"119","hashOfConfig":"84"},{"size":484,"mtime":1623926488561,"results":"120","hashOfConfig":"84"},{"size":4277,"mtime":1627985174573,"results":"121","hashOfConfig":"84"},{"size":2342,"mtime":1627378646264,"results":"122","hashOfConfig":"84"},{"size":1485,"mtime":1627979249473,"results":"123","hashOfConfig":"84"},{"size":531,"mtime":1620370714422,"results":"124","hashOfConfig":"84"},{"size":424,"mtime":1619071042699,"results":"125","hashOfConfig":"84"},{"size":312,"mtime":1620370714421,"results":"126","hashOfConfig":"84"},{"size":1498,"mtime":1627443176008,"results":"127","hashOfConfig":"84"},{"size":3641,"mtime":1623926488605,"results":"128","hashOfConfig":"84"},{"size":167,"mtime":1620370714421,"results":"129","hashOfConfig":"84"},{"size":5787,"mtime":1623926488603,"results":"130","hashOfConfig":"84"},{"size":2876,"mtime":1628232797133,"results":"131","hashOfConfig":"84"},{"size":207,"mtime":1627638170091,"results":"132","hashOfConfig":"84"},{"size":8329,"mtime":1628068335613,"results":"133","hashOfConfig":"84"},{"size":6896,"mtime":1628070407115,"results":"134","hashOfConfig":"84"},{"size":8065,"mtime":1628070407124,"results":"135","hashOfConfig":"84"},{"size":5818,"mtime":1628070407100,"results":"136","hashOfConfig":"84"},{"size":7024,"mtime":1628070407133,"results":"137","hashOfConfig":"84"},{"size":1966,"mtime":1628070407096,"results":"138","hashOfConfig":"84"},{"size":7019,"mtime":1628070407089,"results":"139","hashOfConfig":"84"},{"size":5570,"mtime":1628070407104,"results":"140","hashOfConfig":"84"},{"size":2271,"mtime":1623926488642,"results":"141","hashOfConfig":"84"},{"size":8027,"mtime":1623926488636,"results":"142","hashOfConfig":"84"},{"size":5911,"mtime":1623926488636,"results":"143","hashOfConfig":"84"},{"size":2205,"mtime":1628070407117,"results":"144","hashOfConfig":"84"},{"size":4171,"mtime":1628069742834,"results":"145","hashOfConfig":"84"},{"size":7736,"mtime":1628070499586,"results":"146","hashOfConfig":"84"},{"size":4502,"mtime":1628221048127,"results":"147","hashOfConfig":"84"},{"size":3486,"mtime":1627981741255,"results":"148","hashOfConfig":"84"},{"size":1429,"mtime":1628221075468,"results":"149","hashOfConfig":"84"},{"size":4293,"mtime":1628050690278,"results":"150","hashOfConfig":"84"},{"size":7028,"mtime":1628157564996,"results":"151","hashOfConfig":"84"},{"size":4516,"mtime":1628218268213,"results":"152","hashOfConfig":"84"},{"size":3065,"mtime":1628218779701,"results":"153","hashOfConfig":"84"},{"size":1904,"mtime":1628154205664,"results":"154","hashOfConfig":"84"},{"size":1934,"mtime":1628232763211,"results":"155","hashOfConfig":"84"},{"size":11625,"mtime":1628234382231,"results":"156","hashOfConfig":"84"},{"size":4737,"mtime":1628219121919,"results":"157","hashOfConfig":"84"},{"size":498,"mtime":1627979272603,"results":"158","hashOfConfig":"84"},{"size":573,"mtime":1627979272606,"results":"159","hashOfConfig":"84"},{"size":4864,"mtime":1627979272604,"results":"160","hashOfConfig":"84"},{"size":1800,"mtime":1628051769152,"results":"161","hashOfConfig":"84"},{"size":622,"mtime":1623926488580,"results":"162","hashOfConfig":"84"},{"size":150,"mtime":1628069095640,"results":"163","hashOfConfig":"84"},{"size":4987,"mtime":1628219114892,"results":"164","hashOfConfig":"84"},{"size":4130,"mtime":1628234461515,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1buzc1q",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"168"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"168"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"168"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"168"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"168"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"168"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"168"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"168"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"168"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"168"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/index.js",[],["352","353"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/polyfill.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/serviceWorker.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/App.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/store.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/index.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/index.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/sygnet.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/logo-negative.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/assets/icons/logo.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigUrl.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/helpers/common.js",["354","355"],"import LocalStorage from \"../config/LocalStorage\";\nimport ConfigCookie from \"../config/ConfigCookie\";\nimport {toast} from \"react-toastify\";\n\n\n\n\nconst setUrlParams = (url, params) => {\n  let newUrl = new URL(url);\n  (params && Object.keys(params)) && Object.keys(params).forEach(key => {\n    if (params[key]) {\n      newUrl.searchParams.set(key, params[key])\n    }\n  })\n  return newUrl\n}\nconst validateEmail = (email) => {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n}\n\nconst json_to_query_string = (json) => {\n  return Object.keys(json)\n    .map(function (key) {\n      return encodeURIComponent(key) + '=' + encodeURIComponent(json[key])\n    })\n    .join('&')\n}\nconst validatePassword = (password) => {\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,15}$/\n  return re.test(String(password))\n}\n\nconst handleLocalStorage  = (action, key, value) => {\n\n  if (typeof window === 'undefined' || !window.localStorage) return ''\n  try {\n    if (action === LocalStorage.GET) {\n      return (window.localStorage.getItem(key))\n    } else if (action === LocalStorage.SET) {\n      return window.localStorage.setItem(key, value)\n    } else if (action === LocalStorage.REMOVE) {\n      return window.localStorage.removeItem(key)\n    }\n    if (action === LocalStorage.CLEAR) {\n      return window.localStorage.clear()\n    }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nfunction parsedTimeCreate  (time) {\n  let utcDate = new Date(time);\n  let offset = new Date().getTimezoneOffset() * 60000;\n  let localDate = new Date(utcDate.getTime() + offset);\n  return localDate.toLocaleString(\"en-GB\")\n}\nfunction parsedIdContentProvider (item) {\n  let arrId = []\n  item?.forEach((it)=>{\n    arrId.push(it?.id)\n  })\n  return arrId\n}\nfunction sendToast ({ message }) {\n\n  return (toast.info(message))\n}\nfunction parsedNumberUrl (vastUrl) {\n  const {url_1, url_2, url_3} = vastUrl || {}\n\n  let numberVastUrl = ''\n  if (url_1) numberVastUrl = 1\n  if (url_2) numberVastUrl += 1\n  if (url_3) numberVastUrl += 1\n\n  return numberVastUrl\n}\nfunction parsedIdAdsGroups (contentProviderItem) {\n  let newArrAds = []\n  contentProviderItem?.forEach((provider)=>{\n    provider?.adsGroups?.forEach((agr)=>{\n      const el = {}\n      el.id = agr?.id\n      el.status = agr?.status\n      newArrAds.push(el)\n    })\n  })\n  return newArrAds\n}\n\n\n// function parsedTypeContentList (type) {\n//   switch (type) {\n//     case 1 : return 'Single Movie'\n//     case 2 : return 'Show/Drama'\n//     case 3 : return 'Season'\n//     case 4 : return 'Episode'\n//     case 5 : return 'LiveTv'\n//     case 6 : return 'Trailer'\n//     case 7 : return 'Epg'\n//     case 8 : return 'Live Stream'\n//     case 9 : return 'Single Movie'\n//   }\n//   return type\n// }\n\n\n// function parsedStatusContentList (status) {\n//   switch (status) {\n//     case -1 : return 'Delete'\n//     case 1 : return 'Chờ xử lý'\n//     case 2 : return 'Chờ QC'\n//     case 3 : return 'Xuất bản'\n//     case 4 : return 'Tạm ngưng x.bản'\n//     case 5 : return 'Tái xuất bản'\n//     case 6 : return 'Đóng'\n//     case 7 : return 'Schedule Publish'\n//     case 8 : return 'Chờ soạn thảo'\n//     case 9 : return 'Review'\n//\n//   }\n//   return status\n// }\n\nexport function parsedPageLimit  (total, rowPerPage) {\n  let max = Math.floor(total / rowPerPage)\n  if (total % rowPerPage !== 0) {\n    max++;\n  }\n  if (max === 0) {\n    max = 1;\n  }\n  return max\n}\n\nfunction parseContentList (items) {\n  if (!items || items.length === 0) return []\n  return items\n}\n\nfunction saveApiKey (apiKey) {\n  //time expire token\n  const timeNow = new Date()\n  timeNow.setFullYear(timeNow.getFullYear() + 1)\n  //save access token\n  const option = {\n    expires: timeNow,\n    // domain: 'http://localhost:3000',\n    path: '/'\n  }\n\n  try {\n    const key = ConfigCookie.getTokenKey()\n    const type = ConfigCookie.METHOD.SAVE\n    const value = apiKey\n    ConfigCookie.handleCookie({ type, key, value, option })\n    ConfigCookie.handleCookie({\n      type: ConfigCookie.METHOD.REMOVE,\n      key: ConfigCookie.KEY.ANONYMOUS_TOKEN,\n      option\n    })\n    handleLocalStorage(LocalStorage.SET, LocalStorage.RE_LOGIN, true)\n    handleLocalStorage(LocalStorage.SET, 'ApiKey', apiKey)\n  } catch (e) {\n    throw e\n  }\n}\nasync function removeApiKey (router, notRefresh) {\n  try {\n    await ConfigCookie.remove(ConfigCookie.KEY.API_KEY)\n    await ConfigCookie.remove(ConfigCookie.KEY.API_KEY_TEST)\n    await ConfigCookie.remove(ConfigCookie.KEY.API_KEY_DEV)\n    await ConfigCookie.remove(ConfigCookie.KEY.ANONYMOUS_TOKEN)\n  } catch (e) {\n    throw e\n  }\n\n  if (typeof window === 'undefined') return\n\n  if (!notRefresh) {\n    window.location.reload()\n  }\n}\n\nconst classUseStyles = (theme) => ({\n  root: {\n    \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n      transform: \"transparent\"\n    },\n    \"& .MuiFormLabel-root\": {\n      color: '#222222',\n      fontSize: \"12.5px\"\n    }\n    ,\"& .MuiSvgIcon--root\": {\n      color: '#636f83',\n    }\n    ,\"& .MuiInputLabel-root\": {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      maxWidth: '50%',\n      overflow: 'hidden',\n    }\n  },\n  inputRoot: {\n    color: \"#222222\",\n    fontSize: \"12.5px\",\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n      paddingLeft: 5.25\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    },\n    \"&:hover .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    },\n    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"transparent\"\n    }\n  }\n})\n\n\n\nexport {\n  sendToast,\n  setUrlParams,\n  validateEmail,\n  saveApiKey,\n  handleLocalStorage,\n  json_to_query_string,\n  parsedTimeCreate,\n  parseContentList,\n  parsedIdContentProvider,\n  parsedIdAdsGroups,\n  parsedNumberUrl,\n  classUseStyles,\n  removeApiKey,\n  validatePassword\n}\n\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/popup.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/inStreamAds.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/content.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/app.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/actionType.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/axiosClient.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigApi.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigConstant.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheLayout.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/LocalStorage.js",["356"],"\nexport default {\n    // action\n    GET: \"GET\",\n    SET: \"SET\",\n    REMOVE: \"REMOVE\",\n    CLEAR: \"CLEAR\",\n\n    // keys\n    CONTENT_PROVIDER:'CONTENT_PROVIDER',\n    FIRST_LOGIN: \"FIRST_LOGIN\",\n    TRIAL_APP: \"TRIAL_APP\",\n    USER_GUEST: \"USER_GUEST\",\n    RE_LOGIN: \"RE_LOGIN\",\n    LOGIN: \"LOGIN\",\n    DEVICE_ID: \"DEVICE_ID\",\n    ID_CONTENT_PROVIDER: 'ID_CONTENT_PROVIDER',\n\n}\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigCookie.js",["357","358"],"import Cookie from 'react-cookies'\nimport * as ConfigEnv from './ConfigEnv'\n\nconst KEY = {\n  API_KEY : 'api_key',\n  API_KEY_TEST : 'api_key_test',\n  API_KEY_DEV : 'api_key_dev',\n  ANONYMOUS_TOKEN : 'anonymous_token',\n}\n\nconst METHOD = {\n  SAVE: 'SAVE',\n  LOAD: 'LOAD',\n  REMOVE: 'REMOVE',\n}\n\n\nfunction getTokenKey () {\n  let key = KEY.API_KEY\n  const domainAPI = ConfigEnv.DOMAIN_API\n  const isTesting = (domainAPI || '').includes('testing-api')\n  const isDev = (domainAPI || '').includes('dev-api')\n  if (isTesting) key = KEY.API_KEY_TEST\n  else if (isDev) key = KEY.API_KEY_DEV\n  return key\n}\n\nfunction handleCookie ({type, key, value, option}) {\n  //time expire token\n  switch (type) {\n    case METHOD.SAVE: {\n      return Cookie.save(key, value, option)\n    }\n    case METHOD.LOAD: {\n      return Cookie.load(key)\n    }\n    case METHOD.REMOVE: {\n      Cookie.remove(key, option)\n      return\n    }\n  }\n\n}\nfunction remove(key, removeOption){\n  const timeNow = new Date()\n  timeNow.setFullYear(timeNow.getFullYear() + 1)\n  const option = { expires: timeNow, path: '/' }\n  const oldOption = { expires: timeNow, domain: '.vieon.vn', path: '/' }\n\n  if(removeOption) {\n    Cookie.remove(key, removeOption)\n  } else {\n    Cookie.remove(key, option)\n    Cookie.remove(key, oldOption)\n  }\n\n}\n\nexport default {\n  KEY, METHOD,\n  getTokenKey,\n  handleCookie,\n  remove,\n}\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/login.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/initialState.js",["359"],"\n\nexport default {\n  // app state\n  app: {\n    token: '',\n  },\n\n  // profile state\n  profile: null,\n\n  //popup\n  popup: {\n    popupName: '',\n  },\n};\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigEnv.js",["360"],"// const DOMAIN_API = process.env.REACT_APP_API\nconst DOMAIN_API =  'https://dev-api.vieon.vn' + '/'\n\nconst STATIC_DOMAIN = process.env.REACT_APP_STATIC_DOMAIN\nconst DEFAULT_PORT = process.env.PORT\nconst BUILD_ID = typeof process.env.BUILD_ID !== 'undefined' ? process.env.BUILD_ID : new Date().getTime() + ''\n\nmodule.exports = {\n  ENV: process.env.NODE_ENV,\n  DOMAIN_API,\n  BUILD_ID, \n  STATIC_DOMAIN,\n  DEFAULT_PORT,\n}\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/customRequest.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/app.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/index.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheSidebar.js",["361"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem, CImg,\n} from '@coreui/react'\n\n\n// sidebar nav config\nimport navigation from './_nav'\nimport CIcon from \"@coreui/icons-react\";\nimport ConfigImage from \"../config/ConfigImage\";\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/live/content-live-list\" style={{textDecoration: 'none'}}>\n        <h2 className='c-sidebar-brand-full'\n            style={{color:'rgb(91, 205, 39)', margin: '2rem 1rem'}}>Live Management</h2>\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          src={ConfigImage.logo}\n          height={15}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/constants/constants.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigImage.js",["362"],"\nimport { STATIC_DOMAIN } from \"./ConfigEnv\"\n\nconst duplicate =  STATIC_DOMAIN + 'img/duplicate.png'\nconst deleteAds =  STATIC_DOMAIN + 'img/delete.png'\nconst edit =  STATIC_DOMAIN + 'img/edit.png'\nconst instreamAds =  STATIC_DOMAIN + 'img/instreamAds.png'\nconst outstreamAds =  STATIC_DOMAIN + 'img/outstreamAds.png'\nconst live =  STATIC_DOMAIN + 'img/live.png'\n\n\n\n\n\nexport  default {\n    duplicate,\n    deleteAds,\n    edit,\n    instreamAds,\n    outstreamAds,\n    live,\n}","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/_nav.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheHeaderDropdown.js",["363"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheHeader.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/containers/TheContent.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/popup.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/contentApi.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/content.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/routes.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/contentList.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/content.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/ContentProviderItem.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/inStreamAds.js",[],["364","365"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/TablesContentList.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/models/AdsGroupsList.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/CustomTableContentList.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/Popup.js",["366"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/LiveEventList/LiveEventList.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/base/tables/TablesLiveEventList.js",["367","368","369","370","371","372","373"],"import React, {useEffect, useState} from 'react'\nimport {\n  CBadge, CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg, CInput, CInputGroup,\n  CLink, CPagination,\n  CRow, CSwitch\n} from '@coreui/react'\n\nimport CIcon from \"@coreui/icons-react\";\nimport {useHistory} from 'react-router-dom';\nimport {parsedTimeCreate, parsedPageLimit} from \"../../../helpers/common\";\nimport {freeSet} from \"@coreui/icons\";\nimport contentApi from \"../../../apis/contentApi\";\nimport TitleLive from \"../../LiveManagementEvent/TitleLive/TitleLive\";\nimport ConfigImage from \"../../../config/ConfigImage\";\nimport {openPopup} from \"../../../actions/popup\";\nimport {POPUP} from \"../../../constants/constants\";\nimport {useDispatch} from \"react-redux\";\nimport ConfigText from \"../../../config/ConfigText\";\nimport LiveEventApi from \"../../../apis/liveEventApi\";\n\n\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'white'\n\n    default: return 'white'\n  }\n}\nconst fields = ['Tên Event Live','Trạng Thái', 'Preset ID', 'Nội Dung', 'Ngày Tạo', 'Quản lý']\n\n\nconst TablesLiveEventList = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [maxPage, setMaxPage] = useState(1);\n  const [total, setTotal] = useState()\n  const [currentPageList, setCurrentPageList] = useState()\n  const [valueKeyword, setKeyword] = useState('')\n\n  useEffect(()=>{\n    LiveEventApi?.getListLiveEvent(rowPerPage, currentPage*10).then(res=>{\n      const dataList = res?.data\n      if (res?.success){\n        setCurrentPageList(dataList?.data?.events)\n        setTotal(dataList?.data?.total)\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[rowPerPage, currentPage])\n\n  useEffect(() => {\n    if (currentPageList) {\n      let max = parsedPageLimit(total, rowPerPage)\n      setMaxPage(max)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, rowPerPage])\n  const handleChange = e => {\n    let value = e.target.value.toLowerCase()\n    setKeyword(value)\n  }\n\n  const onClickSearch = () => {\n      contentApi.getListContentLive(rowPerPage, currentPage-1, valueKeyword.trim()).then(res=>{\n        if (res?.success){\n          const data = res?.data\n          setCurrentPageList(data?.items)\n          setTotal(data?.metadata?.total)\n          setCurrentPage(1)\n        }\n      })\n  }\n\n  const onChangePage = (item) => {\n    setRowPerPage(item?.value)\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onClickSearch();\n    }\n  }\n\n  const handleAddLiveItem = () =>{\n    dispatch(openPopup({\n      name: POPUP.NAME.LIVE_EVENT.CREATE_LIVE_ENTITY,\n      currentPage,\n      rowPerPage,\n      setCurrentPageList\n    }))\n\n  }\n\n  const handleEditLiveItem = (item) => {\n    dispatch(openPopup({\n      name: POPUP.NAME.LIVE_EVENT.EDIT_LIVE_ITEM,\n      item,\n      currentPage,\n      rowPerPage,\n      setCurrentPageList\n    }))\n  }\n  const handleDeleteLiveItem = (item) => {\n    dispatch(openPopup({\n      name: POPUP.NAME.LIVE_EVENT.DELETE_LIVE_ITEM,\n      item,\n      currentPage,\n      rowPerPage,\n      setCurrentPageList\n    }))\n  }\n  return (\n    <>\n      <TitleLive title={ConfigText.LIVE.LIVE_EVENT_MANAGE_LIST}/>\n      <CRow className={'row mx-0'}>\n        {/*<CCol  className=\"col-sm-6 form-inline p-0 c-datatable-filter\">*/}\n        {/*  <CInputGroup className=\"mb-3\">*/}\n        {/*    <CInput*/}\n        {/*            className=\"input-search\"*/}\n        {/*            type=\"text\" placeholder=\"Tìm Content Live\" autoComplete=\"search\"*/}\n        {/*            onChange={handleChange}*/}\n        {/*            value={valueKeyword}*/}\n        {/*            onKeyPress={handleKeyPress}*/}\n        {/*    />*/}\n        {/*    <button className=\"btn btn-square btn-default color-black btn-search\"*/}\n        {/*            onClick={onClickSearch}>*/}\n        {/*      <CIcon content={freeSet.cilSearch} size={'lg'}style={{margin: 0}} />*/}\n        {/*    </button>*/}\n        {/*  </CInputGroup>*/}\n        {/*</CCol>*/}\n        <CCol  className=\"col-sm-12 p-0 \">\n          <div className=\"form-inline justify-content-sm-end c-datatable-items-per-page\">\n            <CLink>\n              <button className=\"btn mb-3 btnLive\"  onClick={handleAddLiveItem}>\n                {ConfigText.LIVE.CREATE_LIVE_ENTITY}\n              </button>\n            </CLink>\n          </div>\n        </CCol>\n      </CRow>\n      <CRow className={'justify-content-between'}>\n        <CCol>\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                items={ currentPageList}\n                fields={fields}\n                itemsPerPage={10}\n                scopedSlots = {{\n                  'Tên Event Live':\n                    (item)=>(\n                      <td className=\"text-name-provider\" title={item?.name}>\n                        <strong>{item?.name}</strong>\n                      </td>\n                    ),\n                  'Trạng Thái':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                            <CSwitch className={'mx-1'} color={'success'} labelOn={'ON'} labelOff={'OFF'}\n                                     checked={item?.status === 1 ? true : false } readOnly/>\n                      </td>\n                    ),\n                  'Preset ID':\n                      (item)=>(\n                          <td className=\"text-name-provider\" title={item?.preset_id} style={{textTransform: 'uppercase'}}>\n                            {item?.preset_id}\n                          </td>\n                      ),\n                  'Nội Dung':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                        <p>{item?.description}</p>\n                      </td>\n                    ),\n                  'Ngày Tạo':\n                    (item)=>(\n                      <td style={{verticalAlign: \"middle\"}}>\n                        <p style={{marginBottom: \"0px\"}}>{parsedTimeCreate(item?.created_at)}</p>\n                      </td>\n                    ),\n                  'Quản lý':\n                    (item)=>(\n                      <td>\n                        <CBadge color={getBadge(item.status)}>\n                          <CButton block color=\"info\" onClick={()=>handleEditLiveItem(item)}>\n                            <CImg src={ConfigImage.edit} alt=\"edit\"/> <span className=\"ml-1\">{ConfigText.GENERAL.EDIT}</span>\n                          </CButton>\n                        </CBadge>\n                        <CBadge>\n                          <CButton block color=\"danger\" onClick={()=>handleDeleteLiveItem(item)}>\n                            <CImg src={ConfigImage.deleteAds} alt=\"delete\"/> <span className=\"ml-1\">{ConfigText.GENERAL.DELETE}</span>\n                          </CButton>\n                        </CBadge>\n                      </td>\n                    ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <div className=\"m-1 d-flex justify-content-between align-items-center\">\n        <CDropdown className=\"btn-group\" style={{ width: '100px',  }}>\n          <CDropdownToggle color=\"default\" className='shadow-none mb-2 row-page color-white'>\n            <span className=\"mr-2\" style={{ color: '#222'}}>{rowPerPage + ' dòng'}</span>\n          </CDropdownToggle>\n          <CDropdownMenu>\n            {rowPerPageList && (rowPerPageList || []).map((item, index) => {\n              return (\n                <CDropdownItem key={index} onClick={()=>onChangePage(item)}>{item?.name}</CDropdownItem>\n              )\n            })\n            }\n          </CDropdownMenu>\n        </CDropdown>\n        <CPagination\n          nextButton={ConfigText.GENERAL.AFTER}\n          previousButton={ConfigText.GENERAL.BEFORE}\n          activePage={currentPage}\n          pages={maxPage}\n          onActivePageChange={setCurrentPage}\n        />\n      </div>\n    </>\n  )\n}\nconst rowPerPageList = [\n  { id: 1, name: '5 dòng', value: 5 },\n  { id: 2, name: '10 dòng', value: 10 },\n  { id: 3, name: '20 dòng', value: 20 },\n]\n\nexport default TablesLiveEventList\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDuplicateAds.js",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"import React, {useEffect, useState} from 'react'\nimport {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CRow} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\nimport {handleLocalStorage, sendToast} from \"../../../helpers/common\";\nimport LocalStorage from \"../../../config/LocalStorage\";\n\n\n\nconst PopupDuplicateAds = (props) => {\n  const {\n    newData, setNewData,\n    itemAds,\n    parsedID\n  } = props\n\n  const [dataInStreamAds, setDataAds] = useState({\n    group: 'default',\n    type: 'Pre-roll',\n    vast_url: {url_1: '', url_2: '', url_3: '', bumper: ''},\n    status: 1,\n    can_skip: true,\n    skip_after: 5,\n    platform: '',\n    is_all_platform: true,\n    content: {\n      id:'',\n      title:''\n    }\n  })\n  const dispatch = useDispatch()\n\n  useEffect(()=>{\n    if (itemAds)\n      setDataAds(itemAds)\n  },[itemAds])\n\n  const handleClose = () => {\n    dispatch(closePopup())\n  }\n  const onChangeNameGroup = (value) => {\n    setDataAds({...dataInStreamAds, group: value})\n  }\n  const onChangeTimeSkip = (value) => {\n    setDataAds({...dataInStreamAds, skip_after: value})\n  }\n  const onChangeType = (item) =>{\n    setDataAds({...dataInStreamAds, type: item })\n  }\n  const onChangeStatus = (item) => {\n    setDataAds({...dataInStreamAds, status: item?.status})\n  }\n  const onChangeSkip = (item) => {\n    setDataAds({...dataInStreamAds, can_skip: item?.can_skip})\n  }\n  const onChangePlatform = (item) => {\n    setDataAds({...dataInStreamAds, platform: item?.name, is_all_platform: item?.is_all_platform})\n  }\n  const setVastUrl = (vastUrl) => {\n    setDataAds({\n      ...dataInStreamAds,\n      vast_url: vastUrl\n    })\n  }\n\n  const setContent = (content) => {\n    const title = content?.name\n    const id = content?.id\n    const newContent = new Object({id, title})\n    setDataAds({...dataInStreamAds, content: newContent})\n  }\n\n\n  const onCreateInStreamAds = () => {\n    let idContentProvider = handleLocalStorage(LocalStorage.GET, LocalStorage.CONTENT_PROVIDER)\n    if (dataInStreamAds?.content?.id) {\n      if (dataInStreamAds?.group){\n        inStreamAdsApi.setInStreamAds(dataInStreamAds, parsedID?.id || idContentProvider, false).then(res=>{\n          const data = res?.data\n          if (res?.success){\n            const newDataGroup = [...newData, data]\n            const sortNewDataGroup = newDataGroup.reverse()\n            setNewData(sortNewDataGroup)\n            dispatch(closePopup())\n          }\n          else {\n            sendToast({message: data?.message})\n          }\n        })\n      }\n      else {\n        sendToast({message: 'Tên nhóm là trường bắt buộc. '})\n      }\n    }else {\n      if (dataInStreamAds?.group){\n        inStreamAdsApi.setInStreamAds(dataInStreamAds, parsedID?.id || idContentProvider, true).then(res=>{\n          const data = res?.data\n          if (res?.success){\n            const newDataGroup = [...newData, data]\n            const sortNewDataGroup = newDataGroup.reverse()\n            setNewData(sortNewDataGroup)\n            dispatch(closePopup())\n          }\n          else {\n            sendToast({message: data?.message})\n          }\n        })\n      }else {\n        sendToast({message: 'Tên nhóm là trường bắt buộc.'})\n      }\n\n    }\n  }\n\n  return(\n    <>\n    <CModal\n      closeOnBackdrop={false}\n      show={true} onClose={handleClose} centered={true} size={'xl'}>\n      <CModalHeader className=\"colorHeader\">\n        <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n          <h4 className=\"mb-0\">Thông tin quảng cáo </h4>\n          <CButton className='p-0 shadow-none' onClick={handleClose}>\n            <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n          </CButton>\n        </div>\n      </CModalHeader>\n      <CModalBody>\n        {/*<CRow className={'justify-content-between'} >*/}\n        {/*  <GroupInStreamAds*/}\n        {/*    itemAds={dataInStreamAds}*/}\n        {/*    onChangeNameGroup={onChangeNameGroup}*/}\n        {/*  />*/}\n        {/*  <TypeInStreamAds*/}\n        {/*    itemAds={dataInStreamAds}*/}\n        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n        {/*    onChangeType={onChangeType}*/}\n        {/*  />*/}\n        {/*  <VastUrlInStreamAds*/}\n        {/*    itemAds={dataInStreamAds}*/}\n        {/*    setVastUrl={setVastUrl}*/}\n        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n        {/*  />*/}\n        {/*  <StatusInStreamAds*/}\n        {/*      itemAds={dataInStreamAds}*/}\n        {/*    dataInStreamAdsStatus={dataInStreamAdsStatus}*/}\n        {/*    onChangeStatus={onChangeStatus}*/}\n        {/*  />*/}\n        {/*  <SkipInStreamAds*/}\n        {/*      itemAds={dataInStreamAds}*/}\n        {/*    dataInStreamAdsSkip={dataInStreamAdsSkip}*/}\n        {/*    onChangeSkip={onChangeSkip}*/}\n        {/*  />*/}\n        {/*  <SkipAfterInStreamAds*/}\n        {/*      itemAds={dataInStreamAds}*/}\n        {/*    onChangeTimeSkip={onChangeTimeSkip}*/}\n        {/*  />*/}\n        {/*  <PlatformInStreamAds*/}\n        {/*      itemAds={dataInStreamAds}*/}\n        {/*    onChangePlatform={onChangePlatform}*/}\n        {/*    dataInStreamAdsPlatForm={dataInStreamAdsPlatForm}*/}\n        {/*  />*/}\n        {/*  <ContentInStreamAds*/}\n        {/*    itemAds={dataInStreamAds}*/}\n        {/*    dataInStreamAdsContent={dataInStreamAdsContent}*/}\n        {/*    setContent={setContent}*/}\n        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n        {/*  />*/}\n        {/*</CRow>*/}\n      </CModalBody>\n      <CModalFooter>\n        <div className=\"d-flex justify-content-end mt-3\">\n          <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={onCreateInStreamAds}>{'Tạo'}</CButton>\n        </div>\n      </CModalFooter>\n    </CModal>\n    </>\n  )\n}\nconst dataInStreamAdsType = [\n  {id:'Pre-roll',name: 'Pre-roll'},\n  {id:'Mid-roll', name: 'Mid-roll'}\n]\nconst dataInStreamAdsStatus = [\n  {id: 'show', name: 'Hiện', status: 1},\n  {id: 'hide', name: 'Ẩn', status: 0},\n]\nconst dataInStreamAdsSkip = [\n  {id: 'yes', name: 'Có', can_skip: true},\n  {id: 'no', name: 'Không', can_skip: false}\n]\nconst dataInStreamAdsPlatForm = [\n  {id: 'all', name: 'Tất cả', is_all_platform: true},\n  {id: 'web', name:'Web', is_all_platform: false},\n  {id: 'iOS', name:'iOS', is_all_platform: false},\n  {id: 'Android', name:'Android', is_all_platform: false},\n  {id: 'AndroidTV', name:'AndroidTV', is_all_platform: false},\n  {id: 'Samsung-TV', name:'Samsung-TV', is_all_platform: false},\n  {id: 'LG-TV', name:'LG-TV', is_all_platform: false},\n]\nconst dataInStreamAdsContent = [\n  {id: 'all', name: 'Tất cả', is_all_content: true},\n  {id: 'filter', name: 'Chọn nội dung ...', is_all_content: false},\n]\nexport default PopupDuplicateAds\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateNewAds.js",["389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import React, { useState} from 'react'\nimport {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CRow} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\nimport {sendToast} from \"../../../helpers/common\";\nimport {useLocation} from \"react-router\";\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\n\nconst queryString = require('query-string');\n\nconst PopupCreateNewAds = (props) => {\n    const {\n        setNewData,\n        newData,\n    } = props\n\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const parsedID = queryString.parse(location.search)\n\n\n    const [dataInStreamAds, setDataAds] = useState({\n        group: 'default',\n        type: 'Pre-roll',\n        vast_url: {url_1: '', url_2: '', url_3: '', bumper: ''},\n        status: 1,\n        can_skip: true,\n        skip_after: 5,\n        platform: '',\n        is_all_platform: true,\n        content: {\n            id:'',\n            title:''\n        }\n    })\n\n\n    const onChangeNameGroup = (value) => {\n        setDataAds({...dataInStreamAds, group: value})\n    }\n    const onChangeTimeSkip = (value) => {\n        setDataAds({...dataInStreamAds, skip_after: value})\n    }\n    const onChangeType = (item) =>{\n        setDataAds({...dataInStreamAds, type: item })\n    }\n    const onChangeStatus = (item) => {\n        setDataAds({...dataInStreamAds, status: item?.status})\n    }\n    const onChangeSkip = (item) => {\n        setDataAds({...dataInStreamAds, can_skip: item?.can_skip})\n    }\n    const onChangePlatform = (item) => {\n        setDataAds({...dataInStreamAds, platform: item?.name, is_all_platform: item?.is_all_platform})\n    }\n\n\n    const setContent = (content) => {\n        const title = content?.name\n        const id = content?.id\n        const newContent = new Object({id, title})\n        setDataAds({...dataInStreamAds, content: newContent})\n    }\n    const setVastUrl = (vastUrl) => {\n        setDataAds({\n            ...dataInStreamAds,\n            vast_url: vastUrl\n        })\n    }\n    const handleClose = () => {\n        dispatch(closePopup())\n    }\n\n    const onCreateAds = () => {\n        if (dataInStreamAds?.content?.id) {\n            if (dataInStreamAds?.group){\n                inStreamAdsApi.setInStreamAds(dataInStreamAds, parsedID.id, false).then(res=>{\n                    const data = res?.data\n                    if (res?.success){\n                        const newDataGroup = [...newData, data]\n                        const sortNewDataGroup = newDataGroup.reverse()\n                        setNewData(sortNewDataGroup)\n                        dispatch(closePopup())\n                    }\n                    else {\n                        sendToast({message: data?.message})\n                    }\n                })\n            }\n            else {\n                sendToast({message: 'Tên nhóm là trường bắt buộc. '})\n            }\n        }else {\n            if (dataInStreamAds?.group){\n                inStreamAdsApi.setInStreamAds(dataInStreamAds, parsedID.id, true).then(res=>{\n                    const data = res?.data\n                    if (res?.success){\n                        const newDataGroup = [...newData, data]\n                        const sortNewDataGroup = newDataGroup.reverse()\n                        setNewData(sortNewDataGroup)\n                        dispatch(closePopup())\n                    }\n                    else {\n                        sendToast({message: data?.message})\n                    }\n                })\n            }else {\n                sendToast({message: 'Tên nhóm là trường bắt buộc. '})\n            }\n\n        }\n    }\n\n\n    return(\n        <>\n            <CModal\n                closeOnBackdrop={false}\n                show={true}  centered={true} size={'xl'}>\n                <CModalHeader className=\"colorHeader\">\n                    <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n                        <h4 className=\"mb-0\">Thông tin quảng cáo </h4>\n                        <CButton className='p-0 shadow-none' onClick={handleClose}>\n                            <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n                        </CButton>\n                    </div>\n                </CModalHeader>\n                <CModalBody>\n                    <CRow className={'justify-content-between'} >\n                        {/*<GroupInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    onChangeNameGroup={onChangeNameGroup}*/}\n                        {/*/>*/}\n                        {/*<TypeInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n                        {/*    onChangeType={onChangeType}*/}\n                        {/*/>*/}\n                        {/*<VastUrlInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    setVastUrl={setVastUrl}*/}\n                        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n                        {/*/>*/}\n                        {/*<StatusInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    dataInStreamAdsStatus={dataInStreamAdsStatus}*/}\n                        {/*    onChangeStatus={onChangeStatus}*/}\n                        {/*/>*/}\n                        {/*<SkipInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    dataInStreamAdsSkip={dataInStreamAdsSkip}*/}\n                        {/*    onChangeSkip={onChangeSkip}*/}\n                        {/*/>*/}\n                        {/*<SkipAfterInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    onChangeTimeSkip={onChangeTimeSkip}*/}\n                        {/*/>*/}\n                        {/*<PlatformInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    onChangePlatform={onChangePlatform}*/}\n                        {/*    dataInStreamAdsPlatForm={dataInStreamAdsPlatForm}*/}\n                        {/*/>*/}\n                        {/*<ContentInStreamAds*/}\n                        {/*    itemAds={dataInStreamAds}*/}\n                        {/*    dataInStreamAdsContent={dataInStreamAdsContent}*/}\n                        {/*    setContent={setContent}*/}\n                        {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n                        {/*/>*/}\n                    </CRow>\n                </CModalBody>\n                <CModalFooter>\n                    <div className=\"d-flex justify-content-end mt-3\">\n                        <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={onCreateAds}>{ 'Tạo'}</CButton>\n                    </div>\n                </CModalFooter>\n            </CModal>\n        </>\n    )\n}\nconst dataInStreamAdsType = [\n    {id:'Pre-roll',name: 'Pre-roll'},\n    {id:'Mid-roll', name: 'Mid-roll'}\n]\nconst dataInStreamAdsStatus = [\n    {id: 'show', name: 'Hiện', status: 1},\n    {id: 'hide', name: 'Ẩn', status: 0},\n]\nconst dataInStreamAdsSkip = [\n    {id: 'yes', name: 'Có', can_skip: true},\n    {id: 'no', name: 'Không', can_skip: false}\n]\nconst dataInStreamAdsPlatForm = [\n    {id: 'all', name: 'Tất cả', is_all_platform: true},\n    {id: 'web', name:'Web', is_all_platform: false},\n    {id: 'iOS', name:'iOS', is_all_platform: false},\n    {id: 'Android', name:'Android', is_all_platform: false},\n    {id: 'AndroidTV', name:'AndroidTV', is_all_platform: false},\n    {id: 'Samsung-TV', name:'Samsung-TV', is_all_platform: false},\n    {id: 'LG-TV', name:'LG-TV', is_all_platform: false},\n]\nconst dataInStreamAdsContent = [\n    {id: 'all', name: 'Tất cả', is_all_content: true},\n    {id: 'filter', name: 'Chọn nội dung ...', is_all_content: false},\n]\nexport default PopupCreateNewAds\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddContentList.js",["403","404","405","406","407"],"import React, {useEffect, useState} from 'react'\nimport {CButton, CModal, CModalBody, CModalHeader} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit} from \"../../../helpers/common\";\nimport contentApi from \"../../../apis/contentApi\";\n\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\n\nconst PopupAddContentList = (props) => {\n\n  const {\n    currentItem,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n\n  } = props || {}\n\n  const [currentPageProvider, setPageProvider] = useState(0)\n  const [dataContentList, setDataProvider] = useState([])\n  const [metadataProvider, setMetadataProvider] = useState()\n\n  const [listAdsGroups, setListAdsGroups] = useState([])\n\n  const getListAdsGroups = (id) => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res =>{\n      const data = res?.data\n      if (res?.success){\n        setListAdsGroups(data?.items)\n      }\n    })\n  }\n  useEffect( ()=>{\n    async function getList () {\n      contentApi.getListContentLive(10, currentPageProvider).then(res=>{\n        const data = res?.data\n        if (res?.success) {\n          setMetadataProvider(data?.metadata)\n          let dataList = [...dataContentList]\n          let newDataList = dataList.concat(data?.items)\n          setDataProvider(newDataList)\n        }\n      })\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentPageProvider])\n\n\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n    watchScroll()\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  })\n\n  const handleScroll = () => {\n    const { page, limit, total } = metadataProvider || {}\n    let maxPage = parsedPageLimit(total, limit)\n\n    if ((page + 1) * limit >= total && (page + 1) > maxPage) return\n    setPageProvider((page || 0) + 1 )\n  }\n  const dispatch = useDispatch()\n  const {contentProviders} = currentItem || {}\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const [idContentProviders, setIdContentProvider] = useState([])\n  const [idAdsGroups, setIdAdsGroup] = useState([])\n  const [idAndStatus, setIdAndStatus] = useState({\n    id:'',\n    status: 0\n  })\n\n  useEffect(()=>{\n    if(idAndStatus?.id) handleChangeIdAdsGroups(idAndStatus)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[idAndStatus?.status])\n\n\n  const handleClose = () => {\n    dispatch(closePopup())\n  }\n  const handleChangeContentProvider = (item) => {\n    const arrNew = [...arrIdContentProvider]\n    arrNew.push(item?.id)\n    if (arrNew[0] === undefined){\n      arrNew.splice(0,1)\n      setIdContentProvider(arrNew)\n    }else setIdContentProvider(arrNew)\n  }\n  const handleChangeAds = (item) => {\n    setIdAndStatus({...idAndStatus, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(idAndStatus)\n  }\n  const onChangeStatus = (item) => {\n    if(idAndStatus?.id) {\n      setIdAndStatus({...idAndStatus, status: item?.status})\n    }\n    handleChangeIdAdsGroups(idAndStatus)\n  }\n\n  const handleChangeIdAdsGroups = (idAndStatus) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds.push(idAndStatus)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdAdsGroup(idAds)\n    }else {\n      setIdAdsGroup(idAds)\n    }\n  }\n  const handleCreate = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idAdsGroups).then(res=>{\n        if (res?.success){\n          contentApi?.getContentList(\n            currentPage-1,\n            rowPerPage,\n            keyWord,\n            category,\n            type,\n            idContentProvider,\n            idAdsGroup\n          ).then(resList =>{\n              const data = resList?.data\n              if (resList?.success) {\n                setCurrentPageList(data?.items)\n                dispatch(closePopup())\n              }\n            }\n          )\n      }\n    })\n  }\n\n\n  return(\n\n    <React.Fragment>\n      <CModal\n        closeOnBackdrop={false}\n        show={true}\n        onClose={handleClose}\n        centered={true}\n        style={{minWidth:'555px'}}\n      >\n        <CModalHeader className=\"colorHeader\">\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Add Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"d-flex flex-row\">\n            {/*<GroupNameContentProvider*/}\n            {/*  dataContentList={dataContentList}*/}\n            {/*  handleChangeContentProvider={handleChangeContentProvider}*/}\n            {/*  getListAdsGroups={getListAdsGroups}*/}\n            {/*  handleScroll={handleScroll}*/}\n            {/*/>*/}\n            {/*<GroupsAdsProvider*/}\n            {/*  listAdsGroup={listAdsGroups}*/}\n            {/*  handleChangeAds={handleChangeAds}*/}\n            {/*/>*/}\n            {/*<StatusContentItem*/}\n            {/*  onChangeStatus={onChangeStatus}*/}\n            {/*  status ={idAndStatus?.status}*/}\n            {/*/>*/}\n          </div>\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleCreate}>Tạo</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupAddContentList\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContentList.js",["408","409","410","411","412","413","414","415"],"import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalHeader,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContentProviderById} from \"../../../actions/content\";\nimport contentApi from \"../../../apis/contentApi\";\nimport {parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit} from \"../../../helpers/common\"\nimport {closePopup} from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\n\n\nconst PopupEditContentList = (props) => {\n  const {\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n  } = props\n  const  { status, group} = currentItemAds || {}\n  const idProvider = currentItemContentProvider?.id\n  const {contentProviders} = currentItem || {}\n\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const dispatch  = useDispatch()\n  const dataContent = useSelector(state => state?.Content)\n\n  const nameItemProvider =  dataContent?.CONTENT_PROVIDER?.name\n  const itemContentProvider = dataContent?.CONTENT_PROVIDER\n\n\n\n  const [currentPageProvider, setPageProvider] = useState(0)\n  const [dataContentList, setDataProvider] = useState([])\n  const [metadataProvider, setMetadataProvider] = useState()\n  const [listAdsGroups, setListAdsGroups] = useState([])\n\n  const getListAdsGroups = (id) => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res =>{\n      const data = res?.data\n      if (res?.success){\n        setListAdsGroups(data?.items)\n      }\n    })\n  }\n  useEffect( ()=>{\n    async function getList () {\n      contentApi.getListContentLive(10, currentPageProvider).then(res=>{\n        const data = res?.data\n        if (res?.success) {\n          setMetadataProvider(data?.metadata)\n          let dataList = [...dataContentList]\n          let newDataList = dataList.concat(data?.items)\n          setDataProvider(newDataList)\n        }\n      })\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentPageProvider])\n\n\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n    watchScroll()\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  })\n\n  const handleScroll = () => {\n    const { page, limit, total } = metadataProvider || {}\n    let maxPage = parsedPageLimit(total, limit)\n\n    if ((page + 1) * limit >= total && (page + 1) > maxPage) return\n    setPageProvider((page || 0) + 1 )\n  }\n  useEffect(()=>{\n    setStatus(status)\n    setGroupAds(group)\n    setNameProvider(nameItemProvider)\n\n  },[status, group, nameItemProvider ])\n\n\n  useEffect(()=> {\n    if (idProvider) dispatch(getContentProviderById(idProvider))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentItemContentProvider])\n\n\n  const [idContentProviders, setIdContentProvider] = useState( [])\n  const [idInStreamAds, setIdInStreamAds] = useState([])\n\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  })\n\n\n  useEffect(()=> {\n    if (elementAds?.id) handleChangeIdAdsGroups(elementAds)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[elementAds?.id, elementAds?.status])\n\n  const onChangeContentProvider = (item) => {\n    let arr = [...arrIdContentProvider]\n    arr = arr.filter(ite => ite !== itemContentProvider?.id)\n    arr.push(item?.id)\n    setIdContentProvider(arr)\n  }\n\n\n  const handleChangeIdAdsGroups = (elm) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds = idAds.filter(ite => ite?.id !== currentItemAds?.id)\n    idAds.push(elm)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdInStreamAds(idAds)\n    } else {\n      setIdInStreamAds(idAds)\n    }\n  }\n  const onChangeAdsItem = (item) => {\n    setElementAds({...elementAds, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n  const onChangeStatus = (item) => {\n    setElementAds({...elementAds, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n\n  const [currentStatus, setStatus] = useState(status || '')\n  const [currentGroup, setGroupAds] = useState(group || '')\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '')\n\n  const handleClose =() => {\n    dispatch(closePopup())\n  }\n  const handleSave = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idInStreamAds).then(res=>{\n      if (res?.success){\n        contentApi?.getContentList(\n          currentPage -1,\n          rowPerPage,\n          keyWord,\n          category,\n          type,\n          idContentProvider,\n          idAdsGroup\n        ).then(\n          resList =>{\n            const data = resList?.data\n            if (resList?.success) {\n              setCurrentPageList(data?.items)\n              dispatch(closePopup())\n            }\n          }\n        )\n      }\n    })\n  }\n\n\n  return (\n    <React.Fragment>\n      <CModal\n          // size={'lg'}\n        show={true}\n        onClose={handleClose}\n        centered={true}\n        closeOnBackdrop={false}\n        style={{minWidth: '555px'}}\n      >\n        <CModalHeader className=\"colorHeader\">\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Sửa Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          {/*<div className={'d-flex flex-row'}>*/}\n          {/*  <NameContentProviderItem*/}\n          {/*    dataContentList={dataContentList}*/}\n          {/*    nameItemProvider={currentNameProvider}*/}\n          {/*    setNameProvider={setNameProvider}*/}\n          {/*    onChangeContentProvider={onChangeContentProvider}*/}\n          {/*    arrIdContentProvider={arrIdContentProvider}*/}\n          {/*    getListAdsGroups={getListAdsGroups}*/}\n          {/*    handleScroll={handleScroll}*/}\n          {/*  />*/}\n          {/*  <AdsContentItem*/}\n          {/*    listAdsGroup={listAdsGroups}*/}\n          {/*    groupName={currentGroup}*/}\n          {/*    setGroupAds={setGroupAds}*/}\n          {/*    onChangeAdsItem={onChangeAdsItem}*/}\n          {/*  />*/}\n          {/*  <StatusContentItem*/}\n          {/*    onChangeStatus={onChangeStatus}*/}\n          {/*    status={currentStatus} setStatus={setStatus}/>*/}\n          {/*</div>*/}\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleSave}>Lưu</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupEditContentList\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDeleteAds.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateNewInStreamAds.js",["416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { useState} from 'react'\nimport {CButton, CModal, CModalBody, CModalFooter, CModalHeader, CRow} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\nimport {handleLocalStorage, sendToast} from \"../../../helpers/common\";\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\nimport LocalStorage from \"../../../config/LocalStorage\";\n\n\nconst PopupCreateNewInStreamAds = (props) => {\n  const {\n    setNewData,\n    newData,\n  } = props\n  const dispatch = useDispatch()\n\n  const [dataInStreamAds, setDataAds] = useState({\n    group: 'default',\n    type: 'Pre-roll',\n    vast_url: {url_1: '', url_2: '', url_3: '', bumper: ''},\n    status: 1,\n    can_skip: true,\n    skip_after: 5,\n    platform: '',\n    is_all_platform: true,\n    content: {\n      id:'',\n      title:''\n    }\n  })\n\n  const onCreateInStreamAds = () => {\n    let idContentProvider = handleLocalStorage(LocalStorage.GET, LocalStorage.CONTENT_PROVIDER)\n    if (dataInStreamAds?.content?.id) {\n      if (dataInStreamAds?.group){\n        inStreamAdsApi.setInStreamAds(dataInStreamAds, idContentProvider, false).then(res=>{\n          const data = res?.data\n          if (res?.success){\n            const newDataGroup = [...newData, data]\n            const sortNewDataGroup = newDataGroup.reverse()\n            setNewData(sortNewDataGroup)\n            dispatch(closePopup())\n          }\n          else {\n            sendToast({message: data?.message})\n          }\n        })\n      }else {\n        sendToast({message: 'Tên nhóm là trường bắt buộc. '})\n      }\n    }else {\n      if (dataInStreamAds?.group){\n        inStreamAdsApi.setInStreamAds(dataInStreamAds, idContentProvider, true).then(res=>{\n          const data = res?.data\n          if (res?.success){\n            const newDataGroup = [...newData, data]\n            const sortNewDataGroup = newDataGroup.reverse()\n            setNewData(sortNewDataGroup)\n            dispatch(closePopup())\n          }\n          else {\n            sendToast({message: data?.message})\n          }\n        })\n      }else {\n        sendToast({message: 'Tên nhóm là trường bắt buộc. '})\n      }\n    }\n  }\n\n  const onChangeNameGroup = (value) => {\n    setDataAds({...dataInStreamAds, group: value})\n  }\n  const onChangeTimeSkip = (value) => {\n    setDataAds({...dataInStreamAds, skip_after: value})\n  }\n  const onChangeType = (item) =>{\n    setDataAds({...dataInStreamAds, type: item })\n  }\n  const onChangeStatus = (item) => {\n    setDataAds({...dataInStreamAds, status: item?.status})\n  }\n  const onChangeSkip = (item) => {\n    setDataAds({...dataInStreamAds, can_skip: item?.can_skip})\n  }\n  const onChangePlatform = (item) => {\n    setDataAds({...dataInStreamAds, platform: item?.name, is_all_platform: item?.is_all_platform})\n  }\n\n\n  const setContent = (content) => {\n    const title = content?.name\n    const id = content?.id\n    const newContent = new Object({id, title})\n    setDataAds({...dataInStreamAds, content: newContent})\n  }\n  const setVastUrl = (vastUrl) => {\n    setDataAds({\n      ...dataInStreamAds,\n      vast_url: vastUrl\n    })\n  }\n  const handleClose = () => {\n    dispatch(closePopup())\n  }\n\n\n\n  return(\n      <>\n        <CModal\n            closeOnBackdrop={false}\n            show={true}  centered={true} size={'xl'}>\n          <CModalHeader className=\"colorHeader\">\n            <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n              <h4 className=\"mb-0\">Thông tin quảng cáo </h4>\n              <CButton className='p-0 shadow-none' onClick={handleClose}>\n                <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n              </CButton>\n            </div>\n          </CModalHeader>\n          <CModalBody>\n            <CRow className={'justify-content-between'} >\n              {/*<GroupInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    onChangeNameGroup={onChangeNameGroup}*/}\n              {/*/>*/}\n              {/*<TypeInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n              {/*    onChangeType={onChangeType}*/}\n              {/*/>*/}\n              {/*<VastUrlInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    setVastUrl={setVastUrl}*/}\n              {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n              {/*/>*/}\n              {/*<StatusInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    dataInStreamAdsStatus={dataInStreamAdsStatus}*/}\n              {/*    onChangeStatus={onChangeStatus}*/}\n              {/*/>*/}\n              {/*<SkipInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    dataInStreamAdsSkip={dataInStreamAdsSkip}*/}\n              {/*    onChangeSkip={onChangeSkip}*/}\n              {/*/>*/}\n              {/*<SkipAfterInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    onChangeTimeSkip={onChangeTimeSkip}*/}\n              {/*/>*/}\n              {/*<PlatformInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    onChangePlatform={onChangePlatform}*/}\n              {/*    dataInStreamAdsPlatForm={dataInStreamAdsPlatForm}*/}\n              {/*/>*/}\n              {/*<ContentInStreamAds*/}\n              {/*    itemAds={dataInStreamAds}*/}\n              {/*    dataInStreamAdsContent={dataInStreamAdsContent}*/}\n              {/*    setContent={setContent}*/}\n              {/*    dataInStreamAdsType={dataInStreamAdsType}*/}\n              {/*/>*/}\n            </CRow>\n          </CModalBody>\n          <CModalFooter>\n            <div className=\"d-flex justify-content-end mt-3\">\n              <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={onCreateInStreamAds}>{ 'Tạo'}</CButton>\n            </div>\n          </CModalFooter>\n        </CModal>\n      </>\n  )\n}\nconst dataInStreamAdsType = [\n  {id:'Pre-roll',name: 'Pre-roll'},\n  {id:'Mid-roll', name: 'Mid-roll'}\n]\nconst dataInStreamAdsStatus = [\n  {id: 'show', name: 'Hiện', status: 1},\n  {id: 'hide', name: 'Ẩn', status: 0},\n]\nconst dataInStreamAdsSkip = [\n  {id: 'yes', name: 'Có', can_skip: true},\n  {id: 'no', name: 'Không', can_skip: false}\n]\nconst dataInStreamAdsPlatForm = [\n  {id: 'all', name: 'Tất cả', is_all_platform: true},\n  {id: 'web', name:'Web', is_all_platform: false},\n  {id: 'iOS', name:'iOS', is_all_platform: false},\n  {id: 'Android', name:'Android', is_all_platform: false},\n  {id: 'AndroidTV', name:'AndroidTV', is_all_platform: false},\n  {id: 'Samsung-TV', name:'Samsung-TV', is_all_platform: false},\n  {id: 'LG-TV', name:'LG-TV', is_all_platform: false},\n]\nconst dataInStreamAdsContent = [\n  {id: 'all', name: 'Tất cả', is_all_content: true},\n  {id: 'filter', name: 'Chọn nội dung ...', is_all_content: false},\n]\nexport default PopupCreateNewInStreamAds\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContent.js",["430","431","432","433","434","435","436","437","438","439"],"import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalHeader,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContentProviderById} from \"../../../actions/content\";\nimport contentApi from \"../../../apis/contentApi\";\nimport {parsedIdAdsGroups, parsedIdContentProvider} from \"../../../helpers/common\"\n\n\nconst PopupEditContent = (props) => {\n  const {\n    modal,\n    setPopupEdit,\n    listAdsGroups,\n    dataContentList,\n    getListAdsGroups,\n\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage, rowPerPage, setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n    handleScroll\n  } = props\n  const  { status, group} = currentItemAds || {}\n  const idProvider = currentItemContentProvider?.id\n  const {contentProviders} = currentItem || {}\n\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const dispatch  = useDispatch()\n  const dataContent = useSelector(state => state?.Content)\n  const nameItemProvider =  dataContent?.CONTENT_PROVIDER?.name\n  const itemContentProvider = dataContent?.CONTENT_PROVIDER\n\n  useEffect(()=>{\n    setStatus(status)\n    setGroupAds(group)\n    setNameProvider(nameItemProvider)\n\n  },[status, group, nameItemProvider ])\n\n\n  useEffect(()=> {\n    if (idProvider) dispatch(getContentProviderById(idProvider))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentItemContentProvider])\n\n\n  const [idContentProviders, setIdContentProvider] = useState( [])\n  const [idInStreamAds, setIdInStreamAds] = useState([])\n\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  })\n\n\n  useEffect(()=> {\n    if (elementAds?.id) handleChangeIdAdsGroups(elementAds)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[elementAds?.id, elementAds?.status])\n\n  const onChangeContentProvider = (item) => {\n    let arr = [...arrIdContentProvider]\n    arr = arr.filter(ite => ite !== itemContentProvider?.id)\n    arr.push(item?.id)\n    setIdContentProvider(arr)\n  }\n\n\n  const handleChangeIdAdsGroups = (elm) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds = idAds.filter(ite => ite?.id !== currentItemAds?.id)\n    idAds.push(elm)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdInStreamAds(idAds)\n    } else {\n      setIdInStreamAds(idAds)\n    }\n  }\n  const onChangeAdsItem = (item) => {\n    setElementAds({...elementAds, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n  const onChangeStatus = (item) => {\n    setElementAds({...elementAds, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n\n  const [currentStatus, setStatus] = useState(status || '')\n  const [currentGroup, setGroupAds] = useState(group || '')\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '')\n\n  const handleClose =() => {\n    setPopupEdit(false)\n  }\n  const handleSave = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idInStreamAds).then(res=>{\n      if (res?.success){\n        contentApi?.getContentList(\n          currentPage -1,\n          rowPerPage,\n          keyWord,\n          category,\n          type,\n          idContentProvider,\n          idAdsGroup\n        ).then(\n          resList =>{\n            const data = resList?.data\n            if (resList?.success) {\n              setCurrentPageList(data?.items)\n            }\n          }\n        )\n        setPopupEdit(false)\n      }\n    })\n  }\n\n\n  return (\n    <React.Fragment>\n      <CModal\n          // size={'lg'}\n        show={modal}\n        onClose={handleClose}\n        centered={true}\n        closeOnBackdrop={false}\n        style={{minWidth: '555px'}}\n      >\n        <CModalHeader className=\"colorHeader\">\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Sửa Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          {/*<div className={'d-flex flex-row'}>*/}\n          {/*  <NameContentProviderItem*/}\n          {/*    dataContentList={dataContentList}*/}\n          {/*    nameItemProvider={currentNameProvider}*/}\n          {/*    setNameProvider={setNameProvider}*/}\n          {/*    onChangeContentProvider={onChangeContentProvider}*/}\n          {/*    arrIdContentProvider={arrIdContentProvider}*/}\n          {/*    getListAdsGroups={getListAdsGroups}*/}\n          {/*    handleScroll={handleScroll}*/}\n          {/*  />*/}\n          {/*  <AdsContentItem*/}\n          {/*    listAdsGroup={listAdsGroups}*/}\n          {/*    groupName={currentGroup}*/}\n          {/*    setGroupAds={setGroupAds}*/}\n          {/*    onChangeAdsItem={onChangeAdsItem}*/}\n          {/*  />*/}\n          {/*  <StatusContentItem*/}\n          {/*    onChangeStatus={onChangeStatus}*/}\n          {/*    status={currentStatus} setStatus={setStatus}/>*/}\n          {/*</div>*/}\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleSave}>Lưu</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupEditContent\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/autoCompleteMaterialUI/AutoCompleteMaterial.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupContent.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddVast.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupDeleteLiveItem.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/liveEventApi.js",["440"],"import ConfigApi from \"../config/ConfigApi\";\nimport ConfigConstant from \"../config/ConfigConstant\";\nimport AxiosClient from \"./axiosClient\";\n\nclass LiveEventApi {\n  static async setInStreamAds(item, idContentProvider, isAllContent) {\n    const url = ConfigApi.inStreamAds.inStreamAds\n    const method = ConfigConstant.API_METHOD.POST\n    const params = {\n      group: item?.group,\n      type: item?.type,\n      vast_url: item?.vast_url,\n      status: item?.status,\n      can_skip: item?.can_skip,\n      skip_after: parseInt(item?.skip_after),\n      platform: item?.platform,\n      is_all_platform: item?.is_all_platform,\n      content_provider_id: idContentProvider,\n      is_all_content: isAllContent,\n      content_id: item?.content?.id\n    }\n    return AxiosClient.executeWithCache({url, method, params}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async setLiveEntity(name, des, dvr, relay, presetId) {\n    const url = ConfigApi.live.liveEvent\n    const method = ConfigConstant.API_METHOD.POST\n    const params = {\n      name: name,\n      description: des,\n      dvr: dvr,\n      preset_id: presetId,\n      relay: relay,\n    }\n    return AxiosClient.executeWithCache({url, method, params}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async editLiveEntity(id, name, des, dvr, relay, presetId) {\n    const url = ConfigApi.live.liveEvent + \"/\" + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      name: name,\n      description: des,\n      dvr: dvr,\n      relay: relay,\n      preset_id: presetId\n    }\n    return AxiosClient.executeWithCache({url, method, params}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async getListLiveEvent ( limit, offset , keyWord) {\n    let url = ConfigApi.live.liveEvent + '?limit='+ limit + '&offset=' + offset\n    if(keyWord) url += '&keyword=' + keyWord\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n    static async getListInStreamAds(id, limit, page) {\n    const url = ConfigApi.inStreamAds.listInStreamAds + '/' + id + '/instream-ads' + '?limit='+ limit + '&page=' + page\n\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({url, method}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async editListInStreamAds(id) {\n    const url = ConfigApi.inStreamAds.inStreamAds + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    return AxiosClient.executeWithCache({url, method}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async getListInStreamAdsById(id) {\n    const url = ConfigApi.inStreamAds.getListAllInStreamAds + '/' + id + '/instream-ads'\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({url, method}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async deleteLiveEventById(id) {\n    const url = ConfigApi.live.liveEvent + '/' + id\n    const method = ConfigConstant.API_METHOD.DELETE\n    return AxiosClient.executeWithCache({url, method}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n  static async editInStreamAdsById(id, item, idContentProvider, isAllContent) {\n    const url = ConfigApi.inStreamAds.inStreamAds + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      group: item?.group,\n      type: item?.type,\n      vast_url: item?.vast_url,\n      status: item?.status,\n      can_skip: item?.can_skip,\n      skip_after: parseInt(item?.skip_after),\n      platform: item?.platform,\n      is_all_platform: item?.is_all_platform,\n      content_provider_id: idContentProvider,\n      is_all_content: isAllContent,\n      content_id: item?.content?.id\n\n    }\n    return AxiosClient.executeWithCache({url, method, params}).then(res => {\n      const data = res?.data\n      return {...res, data}\n    })\n  }\n\n}\nexport default LiveEventApi\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditLiveEvent.js",["441"],"import React, {useEffect, useState} from 'react'\nimport {\n  CBadge,\n  CButton, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CForm, CInput,\n  CInputGroup,\n  CInputGroupPrepend, CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CSwitch\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\nimport {sendToast} from \"../../../helpers/common\";\nimport LiveEventApi from \"../../../apis/liveEventApi\";\nimport ConfigText from \"../../../config/ConfigText\";\nimport ConfigData from \"../../../config/ConfigData\";\n\n\n\nconst PopupEditLiveEvent = ({\n  item, rowPerPage, currentPage, setCurrentPageList\n}) => {\n  const [valueNameContent, setValueName] = useState(  item?.name || '')\n  const [checkDvr, setDvr] = useState( false)\n  const [desc, setDesc] = useState(  item?.description || '')\n  const [presetId, setPresetId] = useState({\n    key: item?.preset_id,\n    name: item?.preset_id\n  })\n  const [relay, setRelay] = useState({\n    key: item?.relay[0]?.key,\n    name:item?.relay[0]?.name,\n    url: item?.relay[0]?.url,\n  })\n  const [error, setError] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch(closePopup())\n  }\n\n  const onChangeNameLiveEntity = (e) => {\n    const value = e.target.value\n    setValueName(value)\n  }\n  const onChangeDescription = (e) => {\n    const value = e.target.value\n    setDesc(value)\n  }\n  const onCheckedDvr = (e) =>{\n    const value = e.target.checked\n    setDvr(value)\n  }\n  const onCLickPresetId = (item) =>{\n    setPresetId(item)\n  }\n  const onChangeKeyRelay = (e) =>{\n    const value = e.target.value\n    setRelay({...relay, key: value})\n  }\n  const onChangeNameRelay = (e) =>{\n    const value = e.target.value\n    setRelay({...relay, name: value})\n  }\n  const onChangeUrlRelay = (e) =>{\n    const value = e.target.value\n    setRelay({...relay, url: value})\n  }\n  const onEditInStreamAds = () => {\n    if (!valueNameContent){\n      sendToast({message: ConfigText.LIVE.IMPORT_NAME_LIVE_ENTITY})\n    }else {\n      if (valueNameContent?.length < 3 || desc?.length < 3) {\n        setError(true)\n      }else {\n        let arrRelay = []\n        arrRelay.push(relay)\n        const id = item?.id\n        LiveEventApi.editLiveEntity(\n            id,\n            valueNameContent,\n            desc,\n            checkDvr,\n            arrRelay,\n            presetId?.key,\n        ).then(res => {\n          if (res?.success){\n              LiveEventApi?.getListLiveEvent(rowPerPage, currentPage*10).then(resp=>{\n                const dataList = resp?.data\n                if (resp?.success){\n                  setCurrentPageList(dataList?.data?.events)\n                }\n              })\n              dispatch(closePopup())\n          }\n        })\n      }\n    }\n  }\n\n\n  return(\n    <>\n    <CModal\n      closeOnBackdrop={false}\n      show={true} onClose={handleClose} centered={true}>\n      <CModalHeader className=\"colorHeader\">\n        <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n          <h4 className=\"mb-0\">{ConfigText.LIVE.LIVE_EVENT_INFO}</h4>\n          <CButton className='p-0 shadow-none' onClick={handleClose}>\n            <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n          </CButton>\n        </div>\n      </CModalHeader>\n      <CModalBody>\n        <CForm>\n          <div className=\"pb-3 pt-3\">\n            <CInputGroup>\n              <CInputGroupPrepend>\n                <CInputGroupText>{ConfigText.GENERAL.NAME}</CInputGroupText>\n              </CInputGroupPrepend>\n              <CInput type=\"text\"\n                      placeholder={ConfigText.LIVE.NAME_LIVE_ENTITY}\n                      value={valueNameContent}\n                      maxLength={100}\n                      minLength={3}\n                      onChange={onChangeNameLiveEntity}  />\n            </CInputGroup>\n          </div>\n          <div className=\"pb-3\">\n            <CInputGroup>\n              <CInputGroupPrepend>\n                <CInputGroupText>{ConfigText.LIVE.DVR}</CInputGroupText>\n              </CInputGroupPrepend>\n              <CBadge >\n                <CSwitch className={'mx-1'} color={'success'} labelOn={'ON'} labelOff={'OFF'}\n                         onChange={onCheckedDvr}\n                         checked={!!checkDvr}/>\n              </CBadge>\n            </CInputGroup>\n          </div>\n          <div  className=\"pb-3\">\n            <CInputGroup>\n              <CInputGroupPrepend>\n                <CInputGroupText>{ConfigText.LIVE.DESCRIPTION_INFO}</CInputGroupText>\n              </CInputGroupPrepend>\n              <CInput  type=\"text\"\n                       placeholder={ConfigText.LIVE.IMPORT_DESCRIPTION_INFO}\n                       value={desc}\n                       onChange={onChangeDescription}\n                       maxLength={100}\n                       minLength={3}/>\n            </CInputGroup>\n          </div>\n          {error &&\n            <p className=\"text\" style={{color: 'red', textAlign: 'end'}}>{ConfigText.LIVE.ERR_CHARACTER_LIMIT}</p>\n          }\n          <div  className=\"pb-3\">\n            <CInputGroup>\n              <CInputGroupPrepend>\n                <CInputGroupText>{ConfigText.LIVE.PRESET_ID}</CInputGroupText>\n              </CInputGroupPrepend>\n              <CDropdown className=\"btn-group\" style={{width: '138px'}}>\n                <CDropdownToggle color=\"default\" className='border inputLive color-white'>\n                  <span className=\"text-filter\" style={{ color: '#222', textTransform: 'uppercase' }}>{presetId?.name}</span>\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  <div>\n                    {(ConfigData.dataPresetId || []).map((item, index) => {\n                      return (\n                          <CDropdownItem key={index} onClick={()=>onCLickPresetId(item)}>{item?.name}</CDropdownItem>\n                      )\n                    })\n                    }\n                  </div>\n                </CDropdownMenu>\n              </CDropdown>\n            </CInputGroup>\n          </div>\n          <div className=\"pb-3\">\n            <CInputGroup>\n              <CInputGroupPrepend>\n                <CInputGroupText>{ConfigText.LIVE.REPLAY}</CInputGroupText>\n              </CInputGroupPrepend>\n              <div style={{width:'85%'}}>\n                <CInput\n                    className=\"inputLive inputKey\"\n                    type=\"text\"\n                    placeholder={ConfigText.LIVE.KEY_RELAY} onChange={onChangeKeyRelay}\n                    value={relay?.key}\n                    maxLength={100}\n                    minLength={3}/>\n                <CInput\n                    className=\"inputLive inputName\"\n                    type=\"text\"\n                    placeholder={ConfigText.LIVE.NAME_RELAY} onChange={onChangeNameRelay}\n                    value={relay?.name}\n                    maxLength={100}\n                    minLength={3}/>\n                <CInput\n                    className=\"inputLive inputUrl\"\n                    type=\"text\"\n                    placeholder={ConfigText.LIVE.URL_RELAY} onChange={onChangeUrlRelay}\n                    value={relay?.url}\n                    maxLength={100}\n                    minLength={3}/>\n              </div>\n            </CInputGroup>\n          </div>\n        </CForm>\n      </CModalBody>\n      <CModalFooter>\n        <div className=\"d-flex justify-content-end mt-3\">\n          <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={()=>onEditInStreamAds()}>{ConfigText.GENERAL.SAVE}</CButton>\n        </div>\n      </CModalFooter>\n    </CModal>\n    </>\n  )\n}\nexport default PopupEditLiveEvent\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/login/Login.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/changePassWord/ChangePassWord.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupLogout.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/createCustomer/CreateCustomer.js",["442"],"import React, { useState} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText, CLink,\n  CRow, CSwitch\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {validateEmail} from \"../../../helpers/common\";\nimport CustomerApi from \"../../../apis/customerApi\";\nimport {useHistory} from \"react-router\";\nimport ConfigUrl from \"../../../config/ConfigUrl\";\n\nconst CreateCustomer = ({\n    rowPerPage,\n    currentPage,\n    setCurrentPageList\n  }) => {\n  const [createCustomer, setCustomer] = useState({\n    email:'',\n    password:'',\n    partner: 2\n  })\n  const history = useHistory()\n  const [validatedEmail, setValidatedEmail] = useState(false)\n  let [error, setError] = useState('')\n\n\n  const onChangEmail = (e) => {\n    const value = e.target.value\n    const checkValueEmail = validateEmail(value)\n    setValidatedEmail(checkValueEmail)\n    setCustomer({...createCustomer, email: value})\n  }\n  const onChangPassword = (e) => {\n    const value = e.target.value\n    setCustomer({...createCustomer, password: value})\n  }\n  const onChangPartner = (e) => {\n    const value = e.target.value\n    setCustomer({...createCustomer, partner: value})\n  }\n\n  const onClickCreatAccount = async () => {\n    if (validateEmail(createCustomer?.email)) {\n      CustomerApi.createCustomer(createCustomer).then(res=>{\n        const data = res?.data\n        if (data?.code === \"SUCCESS\"){\n          history.push(ConfigUrl.user.LOGIN + '?rel=/')\n        }else {\n          setError(data?.message)\n        }\n      })\n    } else {\n      setError('Email không hợp lệ')\n    }\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      onClickCreatAccount()\n    }\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create customer</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"text\" placeholder=\"Email\" autoComplete=\"email\"\n                            onKeyPress={handleKeyPress}\n                            onChange={onChangEmail}/>\n                  </CInputGroup>\n                  {!validatedEmail && <p className=\"\" style={{color: 'red', textAlign: 'end'}}>{error}</p>}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\"\n                            onKeyPress={handleKeyPress}\n                            onChange={onChangPassword} />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>admin</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput type=\"number\" placeholder=\"Partner\" autoComplete=\"partner\"\n                            value={createCustomer?.partner}\n                            onKeyPress={handleKeyPress}\n                            onChange={onChangPartner}/>\n                  </CInputGroup>\n                  {error &&\n                  <p className=\"text\" style={{color: 'red', textAlign: 'end'}}>{error}</p>\n                  }\n                  <CButton color=\"success\" block onClick={onClickCreatAccount}>Create Account</CButton>\n                  <CLink to=\"/live/content-live-list\">\n                    <p className=\"mt-3 mb-0 register-back\">Quay lại Live Event Management Tool</p>\n                  </CLink>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\n\nexport default CreateCustomer\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/CustomerList.js",["443","444","445"],"import React, { useState, useEffect } from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CPagination,\n  CImg,\n  CSwitch,\n  CLink,\n} from '@coreui/react'\n\nimport { useDispatch } from \"react-redux\";\nimport TitleLive from \"../LiveManagementEvent/TitleLive/TitleLive\";\nimport {parsedPageLimit} from \"../../helpers/common\";\nimport {openPopup} from \"../../actions/popup\";\nimport {POPUP} from \"../../constants/constants\";\nimport ConfigImage from \"../../config/ConfigImage\";\nimport ConfigText from \"../../config/ConfigText\";\nimport customerApi from \"../../apis/customerApi\";\n\nconst CustomerList = () => {\n  const dispatch = useDispatch();\n\n  const [currentPageList, setCurrentPageList] = useState()\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [maxPage, setMaxPage] = useState(1);\n  const [total, setTotal] = useState()\n\n  useEffect(() => {\n    customerApi?.listCustomers(rowPerPage,  (currentPage-1)*10 ).then(res => {\n      const data = res?.data\n      if (res?.success){\n        setCurrentPageList(data?.customers)\n        setTotal(data?.total)\n      }\n    })\n  }, [currentPage, rowPerPage])\n\n  useEffect(() => {\n    if (currentPageList) {\n      let max = parsedPageLimit(total, rowPerPage)\n      setMaxPage(max)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, rowPerPage])\n\n  const handleChangePage = (item) => {\n    setRowPerPage(item?.value)\n  }\n\n  const handleUpdateCustomer = (item) => {\n    dispatch(openPopup({\n      name: POPUP.NAME.CUSTOMER.UPDATE_CUSTOMER,\n      item\n    }))\n  }\n  const handleUpdateStatusCustomer = (item) => {\n    dispatch(openPopup({\n      name: POPUP.NAME.CUSTOMER.UPDATE_STATUS_CUSTOMER,\n      item,\n      rowPerPage,\n      currentPage,\n      setCurrentPageList\n    }))\n  }\n  const handleCreateCustomer = () => {\n    dispatch(openPopup({\n      name: POPUP.NAME.CUSTOMER.CREATE_CUSTOMER,\n      rowPerPage,\n      setCurrentPage,\n      setCurrentPageList\n    }))\n  }\n\n\n  const handleOpenDelete = (item) => {\n    dispatch(openPopup({\n      name: POPUP.NAME.CUSTOMER.DELETE_CUSTOMER,\n      item,\n      currentPage,\n      rowPerPage,\n      setCurrentPageList\n    }))\n  }\n\n\n  const field = true ? ['Email' ,'Trạng thái', \"Quản lý\"] : ['Email', 'Trạng thái']\n  return (\n    <React.Fragment>\n      <div>\n        <TitleLive title={ConfigText.CUSTOMER.CUSTOMER_LIST}/>\n        <CRow className={'row mx-0'}>\n          <CCol  className=\"col-sm-12 p-0 \">\n            <div className=\"form-inline justify-content-sm-end c-datatable-items-per-page\">\n              <CLink>\n                <button className=\"btn btnLive mb-3\"  onClick={handleCreateCustomer}>\n                  Tạo Customer\n                </button>\n              </CLink>\n            </div>\n          </CCol>\n        </CRow>\n        <CRow className={'justify-content-between'}>\n          <CCol>\n            <CCard>\n              <CCardBody>\n                <CDataTable\n                  items={ currentPageList}\n                  fields={field}\n                  itemsPerPage={10}\n                  scopedSlots={{\n                    'Email':\n                      (item) => (\n                        <td className=\"text-name-provider\">\n                          <strong>{item.email}</strong>\n                        </td>\n                      ),\n                    'Trạng thái':\n                      (item) => (\n                          <td style={{verticalAlign: \"middle\"}}>\n                            {item?.status === 0 &&\n                              <CBadge>\n                                  <CButton  className=\"btn btnDefault\"  block >{ConfigText.CUSTOMER.NOT_ACTIVE_CUSTOMER}</CButton>\n                              </CBadge>\n                            }\n                            {item?.status === 1 &&\n                            <CBadge>\n                              <CButton  className=\"btn btnLive\" block >{ConfigText.CUSTOMER.ACTIVE_CUSTOMER}</CButton>\n                            </CBadge>\n                            }\n                            {item?.status === -1 &&\n                            <CBadge>\n                              <CButton  className=\"btn btnDefault\"  block >{ConfigText.CUSTOMER.LOCK_CUSTOMER}</CButton>\n                            </CBadge>\n                            }\n                            {item?.status === -2 &&\n                            <CBadge>\n                              <CButton  className=\"btn btnDefault\" block >{ConfigText.CUSTOMER.DELETE}</CButton>\n                            </CBadge>\n                            }\n                          </td>\n                      ),\n                    'Quản lý':\n                      (item) => (\n                        <td>\n                          {/*<CBadge>*/}\n                          {/*  <CButton block color=\"info\" onClick={()=>handleUpdateCustomer(item)}>*/}\n                          {/*    <CImg src={ConfigImage.edit} alt=\"edit\" />*/}\n                          {/*    <span className=\"ml-1\">{ConfigText.GENERAL.EDIT}</span>*/}\n                          {/*  </CButton>*/}\n                          {/*</CBadge>*/}\n                          <CBadge>\n                            <CButton block color=\"info\" onClick={()=>handleUpdateStatusCustomer(item)}>\n                              <CImg src={ConfigImage.edit} alt=\"edit status\" />\n                              <span className=\"ml-1\">{ConfigText.GENERAL.EDIT_STATUS}</span>\n                            </CButton>\n                          </CBadge>\n                        </td>\n                      ),\n\n                  }}\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <div className=\"m-1 d-flex justify-content-between align-items-center\">\n          <CDropdown className=\"btn-group\" style={{ width: '100px',  }}>\n            <CDropdownToggle color=\"default\" className='shadow-none mb-2 row-page color-white'>\n              <span className=\"mr-2\" style={{ color: '#222'}}>{rowPerPage + ' dòng'}</span>\n            </CDropdownToggle>\n            <CDropdownMenu>\n              {rowPerPageList && (rowPerPageList || []).map((item, index) => {\n                return (\n                  <CDropdownItem key={index} onClick={()=>handleChangePage(item)}>{item?.name}</CDropdownItem>\n                )\n              })\n              }\n            </CDropdownMenu>\n          </CDropdown>\n          <CPagination\n            nextButton={ConfigText.GENERAL.AFTER}\n            previousButton={ConfigText.GENERAL.BEFORE}\n            activePage={currentPage}\n            pages={maxPage}\n            onActivePageChange={setCurrentPage}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\nconst rowPerPageList = [\n  { id: 1, name: '5 dòng', value: 5 },\n  { id: 2, name: '10 dòng', value: 10 },\n  { id: 3, name: '20 dòng', value: 20 },\n]\n\nexport default CustomerList\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupUpdateCustomer.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/customerApi.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupDeleteCustomer.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigText.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupCreateLiveEntity.js",["446"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupCreateCustomer.js",["447","448"],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/CreateLiveEntity/CreateLiveEntity.js",["449","450","451"],"\nimport React, {useState} from 'react'\nimport CreateLiveEntityInfo from \"./CreateLiveEntityInfo/CreateLiveEntityInfo\";\nimport TitleLive from \"../TitleLive/TitleLive\";\n\nconst CreateLiveEntity = () => {\n\n  const [newData, setNewData] = useState( [])\n  const [disable, setDisable] = useState('')\n\n  return (\n      <>\n        <TitleLive isCreateProvider/>\n        <CreateLiveEntityInfo\n            setDisable={setDisable}\n            isCreateProvider/>\n      </>\n  )\n}\n\nexport default CreateLiveEntity\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/TitleLive/TitleLive.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/CreateLiveEntity/CreateLiveEntityInfo/CreateLiveEntityInfo.js",["452","453","454","455","456","457","458","459","460","461","462"],"import React, {useEffect, useState} from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CInput,\n  CInputGroup,\n  CLink,\n  CRow,\n  CSwitch,\n} from \"@coreui/react\";\nimport contentApi from \"../../../../apis/contentApi\";\nimport {useHistory, useLocation} from \"react-router\";\nimport {handleLocalStorage, sendToast} from \"../../../../helpers/common\";\nimport LocalStorage from \"../../../../config/LocalStorage\";\nimport LiveEventApi from \"../../../../apis/liveEventApi\";\n\n\nconst queryString = require('query-string');\n\nconst CreateLiveEntityInfo =  (props) => {\n\n  const { dataItem, setDisable, isCreateProvider} = props\n\n  const location = useLocation()\n  const history = useHistory()\n  const parsedID = queryString.parse(location.search)\n  const { name, status, is_default, description} = dataItem || {}\n\n  const isStatus = status === 1\n  const isDefault = is_default === 1\n\n  const [valueNameContent, setValueName] = useState(  '')\n  const [checkDvr, setDvr] = useState( false)\n  const [desc, setDesc] = useState(  '')\n\n  const [valueCheckStatus, setValueStatus] = useState(status || 1)\n  const [isBack, setIsBack] = useState(false)\n\n  const [checkAds, setAds] = useState( isDefault || true)\n\n  const [valueCheckDefault, setValueDefault] = useState(is_default || 1)\n\n\n\n\n  useEffect(()=>{\n  if (!isCreateProvider){\n    setDvr(isStatus)\n    setAds(isDefault)\n    setValueStatus(status)\n    setValueDefault(is_default)\n    setValueName(name)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[isDefault, isStatus ,name])\n\n\n  const onChangeNameLiveEntity = (e) => {\n    const value = e.target.value\n    setValueName(value)\n  }\n  const onChangeDescription = (e) => {\n    const value = e.target.value\n    setDesc(value)\n  }\n  const onCheckedDvr = (e) =>{\n    const value = e.target.checked\n    setDvr(value)\n  }\n  const onCheckedAds = (e) =>{\n    const value = e.target.checked\n    setAds(value)\n    if (value) setValueDefault(1)\n    else setValueDefault(0)\n  }\n\n  const onSave = () => {\n    if (!valueNameContent){\n      sendToast({message: 'Vui lòng nhập tên Live Entity'})\n    }else {\n      const relay = [\n        {\n          \"key\": \"\",\n          \"name\": \"test11\",\n          \"url\": \"\"\n        }\n      ]\n      const presetId = 'hd'\n      LiveEventApi.setLiveEntity(\n        valueNameContent,\n        desc,\n        checkDvr,\n        relay,\n        presetId,\n      ).then(res => {\n        if (res.success){\n          history.push('/live/content-live-list')\n          window.location.reload()\n        }\n      })\n    }\n  }\n\n  return(\n    <div className=\"p-4 mb-4\" style={{backgroundColor: 'white'}}>\n      <CRow className=\"justify-content-between pb-4\" >\n        <CCol className=\"col-lg-9\">\n          <h5 className=\"mb-0 font-weight-bold\">THÔNG TIN LIVE ENTITY</h5>\n        </CCol>\n        <CCol className=\"col-lg-2\">\n          <CButton block color=\"success\" onClick={onSave}>{ 'Lưu' }</CButton>\n        </CCol>\n        <CCol className=\"col-lg-1\">\n          <CLink to=\"/live/content-live-list\">\n            <CButton block color=\"danger\">Huỷ</CButton>\n          </CLink>\n        </CCol>\n      </CRow>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"pr-3\">\n          <CInputGroup>\n            <span className='mr-2 mt-2'>Tên</span>\n            <CInput type=\"text\" value={valueNameContent || ''}\n                    placeholder=\"Nhập tên Live Entity\"\n                    style={{borderTopLeftRadius: '0.25rem', borderBottomLeftRadius: '0.25rem'}}\n                    onChange={onChangeNameLiveEntity}  />\n          </CInputGroup>\n        </div>\n        <div className=\"pr-3\">\n          <span className=' mt-2' style={{verticalAlign: 'super'}}>Trạng thái</span>\n          <CBadge >\n            <CSwitch className={'mx-1'} color={'success'} labelOn={'ON'} labelOff={'OFF'}\n                     onChange={onCheckedDvr}\n                     checked={!!checkDvr}/>\n          </CBadge>\n        </div>\n        {/*<div className=\"pr-3\">*/}\n        {/*  <span className=' mt-2' style={{verticalAlign: 'super'}}>Mặc định hiện ads</span>*/}\n        {/*  <CBadge >*/}\n        {/*    <CSwitch className={'mx-1'} color={'success'} labelOn={'ON'} labelOff={'OFF'}*/}\n        {/*             onChange={onCheckedAds} checked={!!checkAds }/>*/}\n        {/*  </CBadge>*/}\n        {/*</div>*/}\n        <div className=\"pr-3\">\n          <CInputGroup>\n            <span className='mr-2 mt-2'>Thông tin thêm</span>\n            <CInput  type=\"text\" value={(desc || description) || ''}\n                     style={{borderTopLeftRadius: '0.25rem', borderBottomLeftRadius: '0.25rem'}}\n                     placeholder=\"Nhập thông tin thêm\" onChange={onChangeDescription}\n                      maxLength={256}/>\n          </CInputGroup>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateLiveEntityInfo\n","/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/actions/customer.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/reducers/customer.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/config/ConfigData.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/customers/PopupUpdateStatusCustomer.js",[],"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddRelay.js",[],{"ruleId":"463","replacedBy":"464"},{"ruleId":"465","replacedBy":"466"},{"ruleId":"467","severity":1,"message":"468","line":18,"column":24,"nodeType":"469","messageId":"470","endLine":18,"endColumn":25,"suggestions":"471"},{"ruleId":"467","severity":1,"message":"468","line":18,"column":49,"nodeType":"469","messageId":"470","endLine":18,"endColumn":50,"suggestions":"472"},{"ruleId":"473","severity":1,"message":"474","line":2,"column":1,"nodeType":"475","endLine":19,"endColumn":2},{"ruleId":"476","severity":1,"message":"477","line":30,"column":3,"nodeType":"478","messageId":"479","endLine":41,"endColumn":4},{"ruleId":"473","severity":1,"message":"474","line":59,"column":1,"nodeType":"475","endLine":64,"endColumn":2},{"ruleId":"473","severity":1,"message":"474","line":3,"column":1,"nodeType":"475","endLine":16,"endColumn":3},{"ruleId":"480","severity":1,"message":"481","line":2,"column":48,"nodeType":"482","messageId":"483","endLine":2,"endColumn":49},{"ruleId":"484","severity":1,"message":"485","line":12,"column":20,"nodeType":"486","messageId":"487","endLine":12,"endColumn":24},{"ruleId":"473","severity":1,"message":"474","line":15,"column":1,"nodeType":"475","endLine":22,"endColumn":2},{"ruleId":"484","severity":1,"message":"488","line":20,"column":9,"nodeType":"486","messageId":"487","endLine":20,"endColumn":16},{"ruleId":"463","replacedBy":"489"},{"ruleId":"465","replacedBy":"490"},{"ruleId":"484","severity":1,"message":"491","line":8,"column":8,"nodeType":"486","messageId":"487","endLine":8,"endColumn":24},{"ruleId":"484","severity":1,"message":"492","line":7,"column":79,"nodeType":"486","messageId":"487","endLine":7,"endColumn":85},{"ruleId":"484","severity":1,"message":"493","line":7,"column":87,"nodeType":"486","messageId":"487","endLine":7,"endColumn":98},{"ruleId":"484","severity":1,"message":"494","line":12,"column":8,"nodeType":"486","messageId":"487","endLine":12,"endColumn":13},{"ruleId":"484","severity":1,"message":"495","line":15,"column":9,"nodeType":"486","messageId":"487","endLine":15,"endColumn":16},{"ruleId":"484","severity":1,"message":"496","line":38,"column":9,"nodeType":"486","messageId":"487","endLine":38,"endColumn":16},{"ruleId":"484","severity":1,"message":"497","line":67,"column":9,"nodeType":"486","messageId":"487","endLine":67,"endColumn":21},{"ruleId":"484","severity":1,"message":"498","line":86,"column":9,"nodeType":"486","messageId":"487","endLine":86,"endColumn":23},{"ruleId":"484","severity":1,"message":"499","line":2,"column":66,"nodeType":"486","messageId":"487","endLine":2,"endColumn":70},{"ruleId":"484","severity":1,"message":"500","line":44,"column":9,"nodeType":"486","messageId":"487","endLine":44,"endColumn":26},{"ruleId":"484","severity":1,"message":"501","line":47,"column":9,"nodeType":"486","messageId":"487","endLine":47,"endColumn":25},{"ruleId":"484","severity":1,"message":"502","line":50,"column":9,"nodeType":"486","messageId":"487","endLine":50,"endColumn":21},{"ruleId":"484","severity":1,"message":"503","line":53,"column":9,"nodeType":"486","messageId":"487","endLine":53,"endColumn":23},{"ruleId":"484","severity":1,"message":"504","line":56,"column":9,"nodeType":"486","messageId":"487","endLine":56,"endColumn":21},{"ruleId":"484","severity":1,"message":"505","line":59,"column":9,"nodeType":"486","messageId":"487","endLine":59,"endColumn":25},{"ruleId":"484","severity":1,"message":"506","line":62,"column":9,"nodeType":"486","messageId":"487","endLine":62,"endColumn":19},{"ruleId":"484","severity":1,"message":"507","line":69,"column":9,"nodeType":"486","messageId":"487","endLine":69,"endColumn":19},{"ruleId":"508","severity":1,"message":"509","line":72,"column":24,"nodeType":"510","messageId":"511","endLine":72,"endColumn":47},{"ruleId":"484","severity":1,"message":"512","line":183,"column":7,"nodeType":"486","messageId":"487","endLine":183,"endColumn":26},{"ruleId":"484","severity":1,"message":"513","line":187,"column":7,"nodeType":"486","messageId":"487","endLine":187,"endColumn":28},{"ruleId":"484","severity":1,"message":"514","line":191,"column":7,"nodeType":"486","messageId":"487","endLine":191,"endColumn":26},{"ruleId":"484","severity":1,"message":"515","line":195,"column":7,"nodeType":"486","messageId":"487","endLine":195,"endColumn":30},{"ruleId":"484","severity":1,"message":"516","line":204,"column":7,"nodeType":"486","messageId":"487","endLine":204,"endColumn":29},{"ruleId":"484","severity":1,"message":"500","line":39,"column":11,"nodeType":"486","messageId":"487","endLine":39,"endColumn":28},{"ruleId":"484","severity":1,"message":"501","line":42,"column":11,"nodeType":"486","messageId":"487","endLine":42,"endColumn":27},{"ruleId":"484","severity":1,"message":"502","line":45,"column":11,"nodeType":"486","messageId":"487","endLine":45,"endColumn":23},{"ruleId":"484","severity":1,"message":"503","line":48,"column":11,"nodeType":"486","messageId":"487","endLine":48,"endColumn":25},{"ruleId":"484","severity":1,"message":"504","line":51,"column":11,"nodeType":"486","messageId":"487","endLine":51,"endColumn":23},{"ruleId":"484","severity":1,"message":"505","line":54,"column":11,"nodeType":"486","messageId":"487","endLine":54,"endColumn":27},{"ruleId":"484","severity":1,"message":"507","line":59,"column":11,"nodeType":"486","messageId":"487","endLine":59,"endColumn":21},{"ruleId":"508","severity":1,"message":"509","line":62,"column":28,"nodeType":"510","messageId":"511","endLine":62,"endColumn":51},{"ruleId":"484","severity":1,"message":"506","line":65,"column":11,"nodeType":"486","messageId":"487","endLine":65,"endColumn":21},{"ruleId":"484","severity":1,"message":"512","line":181,"column":7,"nodeType":"486","messageId":"487","endLine":181,"endColumn":26},{"ruleId":"484","severity":1,"message":"513","line":185,"column":7,"nodeType":"486","messageId":"487","endLine":185,"endColumn":28},{"ruleId":"484","severity":1,"message":"514","line":189,"column":7,"nodeType":"486","messageId":"487","endLine":189,"endColumn":26},{"ruleId":"484","severity":1,"message":"515","line":193,"column":7,"nodeType":"486","messageId":"487","endLine":193,"endColumn":30},{"ruleId":"484","severity":1,"message":"516","line":202,"column":7,"nodeType":"486","messageId":"487","endLine":202,"endColumn":29},{"ruleId":"484","severity":1,"message":"517","line":30,"column":10,"nodeType":"486","messageId":"487","endLine":30,"endColumn":23},{"ruleId":"484","severity":1,"message":"518","line":32,"column":9,"nodeType":"486","messageId":"487","endLine":32,"endColumn":25},{"ruleId":"484","severity":1,"message":"519","line":95,"column":9,"nodeType":"486","messageId":"487","endLine":95,"endColumn":36},{"ruleId":"484","severity":1,"message":"520","line":103,"column":9,"nodeType":"486","messageId":"487","endLine":103,"endColumn":24},{"ruleId":"484","severity":1,"message":"503","line":107,"column":9,"nodeType":"486","messageId":"487","endLine":107,"endColumn":23},{"ruleId":"484","severity":1,"message":"517","line":49,"column":10,"nodeType":"486","messageId":"487","endLine":49,"endColumn":23},{"ruleId":"484","severity":1,"message":"518","line":51,"column":9,"nodeType":"486","messageId":"487","endLine":51,"endColumn":25},{"ruleId":"484","severity":1,"message":"521","line":121,"column":9,"nodeType":"486","messageId":"487","endLine":121,"endColumn":32},{"ruleId":"484","severity":1,"message":"522","line":140,"column":9,"nodeType":"486","messageId":"487","endLine":140,"endColumn":24},{"ruleId":"484","severity":1,"message":"503","line":145,"column":9,"nodeType":"486","messageId":"487","endLine":145,"endColumn":23},{"ruleId":"484","severity":1,"message":"523","line":151,"column":10,"nodeType":"486","messageId":"487","endLine":151,"endColumn":23},{"ruleId":"484","severity":1,"message":"524","line":152,"column":10,"nodeType":"486","messageId":"487","endLine":152,"endColumn":22},{"ruleId":"484","severity":1,"message":"525","line":153,"column":10,"nodeType":"486","messageId":"487","endLine":153,"endColumn":29},{"ruleId":"484","severity":1,"message":"500","line":73,"column":9,"nodeType":"486","messageId":"487","endLine":73,"endColumn":26},{"ruleId":"484","severity":1,"message":"501","line":76,"column":9,"nodeType":"486","messageId":"487","endLine":76,"endColumn":25},{"ruleId":"484","severity":1,"message":"502","line":79,"column":9,"nodeType":"486","messageId":"487","endLine":79,"endColumn":21},{"ruleId":"484","severity":1,"message":"503","line":82,"column":9,"nodeType":"486","messageId":"487","endLine":82,"endColumn":23},{"ruleId":"484","severity":1,"message":"504","line":85,"column":9,"nodeType":"486","messageId":"487","endLine":85,"endColumn":21},{"ruleId":"484","severity":1,"message":"505","line":88,"column":9,"nodeType":"486","messageId":"487","endLine":88,"endColumn":25},{"ruleId":"484","severity":1,"message":"507","line":93,"column":9,"nodeType":"486","messageId":"487","endLine":93,"endColumn":19},{"ruleId":"508","severity":1,"message":"509","line":96,"column":24,"nodeType":"510","messageId":"511","endLine":96,"endColumn":47},{"ruleId":"484","severity":1,"message":"506","line":99,"column":9,"nodeType":"486","messageId":"487","endLine":99,"endColumn":19},{"ruleId":"484","severity":1,"message":"512","line":176,"column":7,"nodeType":"486","messageId":"487","endLine":176,"endColumn":26},{"ruleId":"484","severity":1,"message":"513","line":180,"column":7,"nodeType":"486","messageId":"487","endLine":180,"endColumn":28},{"ruleId":"484","severity":1,"message":"514","line":184,"column":7,"nodeType":"486","messageId":"487","endLine":184,"endColumn":26},{"ruleId":"484","severity":1,"message":"515","line":188,"column":7,"nodeType":"486","messageId":"487","endLine":188,"endColumn":30},{"ruleId":"484","severity":1,"message":"516","line":197,"column":7,"nodeType":"486","messageId":"487","endLine":197,"endColumn":29},{"ruleId":"484","severity":1,"message":"517","line":19,"column":5,"nodeType":"486","messageId":"487","endLine":19,"endColumn":18},{"ruleId":"484","severity":1,"message":"526","line":20,"column":5,"nodeType":"486","messageId":"487","endLine":20,"endColumn":20},{"ruleId":"484","severity":1,"message":"518","line":21,"column":5,"nodeType":"486","messageId":"487","endLine":21,"endColumn":21},{"ruleId":"484","severity":1,"message":"527","line":32,"column":5,"nodeType":"486","messageId":"487","endLine":32,"endColumn":17},{"ruleId":"484","severity":1,"message":"521","line":74,"column":9,"nodeType":"486","messageId":"487","endLine":74,"endColumn":32},{"ruleId":"484","severity":1,"message":"522","line":93,"column":9,"nodeType":"486","messageId":"487","endLine":93,"endColumn":24},{"ruleId":"484","severity":1,"message":"503","line":98,"column":9,"nodeType":"486","messageId":"487","endLine":98,"endColumn":23},{"ruleId":"484","severity":1,"message":"523","line":104,"column":10,"nodeType":"486","messageId":"487","endLine":104,"endColumn":23},{"ruleId":"484","severity":1,"message":"524","line":105,"column":10,"nodeType":"486","messageId":"487","endLine":105,"endColumn":22},{"ruleId":"484","severity":1,"message":"525","line":106,"column":10,"nodeType":"486","messageId":"487","endLine":106,"endColumn":29},{"ruleId":"480","severity":1,"message":"481","line":67,"column":84,"nodeType":"482","messageId":"483","endLine":67,"endColumn":85},{"ruleId":"484","severity":1,"message":"528","line":1,"column":16,"nodeType":"486","messageId":"487","endLine":1,"endColumn":25},{"ruleId":"484","severity":1,"message":"529","line":13,"column":9,"nodeType":"486","messageId":"487","endLine":13,"endColumn":16},{"ruleId":"484","severity":1,"message":"529","line":16,"column":3,"nodeType":"486","messageId":"487","endLine":16,"endColumn":10},{"ruleId":"484","severity":1,"message":"530","line":61,"column":9,"nodeType":"486","messageId":"487","endLine":61,"endColumn":29},{"ruleId":"484","severity":1,"message":"531","line":86,"column":9,"nodeType":"486","messageId":"487","endLine":86,"endColumn":25},{"ruleId":"484","severity":1,"message":"532","line":14,"column":21,"nodeType":"486","messageId":"487","endLine":14,"endColumn":30},{"ruleId":"484","severity":1,"message":"533","line":4,"column":70,"nodeType":"486","messageId":"487","endLine":4,"endColumn":75},{"ruleId":"484","severity":1,"message":"534","line":41,"column":9,"nodeType":"486","messageId":"487","endLine":41,"endColumn":23},{"ruleId":"484","severity":1,"message":"535","line":8,"column":10,"nodeType":"486","messageId":"487","endLine":8,"endColumn":17},{"ruleId":"484","severity":1,"message":"536","line":8,"column":19,"nodeType":"486","messageId":"487","endLine":8,"endColumn":29},{"ruleId":"484","severity":1,"message":"537","line":9,"column":10,"nodeType":"486","messageId":"487","endLine":9,"endColumn":17},{"ruleId":"484","severity":1,"message":"538","line":12,"column":8,"nodeType":"486","messageId":"487","endLine":12,"endColumn":18},{"ruleId":"484","severity":1,"message":"539","line":14,"column":9,"nodeType":"486","messageId":"487","endLine":14,"endColumn":27},{"ruleId":"484","severity":1,"message":"540","line":15,"column":8,"nodeType":"486","messageId":"487","endLine":15,"endColumn":20},{"ruleId":"484","severity":1,"message":"541","line":23,"column":21,"nodeType":"486","messageId":"487","endLine":23,"endColumn":31},{"ruleId":"484","severity":1,"message":"542","line":27,"column":9,"nodeType":"486","messageId":"487","endLine":27,"endColumn":17},{"ruleId":"484","severity":1,"message":"543","line":37,"column":10,"nodeType":"486","messageId":"487","endLine":37,"endColumn":26},{"ruleId":"484","severity":1,"message":"544","line":38,"column":10,"nodeType":"486","messageId":"487","endLine":38,"endColumn":16},{"ruleId":"484","severity":1,"message":"545","line":38,"column":18,"nodeType":"486","messageId":"487","endLine":38,"endColumn":27},{"ruleId":"484","severity":1,"message":"546","line":40,"column":10,"nodeType":"486","messageId":"487","endLine":40,"endColumn":18},{"ruleId":"484","severity":1,"message":"547","line":42,"column":10,"nodeType":"486","messageId":"487","endLine":42,"endColumn":27},{"ruleId":"484","severity":1,"message":"548","line":71,"column":9,"nodeType":"486","messageId":"487","endLine":71,"endColumn":21},"no-native-reassign",["549"],"no-negated-in-lhs",["550"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["551","552"],["553","554"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'CImg' is defined but never used.","Identifier","unusedVar","'isAdmin' is assigned a value but never used.",["549"],["550"],"'PopupEditContent' is defined but never used.","'CInput' is defined but never used.","'CInputGroup' is defined but never used.","'CIcon' is defined but never used.","'freeSet' is defined but never used.","'history' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleKeyPress' is assigned a value but never used.","'CRow' is defined but never used.","'onChangeNameGroup' is assigned a value but never used.","'onChangeTimeSkip' is assigned a value but never used.","'onChangeType' is assigned a value but never used.","'onChangeStatus' is assigned a value but never used.","'onChangeSkip' is assigned a value but never used.","'onChangePlatform' is assigned a value but never used.","'setVastUrl' is assigned a value but never used.","'setContent' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'dataInStreamAdsType' is assigned a value but never used.","'dataInStreamAdsStatus' is assigned a value but never used.","'dataInStreamAdsSkip' is assigned a value but never used.","'dataInStreamAdsPlatForm' is assigned a value but never used.","'dataInStreamAdsContent' is assigned a value but never used.","'listAdsGroups' is assigned a value but never used.","'getListAdsGroups' is assigned a value but never used.","'handleChangeContentProvider' is assigned a value but never used.","'handleChangeAds' is assigned a value but never used.","'onChangeContentProvider' is assigned a value but never used.","'onChangeAdsItem' is assigned a value but never used.","'currentStatus' is assigned a value but never used.","'currentGroup' is assigned a value but never used.","'currentNameProvider' is assigned a value but never used.","'dataContentList' is assigned a value but never used.","'handleScroll' is assigned a value but never used.","'useEffect' is defined but never used.","'CSwitch' is defined but never used.","'handleUpdateCustomer' is assigned a value but never used.","'handleOpenDelete' is assigned a value but never used.","'openPopup' is defined but never used.","'CLink' is defined but never used.","'onChangPartner' is assigned a value but never used.","'newData' is assigned a value but never used.","'setNewData' is assigned a value but never used.","'disable' is assigned a value but never used.","'contentApi' is defined but never used.","'handleLocalStorage' is defined but never used.","'LocalStorage' is defined but never used.","'setDisable' is assigned a value but never used.","'parsedID' is assigned a value but never used.","'valueCheckStatus' is assigned a value but never used.","'isBack' is assigned a value but never used.","'setIsBack' is assigned a value but never used.","'checkAds' is assigned a value but never used.","'valueCheckDefault' is assigned a value but never used.","'onCheckedAds' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"555","fix":"556","desc":"557"},{"messageId":"558","fix":"559","desc":"560"},{"messageId":"555","fix":"561","desc":"557"},{"messageId":"558","fix":"562","desc":"560"},"removeEscape",{"range":"563","text":"564"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"565","text":"566"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"567","text":"564"},{"range":"568","text":"566"},[445,446],"",[445,445],"\\",[470,471],[470,470]]