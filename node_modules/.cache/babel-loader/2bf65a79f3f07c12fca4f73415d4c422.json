{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/users/PopupEditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CBadge, CButton, CFormGroup, CModal, CModalBody, CModalFooter, CModalHeader, CSwitch } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useDispatch } from \"react-redux\";\nimport { closePopup } from \"../../actions/popup\";\nimport UserApi from \"../../apis/userApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupEditUser = props => {\n  _s();\n\n  var _value$find, _value$find$role, _value$find2, _value$find2$role, _value$find3, _value$find3$role;\n\n  const {\n    userItem,\n    editField,\n    setEditField\n  } = props || {};\n  const {\n    email,\n    id\n  } = userItem || {};\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(editField);\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const saveUser = item => {\n    let data = [...value];\n    const index = data.findIndex(obj => obj.id === item.id);\n    UserApi.updateInfoUser(data[index].id, data[index].email, data[index].role).then(res => {\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        setEditField(data);\n        dispatch(closePopup());\n      }\n    });\n  };\n\n  const handleChange = (item, e) => {\n    let data = [...editField];\n    const index = data.findIndex(obj => obj.id === item.id);\n    data[index].role[e.target.name] = e.target.checked;\n    setEditField(data);\n    setValue(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    closeOnBackdrop: false,\n    show: true,\n    onClose: handleClose,\n    centered: true,\n    size: '',\n    children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n      style: {\n        backgroundColor: '#646464'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 d-flex justify-content-between align-items-center\",\n        style: {\n          color: \"#FFF\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-0\",\n          children: [\"User Name: \", email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CButton, {\n          className: \"p-0 shadow-none\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CIcon, {\n            name: \"cil-x\",\n            style: {\n              color: \"#FFF\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n        variant: \"custom-checkbox\",\n        inline: true,\n        children: [/*#__PURE__*/_jsxDEV(CBadge, {\n          children: /*#__PURE__*/_jsxDEV(CSwitch, {\n            className: 'mx-1',\n            color: 'success',\n            labelOn: 'ON',\n            labelOff: 'OFF',\n            defaultChecked: value === null || value === void 0 ? void 0 : (_value$find = value.find(i => i.id === (userItem === null || userItem === void 0 ? void 0 : userItem.id))) === null || _value$find === void 0 ? void 0 : (_value$find$role = _value$find.role) === null || _value$find$role === void 0 ? void 0 : _value$find$role.read,\n            onChange: e => handleChange(userItem, e),\n            id: id + \"_1\",\n            name: \"read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" mt-2\",\n          style: {\n            verticalAlign: 'super'\n          },\n          children: \"Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n        variant: \"custom-checkbox\",\n        inline: true,\n        children: [/*#__PURE__*/_jsxDEV(CBadge, {\n          children: /*#__PURE__*/_jsxDEV(CSwitch, {\n            className: 'mx-1',\n            color: 'success',\n            labelOn: 'ON',\n            labelOff: 'OFF',\n            defaultChecked: value === null || value === void 0 ? void 0 : (_value$find2 = value.find(i => i.id === (userItem === null || userItem === void 0 ? void 0 : userItem.id))) === null || _value$find2 === void 0 ? void 0 : (_value$find2$role = _value$find2.role) === null || _value$find2$role === void 0 ? void 0 : _value$find2$role.write,\n            onChange: e => handleChange(userItem, e),\n            id: id + \"_2\",\n            name: \"write\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" mt-2\",\n          style: {\n            verticalAlign: 'super'\n          },\n          children: \"Write\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n        variant: \"custom-checkbox\",\n        inline: true,\n        children: [/*#__PURE__*/_jsxDEV(CBadge, {\n          children: /*#__PURE__*/_jsxDEV(CSwitch, {\n            className: 'mx-1',\n            color: 'success',\n            labelOn: 'ON',\n            labelOff: 'OFF',\n            defaultChecked: value === null || value === void 0 ? void 0 : (_value$find3 = value.find(i => i.id === (userItem === null || userItem === void 0 ? void 0 : userItem.id))) === null || _value$find3 === void 0 ? void 0 : (_value$find3$role = _value$find3.role) === null || _value$find3$role === void 0 ? void 0 : _value$find3$role.is_admin,\n            onChange: e => handleChange(userItem, e),\n            id: id + \"_3\",\n            name: \"is_admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \" mt-2\",\n          style: {\n            verticalAlign: 'super'\n          },\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          className: \"pl-4 pr-4\",\n          color: \"success\",\n          onClick: () => saveUser(userItem),\n          children: \"L\\u01B0u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupEditUser, \"2s5Aw6wPMurqmx6pjhqkwtejxU4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PopupEditUser;\nexport default PopupEditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupEditUser\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/users/PopupEditUser.js"],"names":["React","useState","CBadge","CButton","CFormGroup","CModal","CModalBody","CModalFooter","CModalHeader","CSwitch","CIcon","useDispatch","closePopup","UserApi","PopupEditUser","props","userItem","editField","setEditField","email","id","dispatch","value","setValue","handleClose","saveUser","item","data","index","findIndex","obj","updateInfoUser","role","then","res","success","handleChange","e","target","name","checked","backgroundColor","color","find","i","read","verticalAlign","write","is_admin"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {\n    CBadge,\n    CButton,\n    CFormGroup,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader, CSwitch,\n\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../actions/popup\";\nimport UserApi from \"../../apis/userApi\";\n\nconst PopupEditUser = (props) => {\n  const { userItem, editField, setEditField} = props || {}\n  const {email, id} = userItem || {}\n  const dispatch = useDispatch()\n  const [value, setValue] = useState(editField)\n\n  const handleClose = () => {\n      dispatch(closePopup())\n  }\n  const saveUser = (item) => {\n    let data = [...value];\n    const index = data.findIndex(obj => obj.id === item.id);\n    UserApi.updateInfoUser(data[index].id, data[index].email, data[index].role).then(res => {\n        if (res?.success){\n            setEditField(data)\n            dispatch(closePopup())\n        }\n    })\n    }\n\n    const handleChange = (item, e) => {\n        let data = [...editField];\n        const index = data.findIndex(obj => obj.id === item.id);\n        data[index].role[e.target.name] = e.target.checked\n        setEditField(data);\n        setValue(data)\n    }\n  return (\n    <CModal closeOnBackdrop={false} show={true} onClose={handleClose} centered={true} size={''}>\n      <CModalHeader style={{ backgroundColor: '#646464' }}>\n        <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n          <h4 className=\"mb-0\">User Name: {email} </h4>\n          <CButton className='p-0 shadow-none' onClick={handleClose}>\n            <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n          </CButton>\n        </div>\n      </CModalHeader>\n      <CModalBody>\n          <CFormGroup variant=\"custom-checkbox\" inline>\n              <CBadge >\n                  <CSwitch\n                      className={'mx-1'}\n                      color={'success'}\n                      labelOn={'ON'} labelOff={'OFF'}\n                      defaultChecked={value?.find(i => i.id === userItem?.id)?.role?.read}\n                      onChange={(e) => handleChange(userItem, e)}\n                      id={id + \"_1\"}\n                      name='read'\n                  />\n              </CBadge>\n              <span className=' mt-2' style={{verticalAlign: 'super'}}>Read</span>\n          </CFormGroup>\n          <CFormGroup variant=\"custom-checkbox\" inline>\n              <CBadge >\n                  <CSwitch\n                      className={'mx-1'}\n                      color={'success'}\n                      labelOn={'ON'} labelOff={'OFF'}\n                      defaultChecked={value?.find(i => i.id === userItem?.id)?.role?.write}\n                      onChange={(e) => handleChange(userItem, e)}\n                      id={id + \"_2\"}\n                      name='write'\n                  />\n              </CBadge>\n              <span className=' mt-2' style={{verticalAlign: 'super'}}>Write</span>\n          </CFormGroup>\n          <CFormGroup variant=\"custom-checkbox\" inline>\n              <CBadge >\n                  <CSwitch\n                      className={'mx-1'}\n                      color={'success'}\n                      labelOn={'ON'} labelOff={'OFF'}\n                      defaultChecked={value?.find(i => i.id === userItem?.id)?.role?.is_admin}\n                      onChange={(e) => handleChange(userItem, e)}\n                      id={id + \"_3\"}\n                      name='is_admin'\n                  />\n              </CBadge>\n              <span className=' mt-2' style={{verticalAlign: 'super'}}>Admin</span>\n          </CFormGroup>\n\n      </CModalBody>\n      <CModalFooter>\n        <div className=\"d-flex justify-content-end\">\n          <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={()=>saveUser(userItem)}>Lưu</CButton>\n        </div>\n      </CModalFooter>\n    </CModal>\n  )\n}\nexport default PopupEditUser\n"]},"metadata":{},"sourceType":"module"}