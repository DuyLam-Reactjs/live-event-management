{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CButton, CModal, CModalBody, CModalHeader } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContentProviderById } from \"../../../actions/content\";\nimport AdsContentItem from \"../ContentList/ItemContentList/AdsContentItem\";\nimport NameContentProviderItem from \"../ContentList/ItemContentList/NameContentProviderItem\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport contentApi from \"../../../apis/contentApi\";\nimport { parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit } from \"../../../helpers/common\";\nimport { closePopup } from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/inStreamAdsApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupEditContentList = props => {\n  _s();\n\n  var _dataContent$CONTENT_;\n\n  const {\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup\n  } = props;\n  const {\n    status,\n    group\n  } = currentItemAds || {};\n  const idProvider = currentItemContentProvider === null || currentItemContentProvider === void 0 ? void 0 : currentItemContentProvider.id;\n  const {\n    contentProviders\n  } = currentItem || {};\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders);\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders);\n  const dispatch = useDispatch();\n  const dataContent = useSelector(state => state === null || state === void 0 ? void 0 : state.Content);\n  const nameItemProvider = dataContent === null || dataContent === void 0 ? void 0 : (_dataContent$CONTENT_ = dataContent.CONTENT_PROVIDER) === null || _dataContent$CONTENT_ === void 0 ? void 0 : _dataContent$CONTENT_.name;\n  const itemContentProvider = dataContent === null || dataContent === void 0 ? void 0 : dataContent.CONTENT_PROVIDER;\n  const [currentPageProvider, setPageProvider] = useState(0);\n  const [dataContentList, setDataProvider] = useState([]);\n  const [metadataProvider, setMetadataProvider] = useState();\n  const [listAdsGroups, setListAdsGroups] = useState([]);\n\n  const getListAdsGroups = id => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        setListAdsGroups(data === null || data === void 0 ? void 0 : data.items);\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function getList() {\n      contentApi.getListContentLive(10, currentPageProvider).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.data;\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          setMetadataProvider(data === null || data === void 0 ? void 0 : data.metadata);\n          let dataList = [...dataContentList];\n          let newDataList = dataList.concat(data === null || data === void 0 ? void 0 : data.items);\n          setDataProvider(newDataList);\n        }\n      });\n    }\n\n    getList(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPageProvider]);\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n\n    watchScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  const handleScroll = () => {\n    const {\n      page,\n      limit,\n      total\n    } = metadataProvider || {};\n    let maxPage = parsedPageLimit(total, limit);\n    if ((page + 1) * limit >= total && page + 1 > maxPage) return;\n    setPageProvider((page || 0) + 1);\n  };\n\n  useEffect(() => {\n    setStatus(status);\n    setGroupAds(group);\n    setNameProvider(nameItemProvider);\n  }, [status, group, nameItemProvider]);\n  useEffect(() => {\n    if (idProvider) dispatch(getContentProviderById(idProvider)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentItemContentProvider]);\n  const [idContentProviders, setIdContentProvider] = useState([]);\n  const [idInStreamAds, setIdInStreamAds] = useState([]);\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  });\n  useEffect(() => {\n    if (elementAds === null || elementAds === void 0 ? void 0 : elementAds.id) handleChangeIdAdsGroups(elementAds); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementAds === null || elementAds === void 0 ? void 0 : elementAds.id, elementAds === null || elementAds === void 0 ? void 0 : elementAds.status]);\n\n  const onChangeContentProvider = item => {\n    let arr = [...arrIdContentProvider];\n    arr = arr.filter(ite => ite !== (itemContentProvider === null || itemContentProvider === void 0 ? void 0 : itemContentProvider.id));\n    arr.push(item === null || item === void 0 ? void 0 : item.id);\n    setIdContentProvider(arr);\n  };\n\n  const handleChangeIdAdsGroups = elm => {\n    var _idAds$;\n\n    let idAds = [...arrIdInStreamAds];\n    idAds = idAds.filter(ite => (ite === null || ite === void 0 ? void 0 : ite.id) !== (currentItemAds === null || currentItemAds === void 0 ? void 0 : currentItemAds.id));\n    idAds.push(elm);\n\n    if (((_idAds$ = idAds[0]) === null || _idAds$ === void 0 ? void 0 : _idAds$.id) === undefined) {\n      idAds.splice(0, 1);\n      setIdInStreamAds(idAds);\n    } else {\n      setIdInStreamAds(idAds);\n    }\n  };\n\n  const onChangeAdsItem = item => {\n    setElementAds({ ...elementAds,\n      id: item === null || item === void 0 ? void 0 : item.id,\n      status: item === null || item === void 0 ? void 0 : item.status\n    });\n    handleChangeIdAdsGroups(elementAds);\n  };\n\n  const onChangeStatus = item => {\n    setElementAds({ ...elementAds,\n      status: item === null || item === void 0 ? void 0 : item.status\n    });\n    handleChangeIdAdsGroups(elementAds);\n  };\n\n  const [currentStatus, setStatus] = useState(status || '');\n  const [currentGroup, setGroupAds] = useState(group || '');\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '');\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleSave = () => {\n    const idContent = currentItem === null || currentItem === void 0 ? void 0 : currentItem.id;\n    contentApi === null || contentApi === void 0 ? void 0 : contentApi.editContent(idContent, idContentProviders, idInStreamAds).then(res => {\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentList(currentPage - 1, rowPerPage, keyWord, category, type, idContentProvider, idAdsGroup).then(resList => {\n          const data = resList === null || resList === void 0 ? void 0 : resList.data;\n\n          if (resList === null || resList === void 0 ? void 0 : resList.success) {\n            setCurrentPageList(data === null || data === void 0 ? void 0 : data.items);\n            dispatch(closePopup());\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CModal // size={'lg'}\n    , {\n      show: true,\n      onClose: handleClose,\n      centered: true,\n      closeOnBackdrop: false,\n      style: {\n        minWidth: '555px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        style: {\n          backgroundColor: '#646464'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 d-flex justify-content-between align-items-center\",\n          style: {\n            color: \"#FFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"S\\u1EEDa Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"p-0 shadow-none\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-x\",\n              style: {\n                color: \"#FFF\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'd-flex flex-row',\n          children: [/*#__PURE__*/_jsxDEV(NameContentProviderItem, {\n            dataContentList: dataContentList,\n            nameItemProvider: currentNameProvider,\n            setNameProvider: setNameProvider,\n            onChangeContentProvider: onChangeContentProvider,\n            arrIdContentProvider: arrIdContentProvider,\n            getListAdsGroups: getListAdsGroups,\n            handleScroll: handleScroll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AdsContentItem, {\n            listAdsGroup: listAdsGroups,\n            groupName: currentGroup,\n            setGroupAds: setGroupAds,\n            onChangeAdsItem: onChangeAdsItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusContentItem, {\n            onChangeStatus: onChangeStatus,\n            status: currentStatus,\n            setStatus: setStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end mt-3\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"pl-4 pr-4\",\n            color: \"success\",\n            onClick: handleSave,\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupEditContentList, \"tXBXsOZShAKm43e+06El8M6w+9c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PopupEditContentList;\nexport default PopupEditContentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupEditContentList\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContentList.js"],"names":["React","useEffect","useState","CButton","CModal","CModalBody","CModalHeader","CIcon","useDispatch","useSelector","getContentProviderById","AdsContentItem","NameContentProviderItem","StatusContentItem","contentApi","parsedIdAdsGroups","parsedIdContentProvider","parsedPageLimit","closePopup","inStreamAdsApi","PopupEditContentList","props","currentItemAds","currentItem","currentItemContentProvider","currentPage","rowPerPage","setCurrentPageList","keyWord","category","type","idContentProvider","idAdsGroup","status","group","idProvider","id","contentProviders","arrIdContentProvider","arrIdInStreamAds","dispatch","dataContent","state","Content","nameItemProvider","CONTENT_PROVIDER","name","itemContentProvider","currentPageProvider","setPageProvider","dataContentList","setDataProvider","metadataProvider","setMetadataProvider","listAdsGroups","setListAdsGroups","getListAdsGroups","getListAllInStreamAds","then","res","data","success","items","getList","getListContentLive","metadata","dataList","newDataList","concat","watchScroll","window","addEventListener","handleScroll","removeEventListener","page","limit","total","maxPage","setStatus","setGroupAds","setNameProvider","idContentProviders","setIdContentProvider","idInStreamAds","setIdInStreamAds","elementAds","setElementAds","handleChangeIdAdsGroups","onChangeContentProvider","item","arr","filter","ite","push","elm","idAds","undefined","splice","onChangeAdsItem","onChangeStatus","currentStatus","currentGroup","currentNameProvider","handleClose","handleSave","idContent","editContent","getContentList","resList","minWidth","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalHeader,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContentProviderById} from \"../../../actions/content\";\nimport AdsContentItem from \"../ContentList/ItemContentList/AdsContentItem\";\nimport NameContentProviderItem from \"../ContentList/ItemContentList/NameContentProviderItem\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport contentApi from \"../../../apis/contentApi\";\nimport {parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit} from \"../../../helpers/common\"\nimport {closePopup} from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/inStreamAdsApi\";\n\n\nconst PopupEditContentList = (props) => {\n  const {\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n  } = props\n  const  { status, group} = currentItemAds || {}\n  const idProvider = currentItemContentProvider?.id\n  const {contentProviders} = currentItem || {}\n\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const dispatch  = useDispatch()\n  const dataContent = useSelector(state => state?.Content)\n\n  const nameItemProvider =  dataContent?.CONTENT_PROVIDER?.name\n  const itemContentProvider = dataContent?.CONTENT_PROVIDER\n\n\n\n  const [currentPageProvider, setPageProvider] = useState(0)\n  const [dataContentList, setDataProvider] = useState([])\n  const [metadataProvider, setMetadataProvider] = useState()\n  const [listAdsGroups, setListAdsGroups] = useState([])\n\n  const getListAdsGroups = (id) => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res =>{\n      const data = res?.data\n      if (res?.success){\n        setListAdsGroups(data?.items)\n      }\n    })\n  }\n  useEffect( ()=>{\n    async function getList () {\n      contentApi.getListContentLive(10, currentPageProvider).then(res=>{\n        const data = res?.data\n        if (res?.success) {\n          setMetadataProvider(data?.metadata)\n          let dataList = [...dataContentList]\n          let newDataList = dataList.concat(data?.items)\n          setDataProvider(newDataList)\n        }\n      })\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentPageProvider])\n\n\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n    watchScroll()\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  })\n\n  const handleScroll = () => {\n    const { page, limit, total } = metadataProvider || {}\n    let maxPage = parsedPageLimit(total, limit)\n\n    if ((page + 1) * limit >= total && (page + 1) > maxPage) return\n    setPageProvider((page || 0) + 1 )\n  }\n  useEffect(()=>{\n    setStatus(status)\n    setGroupAds(group)\n    setNameProvider(nameItemProvider)\n\n  },[status, group, nameItemProvider ])\n\n\n  useEffect(()=> {\n    if (idProvider) dispatch(getContentProviderById(idProvider))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentItemContentProvider])\n\n\n  const [idContentProviders, setIdContentProvider] = useState( [])\n  const [idInStreamAds, setIdInStreamAds] = useState([])\n\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  })\n\n\n  useEffect(()=> {\n    if (elementAds?.id) handleChangeIdAdsGroups(elementAds)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[elementAds?.id, elementAds?.status])\n\n  const onChangeContentProvider = (item) => {\n    let arr = [...arrIdContentProvider]\n    arr = arr.filter(ite => ite !== itemContentProvider?.id)\n    arr.push(item?.id)\n    setIdContentProvider(arr)\n  }\n\n\n  const handleChangeIdAdsGroups = (elm) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds = idAds.filter(ite => ite?.id !== currentItemAds?.id)\n    idAds.push(elm)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdInStreamAds(idAds)\n    } else {\n      setIdInStreamAds(idAds)\n    }\n  }\n  const onChangeAdsItem = (item) => {\n    setElementAds({...elementAds, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n  const onChangeStatus = (item) => {\n    setElementAds({...elementAds, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n\n  const [currentStatus, setStatus] = useState(status || '')\n  const [currentGroup, setGroupAds] = useState(group || '')\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '')\n\n  const handleClose =() => {\n    dispatch(closePopup())\n  }\n  const handleSave = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idInStreamAds).then(res=>{\n      if (res?.success){\n        contentApi?.getContentList(\n          currentPage -1,\n          rowPerPage,\n          keyWord,\n          category,\n          type,\n          idContentProvider,\n          idAdsGroup\n        ).then(\n          resList =>{\n            const data = resList?.data\n            if (resList?.success) {\n              setCurrentPageList(data?.items)\n              dispatch(closePopup())\n            }\n          }\n        )\n      }\n    })\n  }\n\n\n  return (\n    <React.Fragment>\n      <CModal\n          // size={'lg'}\n        show={true}\n        onClose={handleClose}\n        centered={true}\n        closeOnBackdrop={false}\n        style={{minWidth: '555px'}}\n      >\n        <CModalHeader style={{ backgroundColor: '#646464' }}>\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Sửa Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          <div className={'d-flex flex-row'}>\n            <NameContentProviderItem\n              dataContentList={dataContentList}\n              nameItemProvider={currentNameProvider}\n              setNameProvider={setNameProvider}\n              onChangeContentProvider={onChangeContentProvider}\n              arrIdContentProvider={arrIdContentProvider}\n              getListAdsGroups={getListAdsGroups}\n              handleScroll={handleScroll}\n            />\n            <AdsContentItem\n              listAdsGroup={listAdsGroups}\n              groupName={currentGroup}\n              setGroupAds={setGroupAds}\n              onChangeAdsItem={onChangeAdsItem}\n            />\n            <StatusContentItem\n              onChangeStatus={onChangeStatus}\n              status={currentStatus} setStatus={setStatus}/>\n          </div>\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleSave}>Lưu</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupEditContentList\n"]},"metadata":{},"sourceType":"module"}