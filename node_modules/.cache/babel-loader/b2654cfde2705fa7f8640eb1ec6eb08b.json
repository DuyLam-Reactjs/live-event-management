{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/autoCompleteMaterialUI/AutoCompleteMaterial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { classUseStyles } from \"../../../helpers/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(classUseStyles());\n\nconst AutoCompleteMaterial = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    name,\n    handleScroll,\n    handleChangeContent,\n    setName,\n    listData,\n    handleChangeContentProvider,\n    nameDefault\n  } = props;\n  const [focusInput, setFocus] = useState(true);\n\n  const onChange = (event, values) => {\n    handleChangeContent && handleChangeContent(values);\n    handleChangeContentProvider && handleChangeContentProvider(values);\n    if (!nameDefault) setName(values);\n  };\n\n  const onFocus = () => {\n    setFocus(false);\n  };\n\n  const [newData, setNewData] = useState([]);\n  useEffect(() => {\n    const arr = [...listData];\n    arr.unshift({\n      id: 'all',\n      name: \"Tất cả\"\n    });\n    setNewData(arr);\n  }, [listData]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    classes: classes,\n    className: \"color-white btn-filter ml-1 mr-1\",\n    options: newData,\n    getOptionLabel: option => option ? (option === null || option === void 0 ? void 0 : option.name) || (option === null || option === void 0 ? void 0 : option.ads_group) : '',\n    onChange: onChange,\n    onScroll: handleScroll,\n    onFocus: onFocus,\n    size: \"small\",\n    style: {\n      border: '1px solid #d8dbe0',\n      marginTop: '11px'\n    },\n    renderInput: params => focusInput ? /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: name ? name : \"Tất cả\",\n      variant: \"outlined\",\n      style: {\n        height: '36px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      variant: \"outlined\",\n      style: {\n        height: '36px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AutoCompleteMaterial, \"ENOinTVPucg+3qfWDGgV10ArlQk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AutoCompleteMaterial;\nexport default AutoCompleteMaterial;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoCompleteMaterial\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/autoCompleteMaterialUI/AutoCompleteMaterial.js"],"names":["React","useEffect","useState","TextField","Autocomplete","makeStyles","classUseStyles","useStyles","AutoCompleteMaterial","props","classes","name","handleScroll","handleChangeContent","setName","listData","handleChangeContentProvider","nameDefault","focusInput","setFocus","onChange","event","values","onFocus","newData","setNewData","arr","unshift","id","option","ads_group","border","marginTop","params","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACC,cAAc,EAAf,CAA5B;;AACA,MAAME,oBAAoB,GAAKC,KAAD,IAAW;AAAA;;AACrC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM;AACFI,IAAAA,IADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,mBAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,2BANE;AAOFC,IAAAA;AAPE,MAQFR,KARJ;AASA,QAAM,CAACS,UAAD,EAAaC,QAAb,IAAyBjB,QAAQ,CAAC,IAAD,CAAvC;;AAGA,QAAMkB,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChCT,IAAAA,mBAAmB,IAAIA,mBAAmB,CAACS,MAAD,CAA1C;AACAN,IAAAA,2BAA2B,IAAIA,2BAA2B,CAACM,MAAD,CAA1D;AACA,QAAI,CAACL,WAAL,EAAkBH,OAAO,CAACQ,MAAD,CAAP;AACrB,GAJD;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClBJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAFD;;AAGA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMyB,GAAG,GAAG,CAAC,GAAGX,QAAJ,CAAZ;AACAW,IAAAA,GAAG,CAACC,OAAJ,CAAY;AAAEC,MAAAA,EAAE,EAAE,KAAN;AAAajB,MAAAA,IAAI,EAAE;AAAnB,KAAZ;AACAc,IAAAA,UAAU,CAACC,GAAD,CAAV;AACH,GAJQ,EAIP,CAACX,QAAD,CAJO,CAAT;AAKA,sBACI,QAAC,YAAD;AACI,IAAA,OAAO,EAAEL,OADb;AAEI,IAAA,SAAS,EAAE,kCAFf;AAGI,IAAA,OAAO,EAAEc,OAHb;AAII,IAAA,cAAc,EAAGK,MAAD,IAAaA,MAAM,GAAI,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAElB,IAAR,MAAgBkB,MAAhB,aAAgBA,MAAhB,uBAAgBA,MAAM,CAAEC,SAAxB,CAAJ,GAAyC,EAJhF;AAKI,IAAA,QAAQ,EAAEV,QALd;AAMI,IAAA,QAAQ,EAAER,YANd;AAOI,IAAA,OAAO,EAAEW,OAPb;AAQI,IAAA,IAAI,EAAE,OARV;AASI,IAAA,KAAK,EAAE;AACHQ,MAAAA,MAAM,EAAE,mBADL;AAEHC,MAAAA,SAAS,EAAE;AAFR,KATX;AAaI,IAAA,WAAW,EAAGC,MAAD,IACTf,UAAU,gBACJ,QAAC,SAAD,OACMe,MADN;AAEE,MAAA,KAAK,EACDtB,IAAI,GACEA,IADF,GAEE,QALZ;AAOE,MAAA,OAAO,EAAC,UAPV;AAQE,MAAA,KAAK,EAAE;AAACuB,QAAAA,MAAM,EAAE;AAAT;AART;AAAA;AAAA;AAAA;AAAA,YADI,gBAWJ,QAAC,SAAD,OACMD,MADN;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA;AAzBd;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA9DD;;GAAM1B,oB;UACcD,S;;;KADdC,oB;AA+DN,eAAeA,oBAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {classUseStyles} from \"../../../helpers/common\";\n\nconst useStyles = makeStyles(classUseStyles())\nconst AutoCompleteMaterial =  (props) => {\n    const classes = useStyles()\n    const {\n        name,\n        handleScroll,\n        handleChangeContent,\n        setName,\n        listData,\n        handleChangeContentProvider,\n        nameDefault\n    } = props\n    const [focusInput, setFocus] = useState(true)\n\n\n    const onChange = (event, values) => {\n        handleChangeContent && handleChangeContent(values)\n        handleChangeContentProvider && handleChangeContentProvider(values)\n        if (!nameDefault) setName(values)\n    }\n    const onFocus = () => {\n        setFocus(false)\n    }\n    const [newData, setNewData] = useState([])\n    useEffect(()=>{\n        const arr = [...listData]\n        arr.unshift({ id: 'all', name: \"Tất cả\"})\n        setNewData(arr)\n    },[listData])\n    return(\n        <Autocomplete\n            classes={classes}\n            className={\"color-white btn-filter ml-1 mr-1\"}\n            options={newData}\n            getOptionLabel={(option) => (option ? (option?.name || option?.ads_group) : '')}\n            onChange={onChange}\n            onScroll={handleScroll}\n            onFocus={onFocus}\n            size={\"small\"}\n            style={{\n                border: '1px solid #d8dbe0',\n                marginTop: '11px',\n            }}\n            renderInput={(params) =>\n                focusInput\n                    ? <TextField\n                        {...params}\n                        label={\n                            name\n                                ? name\n                                : \"Tất cả\"\n                        }\n                        variant=\"outlined\"\n                        style={{height: '36px'}}\n                    />\n                    : <TextField\n                        {...params}\n                        variant=\"outlined\"\n                        style={{height: '36px'}}\n                    />\n            }\n        />\n    )\n}\nexport default AutoCompleteMaterial"]},"metadata":{},"sourceType":"module"}