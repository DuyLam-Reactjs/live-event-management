{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CButton, CModal, CModalBody, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CModalHeader, CInputGroupAppend, CInput, CInputGroup, CPagination, CInputGroupText } from \"@coreui/react\";\nimport CIcon from '@coreui/icons-react';\nimport { freeSet } from '@coreui/icons';\nimport contentApi from \"../../../apis/contentApi\";\nimport { parsedPageLimit } from \"../../../helpers/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupContent = props => {\n  _s();\n\n  const {\n    content,\n    setContent,\n    modal,\n    setModal,\n    setValue\n  } = props;\n  const [currentPageList, setCurrentPageList] = useState();\n  const [total, setTotal] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [maxPage, setMaxPage] = useState(1);\n  const [keyWord, setKeyWord] = useState('');\n  const [category, setCategory] = useState('');\n  const [type, setType] = useState('');\n  const [data, setData] = useState(content === null || content === void 0 ? void 0 : content.title);\n  const [dataType, setDataType] = useState();\n  useEffect(() => {\n    contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentType().then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (res.success) {\n        setDataType(data === null || data === void 0 ? void 0 : data.items);\n      }\n    });\n  }, []);\n  const [dataCategories, setDataCategories] = useState();\n  useEffect(() => {\n    contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentCategories().then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (res.success) {\n        setDataCategories(data === null || data === void 0 ? void 0 : data.items);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (currentPageList) {\n      let max = parsedPageLimit(total, rowPerPage);\n      setMaxPage(max);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [total, rowPerPage]);\n  useEffect(() => {\n    if (!keyWord && !(category === null || category === void 0 ? void 0 : category.id) && !(type === null || type === void 0 ? void 0 : type.id)) {\n      contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentList(currentPage - 1, rowPerPage, keyWord, category === null || category === void 0 ? void 0 : category.id, type === null || type === void 0 ? void 0 : type.id).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.data;\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          var _data$metadata;\n\n          setCurrentPageList(data === null || data === void 0 ? void 0 : data.items);\n          setTotal(data === null || data === void 0 ? void 0 : (_data$metadata = data.metadata) === null || _data$metadata === void 0 ? void 0 : _data$metadata.total);\n        }\n      });\n    } else searchAndFilter(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentPage, rowPerPage, keyWord, category === null || category === void 0 ? void 0 : category.id, type === null || type === void 0 ? void 0 : type.id]);\n  useEffect(() => {\n    setData(content === null || content === void 0 ? void 0 : content.title);\n  }, [content === null || content === void 0 ? void 0 : content.title]);\n\n  const searchAndFilter = () => {\n    contentApi.getContentList(currentPage - 1, rowPerPage, keyWord, category === null || category === void 0 ? void 0 : category.id, type === null || type === void 0 ? void 0 : type.id).then(res => {\n      if (res.success) {\n        var _data$metadata2;\n\n        const data = res === null || res === void 0 ? void 0 : res.data;\n        setCurrentPageList(data === null || data === void 0 ? void 0 : data.items);\n        setTotal(data === null || data === void 0 ? void 0 : (_data$metadata2 = data.metadata) === null || _data$metadata2 === void 0 ? void 0 : _data$metadata2.total);\n      }\n    });\n  };\n\n  const handleChangeType = item => {\n    setType(item);\n  };\n\n  const handleChangeGenre = item => {\n    setCategory(item);\n  };\n\n  const handleChangeKeyword = event => {\n    setKeyWord(event.target.value);\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      searchAndFilter();\n    }\n  };\n\n  const handleClose = () => {\n    setModal(false);\n    setData(content === null || content === void 0 ? void 0 : content.title);\n  };\n\n  const handleSelect = data => {\n    setModal(false);\n    setContent && setContent(data);\n    setValue && setValue(data === null || data === void 0 ? void 0 : data.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CModal, {\n      closeOnBackdrop: false,\n      size: '',\n      show: modal,\n      onClose: handleClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        style: {\n          backgroundColor: '#646464'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 d-flex justify-content-between align-items-center\",\n          style: {\n            color: \"#FFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: \"Ch\\u1ECDn n\\u1ED9i dung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"p-0 shadow-none\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-x\",\n              style: {\n                color: \"#FFF\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(CDropdown, {\n              className: \"m-1 btn-group\",\n              style: {\n                width: '300px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n                color: \"default\",\n                className: \"border\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  style: {\n                    color: '#222'\n                  },\n                  children: type === '' ? 'Loại nội dung' : type === null || type === void 0 ? void 0 : type.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n                children: dataType && (dataType || []).map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(CDropdownItem, {\n                    onClick: () => handleChangeType(item),\n                    children: item === null || item === void 0 ? void 0 : item.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CDropdown, {\n              className: \"m-1 btn-group\",\n              style: {\n                width: '200px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n                color: \"default\",\n                className: \"border\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-2\",\n                  style: {\n                    color: '#222'\n                  },\n                  children: category === '' ? 'Thể loại' : category === null || category === void 0 ? void 0 : category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n                children: dataCategories && (dataCategories || []).map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(CDropdownItem, {\n                    onClick: () => handleChangeGenre(item),\n                    children: item === null || item === void 0 ? void 0 : item.name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n              className: \"m-1\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                name: \"keyword\",\n                type: \"text\",\n                value: keyWord,\n                placeholder: \"T\\xECm phim / show / k\\xEAnh\",\n                style: {\n                  color: '#222'\n                },\n                onChange: handleChangeKeyword,\n                onKeyPress: handleKeyPress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CInputGroupAppend, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                onClick: searchAndFilter,\n                children: /*#__PURE__*/_jsxDEV(CInputGroupText, {\n                  children: /*#__PURE__*/_jsxDEV(CIcon, {\n                    content: freeSet.cilSearch\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [currentPageList && currentPageList.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-1 mb-2 d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                  className: \"shadow-none\",\n                  name: item.title,\n                  color: \"success\",\n                  variant: (data === null || data === void 0 ? void 0 : data.title) === item.title ? \"\" : \"outline\",\n                  onClick: () => handleSelect(item),\n                  children: \"Ch\\u1ECDn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-1 mt-4 d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(CDropdown, {\n                className: \"btn-group\",\n                style: {\n                  width: '100px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n                  color: \"default\",\n                  className: \"shadow-none row-page color-white\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"mr-2\",\n                    style: {\n                      color: '#222'\n                    },\n                    children: rowPerPage + ' dòng'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n                  children: rowPerPageList && (rowPerPageList || []).map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(CDropdownItem, {\n                      onClick: () => setRowPerPage(item === null || item === void 0 ? void 0 : item.value),\n                      children: item === null || item === void 0 ? void 0 : item.name\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CPagination, {\n                nextButton: 'Sau',\n                previousButton: 'Trước',\n                activePage: currentPage,\n                pages: maxPage,\n                onActivePageChange: setCurrentPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupContent, \"pIqFGYcr4rG9G8AvKzWaur11qcw=\");\n\n_c = PopupContent;\nconst rowPerPageList = [{\n  id: 1,\n  name: '5 dòng',\n  value: 5\n}, {\n  id: 2,\n  name: '10 dòng',\n  value: 10\n}, {\n  id: 3,\n  name: '20 dòng',\n  value: 20\n}];\nexport default PopupContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupContent\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupContent.js"],"names":["React","useEffect","useState","CButton","CModal","CModalBody","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","CModalHeader","CInputGroupAppend","CInput","CInputGroup","CPagination","CInputGroupText","CIcon","freeSet","contentApi","parsedPageLimit","PopupContent","props","content","setContent","modal","setModal","setValue","currentPageList","setCurrentPageList","total","setTotal","currentPage","setCurrentPage","rowPerPage","setRowPerPage","maxPage","setMaxPage","keyWord","setKeyWord","category","setCategory","type","setType","data","setData","title","dataType","setDataType","getContentType","then","res","success","items","dataCategories","setDataCategories","getContentCategories","max","id","getContentList","metadata","searchAndFilter","handleChangeType","item","handleChangeGenre","handleChangeKeyword","event","target","value","handleKeyPress","key","handleClose","handleSelect","name","backgroundColor","color","width","map","index","cursor","cilSearch","rowPerPageList"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle,\n  CModalHeader,\n  CInputGroupAppend,\n  CInput,\n  CInputGroup,\n  CPagination,\n  CInputGroupText,\n} from \"@coreui/react\";\nimport CIcon from '@coreui/icons-react'\nimport { freeSet } from '@coreui/icons'\nimport contentApi from \"../../../apis/contentApi\";\n\nimport {parsedPageLimit} from \"../../../helpers/common\";\n\nconst PopupContent = (props) => {\n  const { content, setContent, modal, setModal, setValue } = props;\n\n\n  const [currentPageList, setCurrentPageList] = useState()\n  const [total, setTotal] = useState()\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [rowPerPage, setRowPerPage] = useState(10);\n  const [maxPage, setMaxPage] = useState(1);\n\n  const [keyWord, setKeyWord] = useState('')\n  const [category, setCategory] = useState('')\n  const [type, setType] = useState('')\n\n  const [data, setData] = useState(content?.title)\n\n  const [dataType, setDataType] = useState()\n  useEffect(()=>{\n    contentApi?.getContentType().then(res=>{\n      const data = res?.data\n      if (res.success) {\n        setDataType(data?.items)\n      }\n    })\n  },[])\n  const [dataCategories, setDataCategories] = useState()\n  useEffect(()=>{\n    contentApi?.getContentCategories().then(res=>{\n      const data = res?.data\n      if (res.success) {\n        setDataCategories(data?.items)\n      }\n    })\n  },[])\n\n  useEffect(() => {\n    if (currentPageList) {\n      let max = parsedPageLimit(total, rowPerPage)\n      setMaxPage(max)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [total, rowPerPage])\n  useEffect(()=>{\n    if (!keyWord && !category?.id && !type?.id) {\n      contentApi?.getContentList(\n        currentPage -1,\n        rowPerPage,\n        keyWord,\n        category?.id,\n        type?.id\n      ).then(\n        res => {\n          const data = res?.data\n          if (res?.success) {\n            setCurrentPageList(data?.items)\n            setTotal(data?.metadata?.total)\n          }\n        }\n      )\n    }else searchAndFilter()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    currentPage,\n    rowPerPage,\n    keyWord,\n    category?.id,\n    type?.id,\n  ])\n\n  useEffect(() => {\n    setData(content?.title)\n  }, [content?.title])\n\n\n  const searchAndFilter = () => {\n    contentApi.getContentList(\n      currentPage-1,\n      rowPerPage,\n      keyWord,\n      category?.id,\n      type?.id\n    ).then(res=>{\n      if (res.success){\n        const data = res?.data\n        setCurrentPageList(data?.items)\n        setTotal(data?.metadata?.total)\n      }\n    })\n  }\n\n\n\n  const handleChangeType = (item) => {\n    setType(item)\n  }\n  const handleChangeGenre = (item) => {\n    setCategory(item)\n  }\n  const handleChangeKeyword = (event) => {\n    setKeyWord(event.target.value);\n  }\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      searchAndFilter();\n    }\n  }\n  const handleClose = () => {\n    setModal(false);\n    setData(content?.title)\n  }\n\n  const handleSelect = (data) => {\n    setModal(false);\n    setContent && setContent(data);\n    setValue && setValue(data?.name)\n  }\n\n  return (\n    <React.Fragment>\n      <CModal\n        closeOnBackdrop={false}\n        size={''}\n        show={modal}\n        onClose={handleClose}\n        centered={true}\n      >\n        <CModalHeader style={{ backgroundColor: '#646464' }}>\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h3 className=\"mb-0\">Chọn nội dung</h3>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          <div >\n            <div className=\"d-flex flex-row mb-2\">\n              <CDropdown className=\"m-1 btn-group\" style={{ width: '300px' }}>\n                <CDropdownToggle color=\"default\" className='border'>\n                  <span className=\"mr-2\" style={{ color: '#222' }}>{type === '' ? 'Loại nội dung' : type?.name}</span>\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  {dataType && (dataType || []).map((item, index) => {\n                    return (\n                      <CDropdownItem key={index} onClick={() => handleChangeType(item)}>{item?.name}</CDropdownItem>\n                    )\n                  })\n                  }\n                </CDropdownMenu>\n              </CDropdown>\n              <CDropdown className=\"m-1 btn-group\" style={{ width: '200px' }}>\n                <CDropdownToggle color=\"default\" className='border'>\n                  <span className=\"mr-2\" style={{ color: '#222' }}>{category === '' ? 'Thể loại' : category?.name}</span>\n                </CDropdownToggle>\n                <CDropdownMenu>\n                  {dataCategories && (dataCategories || []).map((item, index) => {\n                    return (\n                      <CDropdownItem key={index} onClick={() => handleChangeGenre(item)}>{item?.name}</CDropdownItem>\n                    )\n                  })\n                  }\n                </CDropdownMenu>\n              </CDropdown>\n              <CInputGroup className=\"m-1\">\n                <CInput\n                  name='keyword'\n                  type=\"text\"\n                  value={keyWord}\n                  placeholder='Tìm phim / show / kênh'\n                  style={{ color: '#222' }}\n                  onChange={handleChangeKeyword}\n                  onKeyPress={handleKeyPress}\n                />\n                <CInputGroupAppend style={{ cursor: \"pointer\" }} onClick={searchAndFilter} >\n                  <CInputGroupText >\n                    <CIcon content={freeSet.cilSearch} />\n                  </CInputGroupText>\n                </CInputGroupAppend>\n              </CInputGroup>\n            </div>\n\n            <div>\n              {currentPageList && currentPageList.map((item, index) => {\n                return (\n                  <div className=\"m-1 mb-2 d-flex justify-content-between align-items-center\" key={index}>\n                    <strong>{item.name}</strong>\n                    <CButton\n                      className='shadow-none'\n                      name={item.title}\n                      color=\"success\"\n                      variant={data?.title === item.title ? \"\" : \"outline\"}\n                      onClick={()=>handleSelect(item)}>\n                      Chọn\n                    </CButton>\n                  </div>\n                )\n              })}\n              <div className=\"m-1 mt-4 d-flex justify-content-between align-items-center\">\n                <CDropdown className=\"btn-group\" style={{ width: '100px' }}>\n                  <CDropdownToggle color=\"default\" className='shadow-none row-page color-white'>\n                    <span className=\"mr-2\" style={{ color: '#222' }}>{rowPerPage + ' dòng'}</span>\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    {rowPerPageList && (rowPerPageList || []).map((item, index) => {\n                      return (\n                        <CDropdownItem key={index} onClick={() => setRowPerPage(item?.value)}>{item?.name}</CDropdownItem>\n                      )\n                    })\n                    }\n                  </CDropdownMenu>\n                </CDropdown>\n                <CPagination\n                  nextButton={'Sau'}\n                  previousButton={'Trước'}\n                  activePage={currentPage}\n                  pages={maxPage}\n                  onActivePageChange={setCurrentPage}\n                />\n              </div>\n\n            </div>\n\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n\n  )\n}\n\n\nconst rowPerPageList = [\n  { id: 1, name: '5 dòng', value: 5 },\n  { id: 2, name: '10 dòng', value: 10 },\n  { id: 3, name: '20 dòng', value: 20 },\n\n]\n\nexport default PopupContent\n"]},"metadata":{},"sourceType":"module"}