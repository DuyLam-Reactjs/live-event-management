{"ast":null,"code":"import ConfigApi from \"../config/ConfigApi\";\nimport AxiosClient from \"./axiosClient\";\nimport ConfigConstant from \"../config/ConfigConstant\";\nimport Content from \"../models/content\";\nimport ContentList from \"../models/contentList\";\n\nclass contentApi {\n  static async createContentProvider(name, status, isDefault, description, data) {\n    const url = ConfigApi.content.contentProvider;\n    const method = ConfigConstant.API_METHOD.POST;\n    const params = {\n      name: name,\n      status: status,\n      is_default: isDefault,\n      description: description,\n      instream_ads: data\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = new Content({ ...res.data\n      });\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async getListContentLive(limit, page, keyWord) {\n    let url = ConfigApi.content.contentLiveList + '?limit=' + limit + '&page=' + page;\n    if (keyWord) url += '&keyword=' + keyWord;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async getContentProviderById(id) {\n    const url = ConfigApi.content.contentProvider + '/' + id;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async deleteContentProvider(id) {\n    const url = ConfigApi.content.contentProvider + '/' + id;\n    const method = ConfigConstant.API_METHOD.DELETE;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async editContentProvider(name, status, isDefault, description, id) {\n    const url = ConfigApi.content.contentProvider + '/' + id;\n    const method = ConfigConstant.API_METHOD.PUT;\n    const params = {\n      id: id,\n      name: name,\n      status: status,\n      is_default: isDefault,\n      description: description\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async searchContentProvider(page, keyWord) {\n    const url = ConfigApi.content.contentProvider + '?page=' + page + '&keyword=' + keyWord;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async getContentList(page, limit, keyWord, category, type, contentProviderId, adsGroupsId) {\n    let url = ConfigApi.content.getContentList + '?page=' + page + '&limit=' + limit;\n    if (keyWord) url += '&key_word=' + keyWord;\n    if (category) url += '&category=' + category;\n    if (type) url += '&content_type=' + type;\n    if (contentProviderId) url += '&content_provider_id=' + contentProviderId;\n    if (adsGroupsId) url += '&ads_group_id=' + adsGroupsId;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      var _res$data;\n\n      let items = ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.items) || []).map(item => new ContentList(item));\n      return { ...res,\n        data: { ...(res === null || res === void 0 ? void 0 : res.data),\n          items\n        }\n      };\n    });\n  }\n\n  static async editContent(id, idContentProvider, idInStreamAds) {\n    const url = ConfigApi.content.getContentList + '/' + id;\n    const method = ConfigConstant.API_METHOD.PUT;\n    const params = {\n      content_provider_ids: idContentProvider,\n      instream_ads: idInStreamAds\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async getContentType() {\n    const url = ConfigApi.content.getContentType;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async getContentCategories() {\n    const url = ConfigApi.content.getContentCategories;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n}\n\nexport default contentApi;","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/contentApi.js"],"names":["ConfigApi","AxiosClient","ConfigConstant","Content","ContentList","contentApi","createContentProvider","name","status","isDefault","description","data","url","content","contentProvider","method","API_METHOD","POST","params","is_default","instream_ads","executeWithCache","then","res","getListContentLive","limit","page","keyWord","contentLiveList","GET","getContentProviderById","id","deleteContentProvider","DELETE","editContentProvider","PUT","searchContentProvider","getContentList","category","type","contentProviderId","adsGroupsId","items","map","item","editContent","idContentProvider","idInStreamAds","content_provider_ids","getContentType","getContentCategories"],"mappings":"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","sourcesContent":["\nimport ConfigApi from \"../config/ConfigApi\";\nimport AxiosClient from \"./axiosClient\";\nimport ConfigConstant from \"../config/ConfigConstant\";\nimport Content from \"../models/content\";\nimport ContentList from \"../models/contentList\";\n\n\n\nclass contentApi {\n  static async createContentProvider (name, status, isDefault, description, data) {\n    const url = ConfigApi.content.contentProvider\n    const method = ConfigConstant.API_METHOD.POST\n    const params = {\n      name: name,\n      status: status,\n      is_default: isDefault,\n      description: description,\n      instream_ads: data\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = new Content({ ...res.data})\n      return { ...res, data }\n    })\n  }\n  static async getListContentLive ( limit, page , keyWord) {\n    let url = ConfigApi.content.contentLiveList + '?limit='+ limit + '&page=' + page\n    if(keyWord) url += '&keyword=' + keyWord\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data}\n    })\n  }\n  static async getContentProviderById (id) {\n    const url = ConfigApi.content.contentProvider + '/' + id\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async deleteContentProvider (id) {\n    const url = ConfigApi.content.contentProvider + '/' + id\n    const method = ConfigConstant.API_METHOD.DELETE\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async editContentProvider (name, status, isDefault, description, id) {\n    const url = ConfigApi.content.contentProvider + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params ={\n      id: id,\n      name: name,\n      status: status,\n      is_default: isDefault,\n      description: description,\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n\n  static async searchContentProvider ( page, keyWord) {\n    const url = ConfigApi.content.contentProvider  + '?page=' + page + '&keyword=' + keyWord\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async getContentList (page, limit, keyWord, category, type, contentProviderId, adsGroupsId) {\n    let url = ConfigApi.content.getContentList +\n      '?page=' + page +\n      '&limit=' + limit\n    if(keyWord) url += '&key_word=' + keyWord\n    if(category) url += '&category=' + category\n    if(type) url += '&content_type=' + type\n    if(contentProviderId) url += '&content_provider_id=' + contentProviderId\n    if(adsGroupsId) url += '&ads_group_id=' + adsGroupsId\n\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      let items = (res?.data?.items || []).map(item => new ContentList(item))\n      return { ...res, data: {...res?.data, items} }\n    })\n  }\n  static async editContent (id, idContentProvider, idInStreamAds ) {\n    const url = ConfigApi.content.getContentList + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      content_provider_ids: idContentProvider,\n      instream_ads: idInStreamAds\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async getContentType () {\n    const url = ConfigApi.content.getContentType\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async getContentCategories () {\n    const url = ConfigApi.content.getContentCategories\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n}\n\nexport default contentApi\n"]},"metadata":{},"sourceType":"module"}