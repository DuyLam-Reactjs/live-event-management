{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/CreateContentProvider/EditContentProvider/EditContentProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport InStreamAdsItem from \"../CreateStreamAds/InStreamAdsItem\";\nimport CreateContentProviderInfo from \"../CreateContentProviderInfo/CreateContentProviderInfo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { getContentProviderById } from \"../../../../actions/content\";\nimport CreateInStreamAds from \"../CreateStreamAds/CreateInStreamAds\";\nimport inStreamAdsApi from \"../../../../apis/inStreamAdsApi\";\nimport { parsedPageLimit } from \"../../../../helpers/common\";\nimport TitleAds from \"../../TitleAds/TitleAds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst queryString = require('query-string');\n\nconst EditContentProvider = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const parsedID = queryString.parse(location.search);\n  const itemContentProvider = useSelector(state => state.Content);\n  const dataItem = itemContentProvider === null || itemContentProvider === void 0 ? void 0 : itemContentProvider.CONTENT_PROVIDER;\n  const [newData, setNewData] = useState([]);\n  const [currentPageAds, setPageAds] = useState(1);\n  const [metadataAds, setMetadataAds] = useState();\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n\n    watchScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  const handleScroll = () => {\n    const {\n      page,\n      limit,\n      total\n    } = metadataAds || {};\n    let maxPage = parsedPageLimit(total, limit);\n    if ((page + 1) * limit >= total && page + 1 > maxPage) return;\n    setPageAds((page || 0) + 1);\n  };\n\n  useEffect(() => {\n    dispatch(getContentProviderById(parsedID.id)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    async function getList() {\n      inStreamAdsApi.getListInStreamAds(parsedID.id, 10, currentPageAds).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.data;\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          setMetadataAds(data === null || data === void 0 ? void 0 : data.metadata);\n          let dataList = [...newData];\n          let newDataList = dataList.concat(data === null || data === void 0 ? void 0 : data.items);\n          setNewData(newDataList);\n        }\n      });\n    }\n\n    getList(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPageAds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onScroll: handleScroll,\n    children: [/*#__PURE__*/_jsxDEV(TitleAds, {\n      editContentProvider: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateContentProviderInfo, {\n      dataItem: dataItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateInStreamAds, {\n      newData: newData,\n      setNewData: setNewData,\n      disable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), (newData || []).map((itemGroup, index) => {\n      if (itemGroup === null) return;\n      return /*#__PURE__*/_jsxDEV(InStreamAdsItem, {\n        newData: newData,\n        setNewData: setNewData,\n        parsedID: parsedID,\n        itemAdsGroup: itemGroup,\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditContentProvider, \"jcr2CidiHpo+Y0jHf6CtGR4i4Ys=\", false, function () {\n  return [useDispatch, useLocation, useSelector];\n});\n\n_c = EditContentProvider;\nexport default EditContentProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContentProvider\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/CreateContentProvider/EditContentProvider/EditContentProvider.js"],"names":["React","useEffect","useState","InStreamAdsItem","CreateContentProviderInfo","useDispatch","useSelector","useLocation","getContentProviderById","CreateInStreamAds","inStreamAdsApi","parsedPageLimit","TitleAds","queryString","require","EditContentProvider","dispatch","location","parsedID","parse","search","itemContentProvider","state","Content","dataItem","CONTENT_PROVIDER","newData","setNewData","currentPageAds","setPageAds","metadataAds","setMetadataAds","watchScroll","window","addEventListener","handleScroll","removeEventListener","page","limit","total","maxPage","id","getList","getListInStreamAds","then","res","data","success","metadata","dataList","newDataList","concat","items","map","itemGroup","index"],"mappings":"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","sourcesContent":["\nimport React, {useEffect, useState} from 'react'\nimport InStreamAdsItem from \"../CreateStreamAds/InStreamAdsItem\";\nimport CreateContentProviderInfo from \"../CreateContentProviderInfo/CreateContentProviderInfo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useLocation} from \"react-router\";\nimport {getContentProviderById} from \"../../../../actions/content\";\nimport CreateInStreamAds from \"../CreateStreamAds/CreateInStreamAds\";\nimport inStreamAdsApi from \"../../../../apis/inStreamAdsApi\";\nimport {parsedPageLimit} from \"../../../../helpers/common\";\nimport TitleAds from \"../../TitleAds/TitleAds\";\n\n\nconst queryString = require('query-string');\n\nconst EditContentProvider = () => {\n\n\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const parsedID = queryString.parse(location.search)\n\n  const itemContentProvider = useSelector(state=>state.Content)\n  const dataItem = itemContentProvider?.CONTENT_PROVIDER\n  const [newData, setNewData] = useState(  [])\n\n\n  const [currentPageAds, setPageAds] = useState(1)\n  const [metadataAds, setMetadataAds] = useState()\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n    watchScroll()\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  })\n\n  const handleScroll = () => {\n    const { page, limit, total } = metadataAds || {}\n    let maxPage = parsedPageLimit(total, limit)\n\n    if ((page + 1) * limit >= total && (page + 1) > maxPage) return\n    setPageAds((page || 0) + 1 )\n  }\n\n  useEffect(()=>{\n    dispatch(getContentProviderById(parsedID.id))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n  useEffect(()=>{\n    async function getList () {\n      inStreamAdsApi.getListInStreamAds( parsedID.id, 10, currentPageAds ).then(res=>{\n        const data = res?.data\n        if (res?.success) {\n          setMetadataAds(data?.metadata)\n          let dataList = [...newData]\n          let newDataList = dataList.concat(data?.items)\n          setNewData(newDataList)\n        }\n      })\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentPageAds])\n\n  return (\n    <div onScroll={handleScroll}>\n      <TitleAds editContentProvider/>\n      <CreateContentProviderInfo dataItem={dataItem}/>\n      <CreateInStreamAds\n        newData={newData}\n        setNewData={setNewData}\n        disable\n      />\n      { (newData || []).map((itemGroup, index)=>{\n        if (itemGroup === null) return\n        return(\n          <InStreamAdsItem\n            key={index}\n            newData={newData}\n            setNewData={setNewData}\n            parsedID={parsedID}\n            itemAdsGroup={itemGroup}\n            index={index}\n            />\n        )\n      })}\n    </div>\n\n  )\n}\n\nexport default EditContentProvider\n"]},"metadata":{},"sourceType":"module"}