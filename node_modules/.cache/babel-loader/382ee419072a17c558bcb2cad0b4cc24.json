{"ast":null,"code":"import Login from \"../models/login\";\nimport ConfigApi from \"../config/ConfigApi\";\nimport AxiosClient from \"./axiosClient\";\nimport ConfigConstant from \"../config/ConfigConstant\";\n\nclass UserApi {\n  static async login(email, password) {\n    const url = ConfigApi.user.login;\n    const method = ConfigConstant.API_METHOD.POST;\n    const params = {\n      email: email,\n      password: password\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      console.log('res', res);\n      const data = new Login(res === null || res === void 0 ? void 0 : res.data);\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async changePassword(oldPassword, newPassword) {\n    const url = ConfigApi.user.changePassword;\n    const method = ConfigConstant.API_METHOD.PUT;\n    const params = {\n      old_password: oldPassword,\n      new_password: newPassword\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async listUser(email, offset, limit) {\n    const url = ConfigApi.user.listUser + '?email=' + email + '&offset=' + offset + '&limit=' + limit;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async deleteUser(idUser) {\n    const url = ConfigApi.user.listUser + '/' + idUser;\n    const method = ConfigConstant.API_METHOD.DELETE;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async updateInfoUser(id, email, {\n    read,\n    write,\n    is_admin\n  }) {\n    const url = ConfigApi.user.listUser + '/' + id;\n    const method = ConfigConstant.API_METHOD.PUT;\n    const params = {\n      email: email,\n      role: {\n        read: read,\n        write: write,\n        is_admin: is_admin\n      }\n    };\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async createUser(user) {\n    const url = ConfigApi.user.listUser;\n    const method = ConfigConstant.API_METHOD.POST;\n    const params = user;\n    return AxiosClient.executeWithCache({\n      url,\n      method,\n      params\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n  static async userProfile() {\n    const url = ConfigApi.user.userProfile;\n    const method = ConfigConstant.API_METHOD.GET;\n    return AxiosClient.executeWithCache({\n      url,\n      method\n    }).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      return { ...res,\n        data\n      };\n    });\n  }\n\n}\n\nexport default UserApi;","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/userApi.js"],"names":["Login","ConfigApi","AxiosClient","ConfigConstant","UserApi","login","email","password","url","user","method","API_METHOD","POST","params","executeWithCache","then","res","console","log","data","changePassword","oldPassword","newPassword","PUT","old_password","new_password","listUser","offset","limit","GET","deleteUser","idUser","DELETE","updateInfoUser","id","read","write","is_admin","role","createUser","userProfile"],"mappings":"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","sourcesContent":["\nimport Login from \"../models/login\";\nimport ConfigApi from \"../config/ConfigApi\";\nimport AxiosClient from \"./axiosClient\";\nimport ConfigConstant from \"../config/ConfigConstant\";\n\n\nclass UserApi {\n  static async login (email, password) {\n    const url = ConfigApi.user.login\n    const method = ConfigConstant.API_METHOD.POST\n    const params = {\n      email: email,\n      password: password,\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      console.log('res', res)\n      const data = new Login(res?.data)\n      return { ...res, data }\n    })\n  }\n  static async changePassword (oldPassword, newPassword) {\n    const url = ConfigApi.user.changePassword\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      old_password: oldPassword,\n      new_password: newPassword,\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async listUser (email, offset, limit) {\n    const url = ConfigApi.user.listUser + '?email=' + email + '&offset=' + offset + '&limit=' + limit\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async deleteUser (idUser) {\n    const url = ConfigApi.user.listUser + '/' + idUser\n    const method = ConfigConstant.API_METHOD.DELETE\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async updateInfoUser (id, email, {read, write, is_admin}) {\n    const url = ConfigApi.user.listUser + '/' + id\n    const method = ConfigConstant.API_METHOD.PUT\n    const params = {\n      email: email,\n      role: {\n        read: read,\n        write: write,\n        is_admin: is_admin\n      }\n    }\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async createUser (user) {\n    const url = ConfigApi.user.listUser\n    const method = ConfigConstant.API_METHOD.POST\n    const params = user\n    return AxiosClient.executeWithCache({ url, method, params }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n  static async userProfile () {\n    const url = ConfigApi.user.userProfile\n    const method = ConfigConstant.API_METHOD.GET\n    return AxiosClient.executeWithCache({ url, method }).then(res => {\n      const data = res?.data\n      return { ...res, data }\n    })\n  }\n}\n\nexport default UserApi\n"]},"metadata":{},"sourceType":"module"}