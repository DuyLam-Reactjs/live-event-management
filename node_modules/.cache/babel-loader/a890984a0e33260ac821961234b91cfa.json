{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Desktop/SourceDevVieON/LiveEvent/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CDropdown,CDropdownItem,CDropdownMenu,CDropdownToggle}from\"@coreui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CategotyContent=function CategotyContent(props){var categoryFilter=props.categoryFilter,handleChangeCategory=props.handleChangeCategory;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var _onClick=function onClick(item){setFilter(item===null||item===void 0?void 0:item.name);handleChangeCategory&&handleChangeCategory(item);};return/*#__PURE__*/_jsxs(\"div\",{className:\"pr-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"ml-1 mb-2\",children:\"Th\\u1EC3 lo\\u1EA1i\"}),/*#__PURE__*/_jsxs(CDropdown,{className:\"m-1 btn-group\",style:{width:'138px'},children:[/*#__PURE__*/_jsx(CDropdownToggle,{color:\"default\",className:\"border color-white\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-filter\",style:{color:'#222'},children:filter===''?'Tất cả':filter})}),/*#__PURE__*/_jsxs(CDropdownMenu,{children:[/*#__PURE__*/_jsx(CDropdownItem,{onClick:function onClick(){return _onClick(allData);},children:allData===null||allData===void 0?void 0:allData.name}),/*#__PURE__*/_jsx(\"div\",{children:categoryFilter&&(categoryFilter||[]).map(function(item,index){return/*#__PURE__*/_jsx(CDropdownItem,{onClick:function onClick(){return _onClick(item);},children:item===null||item===void 0?void 0:item.name},index);})})]})]})]});};var allData={id:'',name:'Tất cả'};export default CategotyContent;","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/ContentList/CategoryContent.js"],"names":["React","useState","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","CategotyContent","props","categoryFilter","handleChangeCategory","filter","setFilter","onClick","item","name","width","color","allData","map","index","id"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,SAAT,CAAoBC,aAApB,CAAmCC,aAAnC,CAAkDC,eAAlD,KAAwE,eAAxE,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAOC,CAAAA,cAAP,CAA+CD,KAA/C,CAAOC,cAAP,CAAuBC,oBAAvB,CAA+CF,KAA/C,CAAuBE,oBAAvB,CACA,cAA4BR,QAAQ,CAAC,EAAD,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,QAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxBF,SAAS,CAACE,IAAD,SAACA,IAAD,iBAACA,IAAI,CAAEC,IAAP,CAAT,CACAL,oBAAoB,EAAIA,oBAAoB,CAACI,IAAD,CAA5C,CACD,CAHD,CAIA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACI,UAAG,SAAS,CAAC,WAAb,gCADJ,cAEI,MAAC,SAAD,EAAW,SAAS,CAAC,eAArB,CAAqC,KAAK,CAAE,CAACE,KAAK,CAAE,OAAR,CAA5C,wBACE,KAAC,eAAD,EAAiB,KAAK,CAAC,SAAvB,CAAiC,SAAS,CAAC,oBAA3C,uBACE,aAAM,SAAS,CAAC,aAAhB,CAA8B,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAArC,UAAyDN,MAAM,GAAK,EAAX,CAAgB,QAAhB,CAA2BA,MAApF,EADF,EADF,cAIE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,OAAO,CAAE,yBAAIE,CAAAA,QAAO,CAACK,OAAD,CAAX,EAAxB,UAA+CA,OAA/C,SAA+CA,OAA/C,iBAA+CA,OAAO,CAAEH,IAAxD,EADF,cAEE,qBACGN,cAAc,EAAI,CAACA,cAAc,EAAI,EAAnB,EAAuBU,GAAvB,CAA2B,SAACL,IAAD,CAAOM,KAAP,CAAiB,CAC7D,mBACE,KAAC,aAAD,EAA2B,OAAO,CAAE,yBAAMP,CAAAA,QAAO,CAACC,IAAD,CAAb,EAApC,UAA0DA,IAA1D,SAA0DA,IAA1D,iBAA0DA,IAAI,CAAEC,IAAhE,EAAoBK,KAApB,CADF,CAGD,CAJkB,CADrB,EAFF,GAJF,GAFJ,GADF,CAqBD,CA5BD,CA8BA,GAAMF,CAAAA,OAAO,CAAG,CAACG,EAAE,CAAE,EAAL,CAASN,IAAI,CAAE,QAAf,CAAhB,CACA,cAAeR,CAAAA,eAAf","sourcesContent":["import React, {useState} from 'react'\nimport { CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\n\nconst CategotyContent = (props) => {\n  const {categoryFilter, handleChangeCategory} = props\n  const [filter, setFilter] = useState('')\n  const onClick = (item) => {\n    setFilter(item?.name)\n    handleChangeCategory && handleChangeCategory(item)\n  }\n  return(\n    <div className=\"pr-2\">\n        <p className=\"ml-1 mb-2\">Thể loại</p>\n        <CDropdown className=\"m-1 btn-group\" style={{width: '138px'}}>\n          <CDropdownToggle color=\"default\" className='border color-white'>\n            <span className=\"text-filter\" style={{ color: '#222' }}>{filter === '' ? 'Tất cả' : filter}</span>\n          </CDropdownToggle>\n          <CDropdownMenu>\n            <CDropdownItem onClick={()=>onClick(allData)}>{allData?.name}</CDropdownItem>\n            <div>\n              {categoryFilter && (categoryFilter || []).map((item, index) => {\n                return (\n                  <CDropdownItem key={index} onClick={() => onClick(item)}>{item?.name}</CDropdownItem>\n                )\n              })\n              }\n            </div>\n          </CDropdownMenu>\n        </CDropdown>\n    </div>\n  )\n}\n\nconst allData = {id: '', name: 'Tất cả'}\nexport default CategotyContent\n"]},"metadata":{},"sourceType":"module"}