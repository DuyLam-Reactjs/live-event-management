{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddContentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CButton, CModal, CModalBody, CModalHeader } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport { parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit } from \"../../../helpers/common\";\nimport contentApi from \"../../../apis/contentApi\";\nimport GroupNameContentProvider from \"../ContentList/GroupNameContentProvider\";\nimport GroupsAdsProvider from \"../ContentList/GroupsAdsProvider\";\nimport { useDispatch } from \"react-redux\";\nimport { closePopup } from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupAddContentList = props => {\n  _s();\n\n  const {\n    currentItem,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup\n  } = props || {};\n  const [currentPageProvider, setPageProvider] = useState(0);\n  const [dataContentList, setDataProvider] = useState([]);\n  const [metadataProvider, setMetadataProvider] = useState();\n  const [listAdsGroups, setListAdsGroups] = useState([]);\n\n  const getListAdsGroups = id => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        setListAdsGroups(data === null || data === void 0 ? void 0 : data.items);\n      }\n    });\n  };\n\n  useEffect(() => {\n    async function getList() {\n      contentApi.getListContentLive(10, currentPageProvider).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.data;\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          setMetadataProvider(data === null || data === void 0 ? void 0 : data.metadata);\n          let dataList = [...dataContentList];\n          let newDataList = dataList.concat(data === null || data === void 0 ? void 0 : data.items);\n          setDataProvider(newDataList);\n        }\n      });\n    }\n\n    getList(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPageProvider]);\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n\n    watchScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n\n  const handleScroll = () => {\n    const {\n      page,\n      limit,\n      total\n    } = metadataProvider || {};\n    let maxPage = parsedPageLimit(total, limit);\n    if ((page + 1) * limit >= total && page + 1 > maxPage) return;\n    setPageProvider((page || 0) + 1);\n  };\n\n  const dispatch = useDispatch();\n  const {\n    contentProviders\n  } = currentItem || {};\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders);\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders);\n  const [idContentProviders, setIdContentProvider] = useState([]);\n  const [idAdsGroups, setIdAdsGroup] = useState([]);\n  const [idAndStatus, setIdAndStatus] = useState({\n    id: '',\n    status: 0\n  });\n  useEffect(() => {\n    if (idAndStatus === null || idAndStatus === void 0 ? void 0 : idAndStatus.id) handleChangeIdAdsGroups(idAndStatus); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [idAndStatus === null || idAndStatus === void 0 ? void 0 : idAndStatus.status]);\n\n  const handleClose = () => {\n    dispatch(closePopup());\n  };\n\n  const handleChangeContentProvider = item => {\n    const arrNew = [...arrIdContentProvider];\n    arrNew.push(item === null || item === void 0 ? void 0 : item.id);\n\n    if (arrNew[0] === undefined) {\n      arrNew.splice(0, 1);\n      setIdContentProvider(arrNew);\n    } else setIdContentProvider(arrNew);\n  };\n\n  const handleChangeAds = item => {\n    setIdAndStatus({ ...idAndStatus,\n      id: item === null || item === void 0 ? void 0 : item.id,\n      status: item === null || item === void 0 ? void 0 : item.status\n    });\n    handleChangeIdAdsGroups(idAndStatus);\n  };\n\n  const onChangeStatus = item => {\n    if (idAndStatus === null || idAndStatus === void 0 ? void 0 : idAndStatus.id) {\n      setIdAndStatus({ ...idAndStatus,\n        status: item === null || item === void 0 ? void 0 : item.status\n      });\n    }\n\n    handleChangeIdAdsGroups(idAndStatus);\n  };\n\n  const handleChangeIdAdsGroups = idAndStatus => {\n    var _idAds$;\n\n    let idAds = [...arrIdInStreamAds];\n    idAds.push(idAndStatus);\n\n    if (((_idAds$ = idAds[0]) === null || _idAds$ === void 0 ? void 0 : _idAds$.id) === undefined) {\n      idAds.splice(0, 1);\n      setIdAdsGroup(idAds);\n    } else {\n      setIdAdsGroup(idAds);\n    }\n  };\n\n  const handleCreate = () => {\n    const idContent = currentItem === null || currentItem === void 0 ? void 0 : currentItem.id;\n    contentApi === null || contentApi === void 0 ? void 0 : contentApi.editContent(idContent, idContentProviders, idAdsGroups).then(res => {\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentList(currentPage - 1, rowPerPage, keyWord, category, type, idContentProvider, idAdsGroup).then(resList => {\n          const data = resList === null || resList === void 0 ? void 0 : resList.data;\n\n          if (resList === null || resList === void 0 ? void 0 : resList.success) {\n            setCurrentPageList(data === null || data === void 0 ? void 0 : data.items);\n            dispatch(closePopup());\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CModal, {\n      closeOnBackdrop: false,\n      show: true,\n      onClose: handleClose,\n      centered: true,\n      style: {\n        minWidth: '555px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        style: {\n          backgroundColor: '#646464'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 d-flex justify-content-between align-items-center\",\n          style: {\n            color: \"#FFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Add Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"p-0 shadow-none\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-x\",\n              style: {\n                color: \"#FFF\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(GroupNameContentProvider, {\n            dataContentList: dataContentList,\n            handleChangeContentProvider: handleChangeContentProvider,\n            getListAdsGroups: getListAdsGroups,\n            handleScroll: handleScroll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GroupsAdsProvider, {\n            listAdsGroup: listAdsGroups,\n            handleChangeAds: handleChangeAds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusContentItem, {\n            onChangeStatus: onChangeStatus,\n            status: idAndStatus === null || idAndStatus === void 0 ? void 0 : idAndStatus.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end mt-3\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"pl-4 pr-4\",\n            color: \"success\",\n            onClick: handleCreate,\n            children: \"T\\u1EA1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupAddContentList, \"RnO3EbsP//jP3NmLTXKeUkSxRpM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PopupAddContentList;\nexport default PopupAddContentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupAddContentList\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupAddContentList.js"],"names":["React","useEffect","useState","CButton","CModal","CModalBody","CModalHeader","CIcon","StatusContentItem","parsedIdAdsGroups","parsedIdContentProvider","parsedPageLimit","contentApi","GroupNameContentProvider","GroupsAdsProvider","useDispatch","closePopup","inStreamAdsApi","PopupAddContentList","props","currentItem","currentPage","rowPerPage","setCurrentPageList","keyWord","category","type","idContentProvider","idAdsGroup","currentPageProvider","setPageProvider","dataContentList","setDataProvider","metadataProvider","setMetadataProvider","listAdsGroups","setListAdsGroups","getListAdsGroups","id","getListAllInStreamAds","then","res","data","success","items","getList","getListContentLive","metadata","dataList","newDataList","concat","watchScroll","window","addEventListener","handleScroll","removeEventListener","page","limit","total","maxPage","dispatch","contentProviders","arrIdContentProvider","arrIdInStreamAds","idContentProviders","setIdContentProvider","idAdsGroups","setIdAdsGroup","idAndStatus","setIdAndStatus","status","handleChangeIdAdsGroups","handleClose","handleChangeContentProvider","item","arrNew","push","undefined","splice","handleChangeAds","onChangeStatus","idAds","handleCreate","idContent","editContent","getContentList","resList","minWidth","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {CButton, CModal, CModalBody, CModalHeader} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport {parsedIdAdsGroups, parsedIdContentProvider, parsedPageLimit} from \"../../../helpers/common\";\nimport contentApi from \"../../../apis/contentApi\";\nimport GroupNameContentProvider from \"../ContentList/GroupNameContentProvider\";\nimport GroupsAdsProvider from \"../ContentList/GroupsAdsProvider\";\nimport {useDispatch} from \"react-redux\";\nimport {closePopup} from \"../../../actions/popup\";\nimport inStreamAdsApi from \"../../../apis/liveEventApi\";\n\nconst PopupAddContentList = (props) => {\n\n  const {\n    currentItem,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n\n  } = props || {}\n\n  const [currentPageProvider, setPageProvider] = useState(0)\n  const [dataContentList, setDataProvider] = useState([])\n  const [metadataProvider, setMetadataProvider] = useState()\n\n  const [listAdsGroups, setListAdsGroups] = useState([])\n\n  const getListAdsGroups = (id) => {\n    inStreamAdsApi.getListAllInStreamAds(id).then(res =>{\n      const data = res?.data\n      if (res?.success){\n        setListAdsGroups(data?.items)\n      }\n    })\n  }\n  useEffect( ()=>{\n    async function getList () {\n      contentApi.getListContentLive(10, currentPageProvider).then(res=>{\n        const data = res?.data\n        if (res?.success) {\n          setMetadataProvider(data?.metadata)\n          let dataList = [...dataContentList]\n          let newDataList = dataList.concat(data?.items)\n          setDataProvider(newDataList)\n        }\n      })\n    }\n    getList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentPageProvider])\n\n\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", handleScroll);\n    }\n    watchScroll()\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  })\n\n  const handleScroll = () => {\n    const { page, limit, total } = metadataProvider || {}\n    let maxPage = parsedPageLimit(total, limit)\n\n    if ((page + 1) * limit >= total && (page + 1) > maxPage) return\n    setPageProvider((page || 0) + 1 )\n  }\n  const dispatch = useDispatch()\n  const {contentProviders} = currentItem || {}\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const [idContentProviders, setIdContentProvider] = useState([])\n  const [idAdsGroups, setIdAdsGroup] = useState([])\n  const [idAndStatus, setIdAndStatus] = useState({\n    id:'',\n    status: 0\n  })\n\n  useEffect(()=>{\n    if(idAndStatus?.id) handleChangeIdAdsGroups(idAndStatus)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[idAndStatus?.status])\n\n\n  const handleClose = () => {\n    dispatch(closePopup())\n  }\n  const handleChangeContentProvider = (item) => {\n    const arrNew = [...arrIdContentProvider]\n    arrNew.push(item?.id)\n    if (arrNew[0] === undefined){\n      arrNew.splice(0,1)\n      setIdContentProvider(arrNew)\n    }else setIdContentProvider(arrNew)\n  }\n  const handleChangeAds = (item) => {\n    setIdAndStatus({...idAndStatus, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(idAndStatus)\n  }\n  const onChangeStatus = (item) => {\n    if(idAndStatus?.id) {\n      setIdAndStatus({...idAndStatus, status: item?.status})\n    }\n    handleChangeIdAdsGroups(idAndStatus)\n  }\n\n  const handleChangeIdAdsGroups = (idAndStatus) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds.push(idAndStatus)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdAdsGroup(idAds)\n    }else {\n      setIdAdsGroup(idAds)\n    }\n  }\n  const handleCreate = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idAdsGroups).then(res=>{\n        if (res?.success){\n          contentApi?.getContentList(\n            currentPage-1,\n            rowPerPage,\n            keyWord,\n            category,\n            type,\n            idContentProvider,\n            idAdsGroup\n          ).then(resList =>{\n              const data = resList?.data\n              if (resList?.success) {\n                setCurrentPageList(data?.items)\n                dispatch(closePopup())\n              }\n            }\n          )\n      }\n    })\n  }\n\n\n  return(\n\n    <React.Fragment>\n      <CModal\n        closeOnBackdrop={false}\n        show={true}\n        onClose={handleClose}\n        centered={true}\n        style={{minWidth:'555px'}}\n      >\n        <CModalHeader style={{ backgroundColor: '#646464' }}>\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Add Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"d-flex flex-row\">\n            <GroupNameContentProvider\n              dataContentList={dataContentList}\n              handleChangeContentProvider={handleChangeContentProvider}\n              getListAdsGroups={getListAdsGroups}\n              handleScroll={handleScroll}\n            />\n            <GroupsAdsProvider\n              listAdsGroup={listAdsGroups}\n              handleChangeAds={handleChangeAds}\n            />\n            <StatusContentItem\n              onChangeStatus={onChangeStatus}\n              status ={idAndStatus?.status}\n            />\n          </div>\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleCreate}>Tạo</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupAddContentList\n"]},"metadata":{},"sourceType":"module"}