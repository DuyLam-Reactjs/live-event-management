{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/ContentList/TypeContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from \"@coreui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TypeContent = props => {\n  _s();\n\n  const {\n    typeFilter,\n    handleChangeType\n  } = props;\n  const [filter, setFilter] = useState('');\n\n  const onClick = item => {\n    setFilter(item.name);\n    handleChangeType && handleChangeType(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pr-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ml-1 mb-2\",\n      children: \"Lo\\u1EA1i n\\u1ED9i dung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CDropdown, {\n      className: \"m-1 btn-group\",\n      style: {\n        width: '138px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n        color: \"default\",\n        className: \"border color-white\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-filter\",\n          children: filter === '' ? 'Tất cả' : filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n        className: \"mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(CDropdownItem, {\n          onClick: () => onClick(allData),\n          children: allData === null || allData === void 0 ? void 0 : allData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: typeFilter && (typeFilter || []).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              onClick: () => onClick(item),\n              children: item === null || item === void 0 ? void 0 : item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TypeContent, \"cllJ8tv7lWu5CRRMgsiTyzyV2No=\");\n\n_c = TypeContent;\nconst allData = {\n  id: '',\n  name: 'Tất cả'\n};\nexport default TypeContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeContent\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/ContentList/TypeContent.js"],"names":["React","useState","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","TypeContent","props","typeFilter","handleChangeType","filter","setFilter","onClick","item","name","width","allData","map","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,EAAkDC,eAAlD,QAAwE,eAAxE;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAAiCF,KAAvC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMW,OAAO,GAAIC,IAAD,IAAU;AACxBF,IAAAA,SAAS,CAACE,IAAI,CAACC,IAAN,CAAT;AACAL,IAAAA,gBAAgB,IAAIA,gBAAgB,CAACI,IAAD,CAApC;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AAAqC,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE;AAAR,OAA5C;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,SAAvB;AAAiC,QAAA,SAAS,EAAC,oBAA3C;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBAA+BL,MAAM,KAAK,EAAX,GAAgB,QAAhB,GAA2BA;AAA1D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,MAAIE,OAAO,CAACI,OAAD,CAAnC;AAAA,oBAA+CA,OAA/C,aAA+CA,OAA/C,uBAA+CA,OAAO,CAAEF;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBACGN,UAAU,IAAI,CAACA,UAAU,IAAI,EAAf,EAAmBS,GAAnB,CAAuB,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AACrD,gCACE,QAAC,aAAD;AAA2B,cAAA,OAAO,EAAE,MAAMN,OAAO,CAACC,IAAD,CAAjD;AAAA,wBAA0DA,IAA1D,aAA0DA,IAA1D,uBAA0DA,IAAI,CAAEC;AAAhE,eAAoBI,KAApB;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD,WAJc;AADjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7BD;;GAAMZ,W;;KAAAA,W;AA8BN,MAAMU,OAAO,GAAG;AAACG,EAAAA,EAAE,EAAE,EAAL;AAASL,EAAAA,IAAI,EAAE;AAAf,CAAhB;AACA,eAAeR,WAAf","sourcesContent":["import React, {useState} from 'react'\nimport { CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\n\nconst TypeContent = (props) => {\n  const {typeFilter,handleChangeType } = props\n  const [filter, setFilter] = useState('')\n  const onClick = (item) => {\n    setFilter(item.name)\n    handleChangeType && handleChangeType(item)\n  }\n\n  return(\n    <div className=\"pr-2\">\n        <p className=\"ml-1 mb-2\">Loại nội dung</p>\n        <CDropdown className=\"m-1 btn-group\" style={{width: '138px'}}>\n          <CDropdownToggle color=\"default\" className='border color-white'>\n            <span className=\"text-filter\">{filter === '' ? 'Tất cả' : filter}</span>\n          </CDropdownToggle>\n          <CDropdownMenu className=\"mt-1\" >\n            <CDropdownItem onClick={()=>onClick(allData)}>{allData?.name}</CDropdownItem>\n            <div>\n              {typeFilter && (typeFilter || []).map((item, index) => {\n                return (\n                  <CDropdownItem key={index} onClick={() => onClick(item)}>{item?.name}</CDropdownItem>\n                )\n              })\n              }\n            </div>\n          </CDropdownMenu>\n        </CDropdown>\n    </div>\n  )\n}\nconst allData = {id: '', name: 'Tất cả'}\nexport default TypeContent\n"]},"metadata":{},"sourceType":"module"}