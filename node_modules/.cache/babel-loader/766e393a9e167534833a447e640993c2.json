{"ast":null,"code":"import ConfigConstant from '../config/ConfigConstant';\nimport { setUrlParams } from '../helpers/common';\nimport Http from '../customRequest';\nlet http = Http;\nexport default class AxiosClient {\n  static executeWithCache({\n    url,\n    method,\n    params,\n    config,\n    accessToken\n  }) {\n    const newParams = { ...params\n    };\n    let configAxios = { ...(config || {})\n    };\n    let token = accessToken || '';\n\n    if (token) {\n      configAxios.headers = { ...(configAxios.headers || {}),\n        Authorization: token || ''\n      };\n    }\n\n    const {\n      API_METHOD\n    } = ConfigConstant;\n\n    switch (method) {\n      case API_METHOD.GET:\n        {\n          let newUrl = setUrlParams(url, params);\n          const axiosUrl = newUrl === null || newUrl === void 0 ? void 0 : newUrl.href;\n          return http.get(axiosUrl, configAxios || {}).then(res => {\n            return responseData.createResponseData(res || {});\n          }).catch(e => {\n            const response = (e === null || e === void 0 ? void 0 : e.response) || {};\n            return responseData.createResponseData(response || {});\n          });\n        }\n\n      case API_METHOD.POST:\n        {\n          // let data = json_to_query_string(newParams || {})\n          let data = newParams || {}; // if (config?.headers) data = newParams || {}\n\n          return http.post(url, data, configAxios || {}).then(res => {\n            return responseData.createResponseData(res || {});\n          }).catch(e => {\n            const response = (e === null || e === void 0 ? void 0 : e.response) || {};\n            return responseData.createResponseData(response || {});\n          });\n        }\n\n      case API_METHOD.DELETE:\n        {\n          return http.delete(url, configAxios || {}).then(res => {\n            return responseData.createResponseData(res || {});\n          }).catch(e => {\n            const response = (e === null || e === void 0 ? void 0 : e.response) || {};\n            return responseData.createResponseData(response || {});\n          });\n        }\n\n      case API_METHOD.PUT:\n        {\n          let data = newParams || {};\n          return http.put(url, data, configAxios || {}).then(res => {\n            return responseData.createResponseData(res || {});\n          }).catch(e => {\n            const response = (e === null || e === void 0 ? void 0 : e.response) || {};\n            return responseData.createResponseData(response || {});\n          });\n        }\n\n      default:\n    }\n  }\n\n}\n\nclass responseData {\n  constructor() {\n    this.success = false;\n    this.statusText = '';\n    this.message = '';\n    this.data = null;\n    this.httpCode = 0;\n  }\n\n  static createResponseData(_data) {\n    let data = new responseData();\n\n    if (_data) {\n      data.httpCode = _data.status;\n      data.success = _data.status === 200;\n      data.statusText = _data.statusText || '';\n\n      if (_data.problem && _data.problem === 'TIMEOUT_ERROR') {\n        data.message = 'Request timeout';\n      }\n\n      data.message = _data.message || '';\n\n      if (Array.isArray(_data.data)) {\n        data.data = {\n          items: _data.data\n        };\n      } else {\n        data.data = _data.data || null;\n      }\n    }\n\n    return data;\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/apis/axiosClient.js"],"names":["ConfigConstant","setUrlParams","Http","http","AxiosClient","executeWithCache","url","method","params","config","accessToken","newParams","configAxios","token","headers","Authorization","API_METHOD","GET","newUrl","axiosUrl","href","get","then","res","responseData","createResponseData","catch","e","response","POST","data","post","DELETE","delete","PUT","put","constructor","success","statusText","message","httpCode","_data","status","problem","Array","isArray","items"],"mappings":"AAEA,OAAOA,cAAP,MAA2B,0BAA3B;AACA,SAASC,YAAT,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,IAAIC,IAAI,GAAGD,IAAX;AAGA,eAAe,MAAME,WAAN,CAAkB;AAER,SAAhBC,gBAAgB,CAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,MAAvB;AAA+BC,IAAAA;AAA/B,GAAF,EAAgD;AACrE,UAAMC,SAAS,GAAG,EAChB,GAAGH;AADa,KAAlB;AAGA,QAAII,WAAW,GAAG,EAAE,IAAIH,MAAM,IAAI,EAAd;AAAF,KAAlB;AAEA,QAAII,KAAK,GAAGH,WAAW,IAAI,EAA3B;;AAEA,QAAIG,KAAJ,EAAW;AACTD,MAAAA,WAAW,CAACE,OAAZ,GAAsB,EAAE,IAAIF,WAAW,CAACE,OAAZ,IAAuB,EAA3B,CAAF;AAAkCC,QAAAA,aAAa,EAAEF,KAAK,IAAI;AAA1D,OAAtB;AACD;;AACD,UAAM;AAAEG,MAAAA;AAAF,QAAiBhB,cAAvB;;AACA,YAAQO,MAAR;AACE,WAAKS,UAAU,CAACC,GAAhB;AAAqB;AACnB,cAAIC,MAAM,GAAGjB,YAAY,CAACK,GAAD,EAAME,MAAN,CAAzB;AACA,gBAAMW,QAAQ,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,IAAzB;AACA,iBAAOjB,IAAI,CAACkB,GAAL,CAASF,QAAT,EAAmBP,WAAW,IAAI,EAAlC,EAAsCU,IAAtC,CAA2CC,GAAG,IAAI;AACvD,mBAAOC,YAAY,CAACC,kBAAb,CAAgCF,GAAG,IAAI,EAAvC,CAAP;AACD,WAFM,EAEJG,KAFI,CAEEC,CAAC,IAAI;AACZ,kBAAMC,QAAQ,GAAG,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,QAAH,KAAe,EAAhC;AACA,mBAAOJ,YAAY,CAACC,kBAAb,CAAgCG,QAAQ,IAAI,EAA5C,CAAP;AACD,WALM,CAAP;AAMD;;AACD,WAAKZ,UAAU,CAACa,IAAhB;AAAsB;AACpB;AACA,cAAIC,IAAI,GAAGnB,SAAS,IAAI,EAAxB,CAFoB,CAGpB;;AACA,iBAAOR,IAAI,CAAC4B,IAAL,CAAUzB,GAAV,EAAewB,IAAf,EAAqBlB,WAAW,IAAI,EAApC,EAAwCU,IAAxC,CAA6CC,GAAG,IAAI;AACzD,mBAAOC,YAAY,CAACC,kBAAb,CAAgCF,GAAG,IAAI,EAAvC,CAAP;AACD,WAFM,EAEJG,KAFI,CAEEC,CAAC,IAAI;AACZ,kBAAMC,QAAQ,GAAG,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,QAAH,KAAe,EAAhC;AACA,mBAAOJ,YAAY,CAACC,kBAAb,CAAgCG,QAAQ,IAAI,EAA5C,CAAP;AACD,WALM,CAAP;AAMD;;AACD,WAAKZ,UAAU,CAACgB,MAAhB;AAAwB;AACtB,iBAAO7B,IAAI,CAAC8B,MAAL,CAAY3B,GAAZ,EAAiBM,WAAW,IAAI,EAAhC,EAAoCU,IAApC,CAAyCC,GAAG,IAAI;AACrD,mBAAOC,YAAY,CAACC,kBAAb,CAAgCF,GAAG,IAAI,EAAvC,CAAP;AACD,WAFM,EAEJG,KAFI,CAEEC,CAAC,IAAI;AACZ,kBAAMC,QAAQ,GAAG,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,QAAH,KAAe,EAAhC;AACA,mBAAOJ,YAAY,CAACC,kBAAb,CAAgCG,QAAQ,IAAI,EAA5C,CAAP;AACD,WALM,CAAP;AAMD;;AACD,WAAKZ,UAAU,CAACkB,GAAhB;AAAqB;AACnB,cAAIJ,IAAI,GAAGnB,SAAS,IAAI,EAAxB;AACA,iBAAOR,IAAI,CAACgC,GAAL,CAAS7B,GAAT,EAAcwB,IAAd,EAAmBlB,WAAW,IAAI,EAAlC,EAAsCU,IAAtC,CAA2CC,GAAG,IAAI;AACvD,mBAAOC,YAAY,CAACC,kBAAb,CAAgCF,GAAG,IAAI,EAAvC,CAAP;AACD,WAFM,EAEJG,KAFI,CAEEC,CAAC,IAAI;AACZ,kBAAMC,QAAQ,GAAG,CAAAD,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,QAAH,KAAe,EAAhC;AACA,mBAAOJ,YAAY,CAACC,kBAAb,CAAgCG,QAAQ,IAAI,EAA5C,CAAP;AACD,WALM,CAAP;AAMD;;AACD;AAvCF;AAyCD;;AAvD8B;;AA0DjC,MAAMJ,YAAN,CAAmB;AAEjBY,EAAAA,WAAW,GAAI;AACb,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKT,IAAL,GAAY,IAAZ;AACA,SAAKU,QAAL,GAAgB,CAAhB;AACD;;AAEwB,SAAlBf,kBAAkB,CAAEgB,KAAF,EAAS;AAChC,QAAIX,IAAI,GAAG,IAAIN,YAAJ,EAAX;;AACA,QAAIiB,KAAJ,EAAW;AACTX,MAAAA,IAAI,CAACU,QAAL,GAAgBC,KAAK,CAACC,MAAtB;AACAZ,MAAAA,IAAI,CAACO,OAAL,GAAeI,KAAK,CAACC,MAAN,KAAiB,GAAhC;AACAZ,MAAAA,IAAI,CAACQ,UAAL,GAAkBG,KAAK,CAACH,UAAN,IAAoB,EAAtC;;AACA,UAAIG,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACE,OAAN,KAAkB,eAAvC,EAAwD;AACtDb,QAAAA,IAAI,CAACS,OAAL,GAAe,iBAAf;AACD;;AACDT,MAAAA,IAAI,CAACS,OAAL,GAAeE,KAAK,CAACF,OAAN,IAAiB,EAAhC;;AACA,UAAIK,KAAK,CAACC,OAAN,CAAcJ,KAAK,CAACX,IAApB,CAAJ,EAA+B;AAC7BA,QAAAA,IAAI,CAACA,IAAL,GAAY;AAAEgB,UAAAA,KAAK,EAAEL,KAAK,CAACX;AAAf,SAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,CAACA,IAAL,GAAYW,KAAK,CAACX,IAAN,IAAc,IAA1B;AACD;AACF;;AACD,WAAOA,IAAP;AACD;;AA3BgB","sourcesContent":["\n\nimport ConfigConstant from '../config/ConfigConstant'\nimport { setUrlParams} from '../helpers/common'\nimport Http from '../customRequest'\nlet http = Http\n\n\nexport default class AxiosClient {\n\n  static executeWithCache ({ url, method, params, config, accessToken }) {\n    const newParams = {\n      ...params,\n    }\n    let configAxios = { ...(config || {}) }\n\n    let token = accessToken || ''\n\n    if (token) {\n      configAxios.headers = { ...(configAxios.headers || {}), Authorization: token || '' }\n    }\n    const { API_METHOD } = ConfigConstant\n    switch (method) {\n      case API_METHOD.GET: {\n        let newUrl = setUrlParams(url, params)\n        const axiosUrl = newUrl?.href\n        return http.get(axiosUrl, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.POST: {\n        // let data = json_to_query_string(newParams || {})\n        let data = newParams || {}\n        // if (config?.headers) data = newParams || {}\n        return http.post(url, data, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.DELETE: {\n        return http.delete(url, configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      case API_METHOD.PUT: {\n        let data = newParams || {}\n        return http.put(url, data,configAxios || {}).then(res => {\n          return responseData.createResponseData(res || {})\n        }).catch(e => {\n          const response = e?.response || {}\n          return responseData.createResponseData(response || {})\n        })\n      }\n      default:\n    }\n  }\n\n}\nclass responseData {\n\n  constructor () {\n    this.success = false\n    this.statusText = ''\n    this.message = ''\n    this.data = null\n    this.httpCode = 0\n  }\n\n  static createResponseData (_data) {\n    let data = new responseData()\n    if (_data) {\n      data.httpCode = _data.status\n      data.success = _data.status === 200\n      data.statusText = _data.statusText || ''\n      if (_data.problem && _data.problem === 'TIMEOUT_ERROR') {\n        data.message = 'Request timeout'\n      }\n      data.message = _data.message || ''\n      if (Array.isArray(_data.data)) {\n        data.data = { items: _data.data }\n      } else {\n        data.data = _data.data || null\n      }\n    }\n    return data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}