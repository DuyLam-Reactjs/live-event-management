{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CButton, CModal, CModalBody, CModalHeader } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContentProviderById } from \"../../../actions/content\";\nimport AdsContentItem from \"../ContentList/ItemContentList/AdsContentItem\";\nimport NameContentProviderItem from \"../ContentList/ItemContentList/NameContentProviderItem\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport contentApi from \"../../../apis/contentApi\";\nimport { parsedIdAdsGroups, parsedIdContentProvider } from \"../../../helpers/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupEditContent = props => {\n  _s();\n\n  var _dataContent$CONTENT_;\n\n  const {\n    modal,\n    setPopupEdit,\n    listAdsGroups,\n    dataContentList,\n    getListAdsGroups,\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage,\n    rowPerPage,\n    setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n    handleScroll\n  } = props;\n  const {\n    status,\n    group\n  } = currentItemAds || {};\n  const idProvider = currentItemContentProvider === null || currentItemContentProvider === void 0 ? void 0 : currentItemContentProvider.id;\n  const {\n    contentProviders\n  } = currentItem || {};\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders);\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders);\n  const dispatch = useDispatch();\n  const dataContent = useSelector(state => state === null || state === void 0 ? void 0 : state.Content);\n  const nameItemProvider = dataContent === null || dataContent === void 0 ? void 0 : (_dataContent$CONTENT_ = dataContent.CONTENT_PROVIDER) === null || _dataContent$CONTENT_ === void 0 ? void 0 : _dataContent$CONTENT_.name;\n  const itemContentProvider = dataContent === null || dataContent === void 0 ? void 0 : dataContent.CONTENT_PROVIDER;\n  useEffect(() => {\n    setStatus(status);\n    setGroupAds(group);\n    setNameProvider(nameItemProvider);\n  }, [status, group, nameItemProvider]);\n  useEffect(() => {\n    if (idProvider) dispatch(getContentProviderById(idProvider)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentItemContentProvider]);\n  const [idContentProviders, setIdContentProvider] = useState([]);\n  const [idInStreamAds, setIdInStreamAds] = useState([]);\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  });\n  useEffect(() => {\n    if (elementAds === null || elementAds === void 0 ? void 0 : elementAds.id) handleChangeIdAdsGroups(elementAds); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elementAds === null || elementAds === void 0 ? void 0 : elementAds.id, elementAds === null || elementAds === void 0 ? void 0 : elementAds.status]);\n\n  const onChangeContentProvider = item => {\n    let arr = [...arrIdContentProvider];\n    arr = arr.filter(ite => ite !== (itemContentProvider === null || itemContentProvider === void 0 ? void 0 : itemContentProvider.id));\n    arr.push(item === null || item === void 0 ? void 0 : item.id);\n    setIdContentProvider(arr);\n  };\n\n  const handleChangeIdAdsGroups = elm => {\n    var _idAds$;\n\n    let idAds = [...arrIdInStreamAds];\n    idAds = idAds.filter(ite => (ite === null || ite === void 0 ? void 0 : ite.id) !== (currentItemAds === null || currentItemAds === void 0 ? void 0 : currentItemAds.id));\n    idAds.push(elm);\n\n    if (((_idAds$ = idAds[0]) === null || _idAds$ === void 0 ? void 0 : _idAds$.id) === undefined) {\n      idAds.splice(0, 1);\n      setIdInStreamAds(idAds);\n    } else {\n      setIdInStreamAds(idAds);\n    }\n  };\n\n  const onChangeAdsItem = item => {\n    setElementAds({ ...elementAds,\n      id: item === null || item === void 0 ? void 0 : item.id,\n      status: item === null || item === void 0 ? void 0 : item.status\n    });\n    handleChangeIdAdsGroups(elementAds);\n  };\n\n  const onChangeStatus = item => {\n    setElementAds({ ...elementAds,\n      status: item === null || item === void 0 ? void 0 : item.status\n    });\n    handleChangeIdAdsGroups(elementAds);\n  };\n\n  const [currentStatus, setStatus] = useState(status || '');\n  const [currentGroup, setGroupAds] = useState(group || '');\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '');\n\n  const handleClose = () => {\n    setPopupEdit(false);\n  };\n\n  const handleSave = () => {\n    const idContent = currentItem === null || currentItem === void 0 ? void 0 : currentItem.id;\n    contentApi === null || contentApi === void 0 ? void 0 : contentApi.editContent(idContent, idContentProviders, idInStreamAds).then(res => {\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        contentApi === null || contentApi === void 0 ? void 0 : contentApi.getContentList(currentPage - 1, rowPerPage, keyWord, category, type, idContentProvider, idAdsGroup).then(resList => {\n          const data = resList === null || resList === void 0 ? void 0 : resList.data;\n\n          if (resList === null || resList === void 0 ? void 0 : resList.success) {\n            setCurrentPageList(data === null || data === void 0 ? void 0 : data.items);\n          }\n        });\n        setPopupEdit(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CModal // size={'lg'}\n    , {\n      show: modal,\n      onClose: handleClose,\n      centered: true,\n      closeOnBackdrop: false,\n      style: {\n        minWidth: '555px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        style: {\n          backgroundColor: '#646464'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 d-flex justify-content-between align-items-center\",\n          style: {\n            color: \"#FFF\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"S\\u1EEDa Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"p-0 shadow-none\",\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-x\",\n              style: {\n                color: \"#FFF\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'd-flex flex-row',\n          children: [/*#__PURE__*/_jsxDEV(NameContentProviderItem, {\n            dataContentList: dataContentList,\n            nameItemProvider: currentNameProvider,\n            setNameProvider: setNameProvider,\n            onChangeContentProvider: onChangeContentProvider,\n            arrIdContentProvider: arrIdContentProvider,\n            getListAdsGroups: getListAdsGroups,\n            handleScroll: handleScroll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AdsContentItem, {\n            listAdsGroup: listAdsGroups,\n            groupName: currentGroup,\n            setGroupAds: setGroupAds,\n            onChangeAdsItem: onChangeAdsItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusContentItem, {\n            onChangeStatus: onChangeStatus,\n            status: currentStatus,\n            setStatus: setStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end mt-3\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            className: \"pl-4 pr-4\",\n            color: \"success\",\n            onClick: handleSave,\n            children: \"L\\u01B0u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupEditContent, \"SgdfR8ihqV4Hqw/Bf+I4d1x21Yc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PopupEditContent;\nexport default PopupEditContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupEditContent\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/LiveManagementEvent/Popup/PopupEditContent.js"],"names":["React","useEffect","useState","CButton","CModal","CModalBody","CModalHeader","CIcon","useDispatch","useSelector","getContentProviderById","AdsContentItem","NameContentProviderItem","StatusContentItem","contentApi","parsedIdAdsGroups","parsedIdContentProvider","PopupEditContent","props","modal","setPopupEdit","listAdsGroups","dataContentList","getListAdsGroups","currentItemAds","currentItem","currentItemContentProvider","currentPage","rowPerPage","setCurrentPageList","keyWord","category","type","idContentProvider","idAdsGroup","handleScroll","status","group","idProvider","id","contentProviders","arrIdContentProvider","arrIdInStreamAds","dispatch","dataContent","state","Content","nameItemProvider","CONTENT_PROVIDER","name","itemContentProvider","setStatus","setGroupAds","setNameProvider","idContentProviders","setIdContentProvider","idInStreamAds","setIdInStreamAds","elementAds","setElementAds","handleChangeIdAdsGroups","onChangeContentProvider","item","arr","filter","ite","push","elm","idAds","undefined","splice","onChangeAdsItem","onChangeStatus","currentStatus","currentGroup","currentNameProvider","handleClose","handleSave","idContent","editContent","then","res","success","getContentList","resList","data","items","minWidth","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalHeader,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContentProviderById} from \"../../../actions/content\";\nimport AdsContentItem from \"../ContentList/ItemContentList/AdsContentItem\";\nimport NameContentProviderItem from \"../ContentList/ItemContentList/NameContentProviderItem\";\nimport StatusContentItem from \"../ContentList/ItemContentList/StatusContentItem\";\nimport contentApi from \"../../../apis/contentApi\";\nimport {parsedIdAdsGroups, parsedIdContentProvider} from \"../../../helpers/common\"\n\n\nconst PopupEditContent = (props) => {\n  const {\n    modal,\n    setPopupEdit,\n    listAdsGroups,\n    dataContentList,\n    getListAdsGroups,\n\n    currentItemAds,\n    currentItem,\n    currentItemContentProvider,\n    currentPage, rowPerPage, setCurrentPageList,\n    keyWord,\n    category,\n    type,\n    idContentProvider,\n    idAdsGroup,\n    handleScroll\n  } = props\n  const  { status, group} = currentItemAds || {}\n  const idProvider = currentItemContentProvider?.id\n  const {contentProviders} = currentItem || {}\n\n  const arrIdContentProvider = parsedIdContentProvider(contentProviders)\n  const arrIdInStreamAds = parsedIdAdsGroups(contentProviders)\n\n  const dispatch  = useDispatch()\n  const dataContent = useSelector(state => state?.Content)\n  const nameItemProvider =  dataContent?.CONTENT_PROVIDER?.name\n  const itemContentProvider = dataContent?.CONTENT_PROVIDER\n\n  useEffect(()=>{\n    setStatus(status)\n    setGroupAds(group)\n    setNameProvider(nameItemProvider)\n\n  },[status, group, nameItemProvider ])\n\n\n  useEffect(()=> {\n    if (idProvider) dispatch(getContentProviderById(idProvider))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[currentItemContentProvider])\n\n\n  const [idContentProviders, setIdContentProvider] = useState( [])\n  const [idInStreamAds, setIdInStreamAds] = useState([])\n\n  const [elementAds, setElementAds] = useState({\n    id: '',\n    status: null\n  })\n\n\n  useEffect(()=> {\n    if (elementAds?.id) handleChangeIdAdsGroups(elementAds)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[elementAds?.id, elementAds?.status])\n\n  const onChangeContentProvider = (item) => {\n    let arr = [...arrIdContentProvider]\n    arr = arr.filter(ite => ite !== itemContentProvider?.id)\n    arr.push(item?.id)\n    setIdContentProvider(arr)\n  }\n\n\n  const handleChangeIdAdsGroups = (elm) => {\n    let idAds = [...arrIdInStreamAds]\n    idAds = idAds.filter(ite => ite?.id !== currentItemAds?.id)\n    idAds.push(elm)\n    if (idAds[0]?.id === undefined){\n      idAds.splice(0,1)\n      setIdInStreamAds(idAds)\n    } else {\n      setIdInStreamAds(idAds)\n    }\n  }\n  const onChangeAdsItem = (item) => {\n    setElementAds({...elementAds, id: item?.id, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n  const onChangeStatus = (item) => {\n    setElementAds({...elementAds, status: item?.status})\n    handleChangeIdAdsGroups(elementAds)\n  }\n\n\n  const [currentStatus, setStatus] = useState(status || '')\n  const [currentGroup, setGroupAds] = useState(group || '')\n  const [currentNameProvider, setNameProvider] = useState(nameItemProvider || '')\n\n  const handleClose =() => {\n    setPopupEdit(false)\n  }\n  const handleSave = () => {\n    const idContent = currentItem?.id\n    contentApi?.editContent(idContent, idContentProviders, idInStreamAds).then(res=>{\n      if (res?.success){\n        contentApi?.getContentList(\n          currentPage -1,\n          rowPerPage,\n          keyWord,\n          category,\n          type,\n          idContentProvider,\n          idAdsGroup\n        ).then(\n          resList =>{\n            const data = resList?.data\n            if (resList?.success) {\n              setCurrentPageList(data?.items)\n            }\n          }\n        )\n        setPopupEdit(false)\n      }\n    })\n  }\n\n\n  return (\n    <React.Fragment>\n      <CModal\n          // size={'lg'}\n        show={modal}\n        onClose={handleClose}\n        centered={true}\n        closeOnBackdrop={false}\n        style={{minWidth: '555px'}}\n      >\n        <CModalHeader style={{ backgroundColor: '#646464' }}>\n          <div className=\"w-100 d-flex justify-content-between align-items-center\" style={{ color: \"#FFF\" }}>\n            <h4 className=\"mb-0\">Sửa Content</h4>\n            <CButton className='p-0 shadow-none' onClick={handleClose}>\n              <CIcon name=\"cil-x\" style={{ color: \"#FFF\" }}></CIcon>\n            </CButton>\n          </div>\n        </CModalHeader>\n        <CModalBody>\n          <div className={'d-flex flex-row'}>\n            <NameContentProviderItem\n              dataContentList={dataContentList}\n              nameItemProvider={currentNameProvider}\n              setNameProvider={setNameProvider}\n              onChangeContentProvider={onChangeContentProvider}\n              arrIdContentProvider={arrIdContentProvider}\n              getListAdsGroups={getListAdsGroups}\n              handleScroll={handleScroll}\n            />\n            <AdsContentItem\n              listAdsGroup={listAdsGroups}\n              groupName={currentGroup}\n              setGroupAds={setGroupAds}\n              onChangeAdsItem={onChangeAdsItem}\n            />\n            <StatusContentItem\n              onChangeStatus={onChangeStatus}\n              status={currentStatus} setStatus={setStatus}/>\n          </div>\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton className=\"pl-4 pr-4\" color=\"success\" onClick={handleSave}>Lưu</CButton>\n          </div>\n        </CModalBody>\n      </CModal>\n    </React.Fragment>\n  )\n}\nexport default PopupEditContent\n"]},"metadata":{},"sourceType":"module"}