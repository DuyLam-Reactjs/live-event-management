{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/ContentList/ListNameContentProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport contentApi from \"../../../apis/contentApi\";\nimport AutoCompleteMaterial from \"../autoCompleteMaterialUI/AutoCompleteMaterial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListNameContentProvider = props => {\n  _s();\n\n  const {\n    handleChangeListName,\n    dataContentList,\n    handleScroll,\n    parsedID\n  } = props;\n  const [nameProviderId, setNameProviderId] = useState('');\n  useEffect(() => {\n    if (parsedID === null || parsedID === void 0 ? void 0 : parsedID.id) {\n      contentApi.getContentProviderById(parsedID === null || parsedID === void 0 ? void 0 : parsedID.id).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.data;\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          setNameProviderId(data === null || data === void 0 ? void 0 : data.name);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pr-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ml-1 mb-2\",\n      children: \"Content provider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AutoCompleteMaterial, {\n      listData: dataContentList,\n      name: nameProviderId,\n      handleChangeContent: handleChangeListName,\n      setName: setNameProviderId,\n      handleScroll: handleScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListNameContentProvider, \"6uNFH6iNj6J4Le3OHFnIktgQmqs=\");\n\n_c = ListNameContentProvider;\nexport default ListNameContentProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListNameContentProvider\");","map":{"version":3,"sources":["/Users/admin/Desktop/SourceDevVieON/LiveEvent/src/views/instream-ads/ContentList/ListNameContentProvider.js"],"names":["React","useEffect","useState","contentApi","AutoCompleteMaterial","ListNameContentProvider","props","handleChangeListName","dataContentList","handleScroll","parsedID","nameProviderId","setNameProviderId","id","getContentProviderById","then","res","data","success","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,oBAAP,MAAiC,gDAAjC;;;AAGA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM;AACJC,IAAAA,oBADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAQA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACAD,EAAAA,SAAS,CAAC,MAAI;AACR,QAAIS,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEG,EAAd,EAAiB;AACbV,MAAAA,UAAU,CAACW,sBAAX,CAAkCJ,QAAlC,aAAkCA,QAAlC,uBAAkCA,QAAQ,CAAEG,EAA5C,EAAgDE,IAAhD,CAAqDC,GAAG,IAAE;AACtD,cAAMC,IAAI,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEC,IAAlB;;AACA,YAAID,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEE,OAAT,EAAiB;AACbN,UAAAA,iBAAiB,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,IAAP,CAAjB;AACH;AACJ,OALD;AAMH;AACJ,GATM,EASL,EATK,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,oBAAD;AACI,MAAA,QAAQ,EAAEX,eADd;AAEI,MAAA,IAAI,EAAEG,cAFV;AAGI,MAAA,mBAAmB,EAAEJ,oBAHzB;AAII,MAAA,OAAO,EAAEK,iBAJb;AAKI,MAAA,YAAY,EAAEH;AALlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlCD;;GAAMJ,uB;;KAAAA,uB;AAoCN,eAAeA,uBAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport contentApi from \"../../../apis/contentApi\";\nimport AutoCompleteMaterial from \"../autoCompleteMaterialUI/AutoCompleteMaterial\";\n\n\nconst ListNameContentProvider = (props) => {\n  const {\n    handleChangeListName,\n    dataContentList,\n    handleScroll,\n    parsedID\n  } = props\n\n\n  const [nameProviderId, setNameProviderId] = useState('')\n  useEffect(()=>{\n        if (parsedID?.id){\n            contentApi.getContentProviderById(parsedID?.id).then(res=>{\n                const data = res?.data\n                if (res?.success){\n                    setNameProviderId(data?.name)\n                }\n            })\n        }\n    },[])\n\n  return(\n    <div className=\"pr-2\">\n        <p className=\"ml-1 mb-2\">Content provider</p>\n        <AutoCompleteMaterial\n            listData={dataContentList}\n            name={nameProviderId}\n            handleChangeContent={handleChangeListName}\n            setName={setNameProviderId}\n            handleScroll={handleScroll}\n        />\n\n    </div>\n  )\n}\n\nexport default ListNameContentProvider\n"]},"metadata":{},"sourceType":"module"}